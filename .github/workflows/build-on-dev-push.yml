name: Build/Publish on push

on:
  push:
    branches:
      - "*dev*"
      - "*master*"
      - "*main*"
    tags:
      - "*"
jobs:
  job1:
    name: build_and_release
    runs-on: windows-latest

    env:
      configuration: Release
      Main_Project: Ui/Ui.csproj
      NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: recursive

      # Install the .NET Core workload
      - name: Install .NET Core
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 6.0.x

      # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
      - name: Setup MSBuild.exe
        uses: microsoft/setup-msbuild@v1.0.2

      # cache nuget packages
      - name: Cache nuget packages
        id: cache-nuget-packages
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('Ui/Ui.csproj') }}

      # Restore nuget packages
      - name: Restore nuget packages üì¶Ô∏è
        run: msbuild $env:Main_Project /t:Restore /p:Configuration=$env:Configuration

      # Publish the application
      - name: Publish the application
        run: dotnet publish $env:Main_Project -p:PublishProfile=./Ui/Properties/PublishProfiles/x64-single.file.application.pubxml

      # upload to artifact
      - uses: actions/upload-artifact@v3
        with:
          name: PRemoteM
          path: Ui/bin/Release/net6.0-windows/publish/win-x64

      # zip
      - name: Easy Zip Files
        uses: vimtor/action-zip@v1
        with:
          files: Ui/bin/Release/net6.0-windows/publish/win-x64
          dest: PRemoteM.zip

      # release
      - name: Create Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: PRemoteM.zip
          draft: false
          prerelease: true
