<protocol:ProtocolServerFormBase x:Class="PRM.Core.Protocol.Putty.ProtocolPuttyForm"
                        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                        xmlns:putty="clr-namespace:PRM.Core.Protocol.Putty"
                        xmlns:ssh="clr-namespace:PRM.Core.Protocol.Putty.SSH"
                        xmlns:protocol="clr-namespace:PRM.Core.Protocol"
                        mc:Ignorable="d" 
                        d:DesignHeight="1450" d:DesignWidth="800">
    <UserControl.Resources>



        <protocol:ImageTextBoxMarginLeftConverter x:Key="ITBMLC"/>
        <protocol:PlaceholderFontSizeConverter x:Key="PHFSC"/>

        <SolidColorBrush x:Key="PasswordBox.Static.Foreground" Color="Black"/>
        <SolidColorBrush x:Key="PasswordBox.Static.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="PasswordBox.Static.SelectionBrush" Color="#808F8787"/>

        <SolidColorBrush x:Key="PasswordBox.Static.BorderBrush" Color="#FF909090"/>
        <SolidColorBrush x:Key="PasswordBox.Focused.BorderBrush" Color="#FF007ACC"/>
        <SolidColorBrush x:Key="PasswordBox.MouseOver.BorderBrush" Color="#FF1E1E1E"/>

        <Style TargetType="{x:Type PasswordBox}" x:Key="DefaultPasswordBox">
            <Setter Property="SelectionBrush" Value="{StaticResource PasswordBox.Static.SelectionBrush}"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="FontSize" Value="22"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="PasswordChar" Value="●"/>
            <Setter Property="Background" Value="{StaticResource PasswordBox.Static.Background}"/>
            <Setter Property="Foreground" Value="{StaticResource PasswordBox.Static.Foreground}"/>
            <Setter Property="BorderBrush" Value="{StaticResource PasswordBox.Static.BorderBrush}"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="CaretBrush" Value="{StaticResource PasswordBox.Static.Foreground}"/>
            <Setter Property="protocol:PasswordBoxHelper.Attach" Value="True"/>
            <Setter Property="protocol:PasswordBoxHelper.Password" Value="{Binding Path=Password,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type PasswordBox}">
                        <Border x:Name="PART_Root" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            CornerRadius="{TemplateBinding protocol:ControlAttachProperty.CornerRadius}"
                            BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}">
                            <Grid x:Name="PART_InnerGrid">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="{Binding Path=(protocol:ControlAttachProperty.CornerRadius).TopLeft, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ITBMLC}}"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition  Width="Auto"/>
                                    <ColumnDefinition  Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <!--内容区域-->
                                <ScrollViewer x:Name="PART_ContentHost" Grid.Column="1" Margin="2"
                                          BorderThickness="0" IsTabStop="False"
                                          VerticalAlignment="Stretch" Background="{x:Null}"
                                          VerticalContentAlignment="Center"/>

                                <TextBlock x:Name="PART_PlaceHolder" Grid.Column="1" Foreground="Black"
                                       IsHitTestVisible="False" Margin="3,0,3,0"
                                       HorizontalAlignment="Left" VerticalAlignment="Center"
                                       SnapsToDevicePixels="True"
                                       Visibility="Collapsed" Opacity="0.6"
                                       TextAlignment="Center"
                                       Text="{Binding Path=(protocol:ControlAttachProperty.PlaceHolder), RelativeSource={RelativeSource TemplatedParent}}"
                                       FontSize="{Binding FontSize, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource PHFSC}}"/>

                                <!--附加内容区域-->
                                <!--<Border x:Name="PART_AttachContent" Grid.Column="2" Margin="1"
                                    HorizontalAlignment="Center" VerticalAlignment="Center">
                                <ContentControl VerticalAlignment="Center" VerticalContentAlignment="Center"
                                                Template="{TemplateBinding controls:ControlAttachProperty.AttachContent}"/>
                            </Border>-->
                                <!--<controls:ImageButton x:Name="PART_ClearTextButton" IsTabStop="False" Grid.Column="2"
                                          protocol:ControlAttachProperty.IsClearButtonEnabled="True"
                                          FontFamily="/ImageButtonTest01;component/Resources/#iconfont"
                                          Content="" FontSize="20" IsEnabled="True"
                                          HorizontalAlignment="Right"
                                          VerticalAlignment="Center"
                                          Command="controls:ControlAttachProperty.ClearTextCommand"
                                          CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type PasswordBox}}}"
                                          Style="{StaticResource ImageButtonTransparent}"/>-->
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!--<DataTrigger Binding="{Binding Path=controls:PasswordBoxHelper.Password, RelativeSource={RelativeSource TemplatedParent}}" Value="">
                            <Setter TargetName="PART_PlaceHolder" Property="Visibility" Value="Visible"/>
                        </DataTrigger>-->
                            <Trigger Property="protocol:PasswordBoxHelper.Password"  Value="">
                                <Setter TargetName="PART_PlaceHolder" Property="Visibility" Value="Visible"/>
                                <!--<Setter TargetName="PART_ClearTextButton" Property="IsEnabled" Value="False"/>-->
                            </Trigger>

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter  Property="BorderBrush" Value="{StaticResource PasswordBox.MouseOver.BorderBrush}"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter  Property="BorderBrush" Value="{StaticResource PasswordBox.Focused.BorderBrush}"/>
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="PART_Root" Property="Opacity" Value="0.4"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ClearButtonPasswordBox" TargetType="{x:Type PasswordBox}" BasedOn="{StaticResource DefaultPasswordBox}">
            <Setter Property="protocol:ControlAttachProperty.AttachContent">
                <Setter.Value>
                    <ControlTemplate>
                        <!--<controls:ImageButton x:Name="PART_ClearTextButton" IsTabStop="False"
                                          controls:ControlAttachProperty.IsClearButtonEnabled="True"
                                          FontFamily="/ImageButtonTest01;component/Resources/#iconfont"
                                          Content="" FontSize="20"
                                          HorizontalAlignment="Right"
                                          VerticalAlignment="Center"
                                          Command="controls:ControlAttachProperty.ClearTextCommand"
                                          CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type PasswordBox}}}"
                                          Style="{StaticResource ImageButtonTransparent}">
                        <controls:ImageButton.IsEnabled>
                            <MultiBinding Converter="{StaticResource CBET}">
                                <Binding Path="controls:PasswordBoxHelper.Password" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type PasswordBox}}"/>
                            </MultiBinding>
                        </controls:ImageButton.IsEnabled>
                    </controls:ImageButton>-->
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="EyePasswordBox" TargetType="{x:Type PasswordBox}">
            <Setter Property="SelectionBrush" Value="{StaticResource PasswordBox.Static.SelectionBrush}"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="FontSize" Value="22"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="PasswordChar" Value="●"/>
            <Setter Property="Background" Value="{StaticResource PasswordBox.Static.Background}"/>
            <Setter Property="Foreground" Value="{StaticResource PasswordBox.Static.Foreground}"/>
            <Setter Property="BorderBrush" Value="{StaticResource PasswordBox.Static.BorderBrush}"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="CaretBrush" Value="{StaticResource PasswordBox.Static.Foreground}"/>
            <Setter Property="protocol:PasswordBoxHelper.Attach" Value="True"/>
            <Setter Property="protocol:PasswordBoxHelper.Password" Value="{Binding Path=Password,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type PasswordBox}">
                        <Border x:Name="PART_Root" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                    CornerRadius="{TemplateBinding protocol:ControlAttachProperty.CornerRadius}"
                    BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                    Background="{TemplateBinding Background}">
                            <Grid x:Name="PART_InnerGrid">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="{Binding Path=(protocol:ControlAttachProperty.CornerRadius).TopLeft, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ITBMLC}}"/>
                                    <ColumnDefinition  Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition  Width="Auto"/>
                                    <ColumnDefinition Width="{Binding Path=(protocol:ControlAttachProperty.CornerRadius).TopLeft, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ITBMLC}}"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock x:Name="PART_ContentIdentity" Grid.Column="1"
                                FontSize="20"
                                FontFamily="/ImageButtonTest01;component/Resources/#iconfont"
                                Text=""
                                HorizontalAlignment="Center" VerticalAlignment="Center"/>

                                <!--内容区域-->
                                <ScrollViewer x:Name="PART_ContentHost" Grid.Column="2" Margin="2"
                                    BorderThickness="0" IsTabStop="False"
                                    VerticalAlignment="Stretch" Background="{x:Null}"
                                    VerticalContentAlignment="Center"/>

                                <!--显示密码明文-->
                                <TextBox x:Name="PART_PasswordShower" Grid.Column="2"
                                IsTabStop="True" Focusable="False"
                                Margin="2" Padding="0"
                                HorizontalAlignment="Stretch" VerticalAlignment="Center"
                                BorderBrush="Transparent" BorderThickness="0"
                                Visibility="Collapsed" IsHitTestVisible="False"
                                Width="{Binding CaretIndex, RelativeSource={RelativeSource TemplatedParent}}"
                                Text="{Binding Path=(protocol:PasswordBoxHelper.Password), RelativeSource={RelativeSource TemplatedParent}}"
                                FontSize="{TemplateBinding FontSize}"
                                CaretBrush="Transparent"/>

                                <TextBlock x:Name="PART_PlaceHolder" Grid.Column="2" Foreground="Black"
                                IsHitTestVisible="False" Margin="3,0,3,0"
                                HorizontalAlignment="Left" VerticalAlignment="Center"
                                SnapsToDevicePixels="True"
                                Visibility="Collapsed" Opacity="0.6"
                                TextAlignment="Center"
                                Text="{Binding Path=(protocol:ControlAttachProperty.PlaceHolder), RelativeSource={RelativeSource TemplatedParent}}"
                                FontSize="{Binding FontSize, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource PHFSC}}"/>

                                <!--附加内容区域-->
                                <ToggleButton x:Name="PART_EyeToggle" Grid.Column="3"
                                    IsTabStop="True" Focusable="False"
                                    BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="Red"
                                    Foreground="Black" FontWeight="Medium"
                                    IsEnabled="True"
                                    IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                    Width="20" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="protocol:PasswordBoxHelper.Password" Value="">
                                <Setter TargetName="PART_PlaceHolder" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="PART_EyeToggle" Property="IsEnabled" Value="False"/>
                            </Trigger>

                            <DataTrigger Binding="{Binding IsChecked, ElementName=PART_EyeToggle}" Value="True">
                                <Setter TargetName="PART_PasswordShower" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="PART_PasswordShower" Property="IsHitTestVisible" Value="True"/>
                                <Setter TargetName="PART_PasswordShower" Property="CaretBrush" Value="Black"/>
                                <Setter TargetName="PART_PasswordShower" Property="Focusable" Value="True"/>
                                <Setter  Property="BorderBrush" Value="{StaticResource PasswordBox.Focused.BorderBrush}"/>
                            </DataTrigger>

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter  Property="BorderBrush" Value="{StaticResource PasswordBox.MouseOver.BorderBrush}"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter  Property="BorderBrush" Value="{StaticResource PasswordBox.Focused.BorderBrush}"/>
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="PART_Root" Property="Opacity" Value="0.4"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="PasswordBoxToggleButtonStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Background="Transparent" Margin="2">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock x:Name="txt" Grid.Column="1"
                                           HorizontalAlignment="Center" VerticalAlignment="Center"
                                           FontFamily="/ImageButtonTest01;component/Resources/#iconfont"
                                           Text="" FontSize="20"
                                           Foreground="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}"/>
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="txt" Property="Text" Value=""/>
                                <Setter TargetName="txt" Property="Foreground" Value="{StaticResource ComboToggleButton.Checked.Foreground}"/>
                            </Trigger>

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="txt" Property="Foreground" Value="{StaticResource ComboToggleButton.MouseMove.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
        <StackPanel>
        <StackPanel.Resources>
            <ResourceDictionary>
                <ResourceDictionary.MergedDictionaries>
                    <ResourceDictionary Source="pack://application:,,,/PRM.Core;component/Resources/Style/ServerEditorStyle.xaml"></ResourceDictionary>
                </ResourceDictionary.MergedDictionaries>
            </ResourceDictionary>
        </StackPanel.Resources>

        <StackPanel>

            <TextBlock Style="{StaticResource ServerEditorGroupTitle}" Text="{DynamicResource server_editor_group_title_connection}"></TextBlock>

            <Grid Style="{StaticResource ServerEditorRow}">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Style="{StaticResource ServerEditorRowTitle}" Text="{DynamicResource server_editor_connection_address}"></TextBlock>
                    <Grid Style="{StaticResource ServerEditorRowInput}">
                        <TextBox Text="{Binding Address,UpdateSourceTrigger=PropertyChanged}"></TextBox>
                    </Grid>
                    <TextBlock Style="{StaticResource ServerEditorRowTitle}" Width="80" Text="{DynamicResource server_editor_connection_port}"></TextBlock>
                    <Grid Style="{StaticResource ServerEditorRowInput}">
                        <TextBox Text="{Binding Port,UpdateSourceTrigger=PropertyChanged,ValidatesOnExceptions=True,NotifyOnValidationError=True}" 
                                 Width="50" HorizontalAlignment="Left"
                                 InputMethod.IsInputMethodEnabled="False"
                                 InputScope="Number"
                                 ></TextBox>
                    </Grid>
                </StackPanel>
            </Grid>

            <Grid Style="{StaticResource ServerEditorRow}" Name="GridUserName">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Style="{StaticResource ServerEditorRowTitle}" Text="{DynamicResource server_editor_connection_username}"></TextBlock>
                    <Grid Style="{StaticResource ServerEditorRowInput}">
                        <TextBox Text="{Binding UserName,UpdateSourceTrigger=PropertyChanged}"></TextBox>
                    </Grid>
                </StackPanel>
            </Grid>

            <Grid Name="GridPwd">
                <Grid.Style>
                    <Style TargetType="Grid" BasedOn="{StaticResource ServerEditorRow}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=CbUsePrivateKey,Path= IsChecked}" Value="True">
                                <Setter Property="Visibility" Value="Collapsed"></Setter>
                                <Setter Property="IsEnabled" Value="False"></Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Style="{StaticResource ServerEditorRowTitle}" Text="{DynamicResource server_editor_connection_password}"></TextBlock>
                    <Grid Style="{StaticResource ServerEditorRowInput}">
                        <PasswordBox Name="PasswordBox" PasswordChanged="PasswordBox_OnPasswordChanged"></PasswordBox>
                    </Grid>
                </StackPanel>
            </Grid>
            <Grid Height="60">
                <Grid.Style>
                    <Style TargetType="Grid" BasedOn="{StaticResource ServerEditorRow}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=CbUsePrivateKey,Path= IsChecked}" Value="True">
                                <Setter Property="Visibility" Value="Collapsed"></Setter>
                                <Setter Property="IsEnabled" Value="False"></Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <StackPanel Orientation="Horizontal">
                    <PasswordBox x:Name="usrPassword3" Width="150" Height="40"
                                 Style="{StaticResource EyePasswordBox}"
                                 Margin="3"
                                 protocol:ControlAttachProperty.PlaceHolder="请输入密码"
                                 protocol:ControlAttachProperty.CornerRadius="10"
                                 IsEnabled="True"/>
                    <PasswordBox x:Name="usrPassword4" Width="150" Height="40"
                                 Style="{StaticResource EyePasswordBox}"
                                 Margin="3"
                                 protocol:ControlAttachProperty.PlaceHolder="请输入密码"
                                 IsEnabled="True"/>

                </StackPanel>
            </Grid>


            <Grid Style="{StaticResource ServerEditorRow}" Name="GridPrivateKey" Height="Auto">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Style="{StaticResource ServerEditorRowTitle}" Text="{DynamicResource server_editor_connection_private_key}"></TextBlock>
                    <StackPanel>
                        <CheckBox Name="CbUsePrivateKey" Content="{DynamicResource server_editor_connection_private_key_checker}" 
                                  Unchecked="CbUsePrivateKey_OnChecked"></CheckBox>
                        <Grid>
                            <Grid.Style>
                                <Style TargetType="Grid">
                                    <Setter Property="Visibility" Value="Collapsed"></Setter>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=CbUsePrivateKey,Path= IsChecked}" Value="True">
                                            <Setter Property="Visibility" Value="Visible"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>
                            <StackPanel>
                                <Button Content="{DynamicResource button_open}" Click="ButtonOpenPrivateKey_OnClick"></Button>
                                <TextBox Text="{Binding PrivateKey}" Height="100" Width="300" 
                                         HorizontalContentAlignment="Left" VerticalContentAlignment="Top"
                                         TextWrapping="Wrap" AcceptsReturn="True" VerticalScrollBarVisibility="Hidden"></TextBox>
                            </StackPanel>
                        </Grid>
                    </StackPanel>
                </StackPanel>
            </Grid>
        </StackPanel>

        <StackPanel Name="SpSsh">
            <TextBlock Style="{StaticResource ServerEditorGroupTitle}" Text="{DynamicResource server_editor_group_title_advantage}"></TextBlock>
            <Grid Style="{StaticResource ServerEditorRow}">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Style="{StaticResource ServerEditorRowTitle}" Text="{DynamicResource server_editor_advantage_ssh_version}"></TextBlock>
                    <Grid Style="{StaticResource ServerEditorRowInput}">
                        <Grid.Resources>
                            <putty:ConverterESshVersion x:Key="ConverterESshVersion"/>
                        </Grid.Resources>
                        <ComboBox SelectedIndex="{Binding SshVersion, Converter={StaticResource ConverterESshVersion}}">
                            <ComboBoxItem Content="V1"/>
                            <ComboBoxItem Content="V2"/>
                        </ComboBox>
                    </Grid>
                </StackPanel>
            </Grid>
        </StackPanel>
    </StackPanel>
</protocol:ProtocolServerFormBase>
