<Window x:Class="PRM.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:controls1="clr-namespace:PRM.Controls"
        mc:Ignorable="d"
        BorderThickness="0"
        BorderBrush="Transparent"
        x:Name="Window"
        Title="MainWindow" Height="500" Width="680" MinWidth="520" MinHeight="300">
    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="0" ResizeBorderThickness="5" UseAeroCaptionButtons="False"/>
    </WindowChrome.WindowChrome>
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Styles/MinHorizontalScrollViewerStyle.xaml"></ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
            <RoutedUICommand x:Key="CommandFocusFilter" Text="Focus on filter"/>
        </ResourceDictionary>
    </Window.Resources>
    <Window.CommandBindings>
        <!--  TODO 添加 CanExecute 当不在主页时禁止命令 -->
        <CommandBinding Command="{StaticResource CommandFocusFilter}" Executed="CommandFocusFilter_OnExecuted"></CommandBinding>
    </Window.CommandBindings>
    <Window.InputBindings>
        <!-- map ctrl + f to focus on filter-->
        <KeyBinding Gesture="Ctrl+F" Command="{StaticResource CommandFocusFilter}"></KeyBinding>
    </Window.InputBindings>

    <Border>
        <Border.Style>
            <Style TargetType="Border">
                <Setter Property="BorderBrush" Value="#333"></Setter>
                <Setter Property="BorderThickness" Value="1"></Setter>
                <Setter Property="Margin" Value="0"></Setter>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}, Path=WindowState}" Value="Maximized">
                        <Setter Property="Margin">
                            <Setter.Value>
                                <Thickness Left="6" Top="6" Right="6" Bottom="0"></Thickness>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="BorderThickness" Value="0"></Setter>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Border.Style>


        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="30"></RowDefinition>
                <RowDefinition Height="20"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
            </Grid.RowDefinitions>


            <Grid Background="{DynamicResource MainColor1}" Name="WinTitleBar" PreviewMouseDown="System_MouseDown">
                <StackPanel Orientation="Horizontal">
                    <Grid Background="Aquamarine" Width="25" Height="25" Margin="2">
                        <!--<Image Source="pack://application:,,,/PRM.Core;component/Resources/Logo/logo40.png"></Image>-->
                    </Grid>

                    <Label VerticalContentAlignment="Center" Margin="5,0,105,0" Foreground="{DynamicResource MainColor1Foreground}">
                        <TextBlock Text="{Binding Title, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
                    </Label>
                </StackPanel>
            </Grid>

            <!-- System Button Area -->
            <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Right" Background="{DynamicResource MainColor1}">
                <StackPanel.Resources>
                    <Style TargetType="{x:Type Button}" x:Key="WinTitleBarBtnStyle">
                        <Setter Property="Padding" Value="0"/>
                        <Setter Property="Width" Value="35"/>
                        <Setter Property="Height" Value="25"/>
                        <Setter Property="HorizontalAlignment" Value="Right"/>
                        <Setter Property="VerticalAlignment" Value="Top"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border Background="{TemplateBinding Background}"  BorderThickness="0">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="Button.IsMouseOver" Value="True">
                                <Setter Property="Button.Background" Value="{DynamicResource MainBgColor}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Resources>

                <Grid Height="25" VerticalAlignment="Top" Width="150">
                    <TextBox Name="TbFilter" Width="140" Height="20" 
                        Text="{Binding DispNameFilter, UpdateSourceTrigger=PropertyChanged}"
                        KeyUp="TbFilter_OnKeyUp"
                        VerticalAlignment="Center" HorizontalAlignment="Center" HorizontalContentAlignment="Left">
                        <TextBox.Resources>
                            <VisualBrush x:Key="HintText" TileMode="None" Stretch="None" AlignmentX="Left">
                                <VisualBrush.Visual>
                                    <TextBlock FontStyle="Italic" Text="{DynamicResource info_filter}"/>
                                </VisualBrush.Visual>
                            </VisualBrush>
                        </TextBox.Resources>
                        <TextBox.Style>
                            <Style TargetType="{x:Type TextBox}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type TextBox}">

                                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                                <Grid>
                                                    <Grid x:Name="grid0" Background="#fff" Opacity="{TemplateBinding Opacity}">
                                                    </Grid>
                                                    <Grid x:Name="grid1" Background="{TemplateBinding Background}" Opacity="{TemplateBinding Opacity}">
                                                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                                                    </Grid>
                                                </Grid>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Opacity" Value="0.5"></Setter>
                                <Setter Property="Background" Value="Transparent"></Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="BorderBrush" Value="{DynamicResource MainBgColor}"/>
                                        <Setter Property="Opacity" Value="0.6"></Setter>
                                    </Trigger>
                                    <Trigger Property="IsFocused" Value="True">
                                        <Setter Property="BorderBrush" Value="{DynamicResource MainColor2}"/>
                                        <Setter Property="Opacity" Value="0.6"></Setter>
                                    </Trigger>
                                    <Trigger Property="Text" Value="{x:Null}">
                                        <Setter Property="Background" Value="{StaticResource HintText}"/>
                                    </Trigger>
                                    <Trigger Property="Text" Value="">
                                        <Setter Property="Background" Value="{StaticResource HintText}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                </Grid>
                <Button Name="BtnSetting" Click="BtnSetting_OnClick">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource WinTitleBarBtnStyle}">
                            <Setter Property="Background" Value="{DynamicResource MainColor1}"></Setter>
                            <Style.Triggers>
                                <Trigger Property="Button.IsMouseOver" Value="True">
                                    <Setter Property="Button.Background" Value="{DynamicResource MainBgColor}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <Canvas Height="25" Width="35" >
                        <Line X1="12" Y1="8" X2="22" Y2="8" Stroke="{DynamicResource MainColor1Foreground}" StrokeThickness="1"/>
                        <Line X1="12" Y1="13" X2="22" Y2="13" Stroke="{DynamicResource MainColor1Foreground}" StrokeThickness="1"/>
                        <Line X1="12" Y1="18" X2="22" Y2="18" Stroke="{DynamicResource MainColor1Foreground}" StrokeThickness="1"/>
                    </Canvas>
                </Button>

                <Button Name="BtnMinimize">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource WinTitleBarBtnStyle}">
                            <Setter Property="Background" Value="{DynamicResource MainColor1}"></Setter>
                            <Style.Triggers>
                                <Trigger Property="Button.IsMouseOver" Value="True">
                                    <Setter Property="Button.Background" Value="{DynamicResource MainBgColor}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <Rectangle Width="11" Stroke="{DynamicResource MainColor1Foreground}" StrokeThickness="0.75"/>
                </Button>

                <Button Name="BtnMaximize">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource WinTitleBarBtnStyle}">
                            <Setter Property="Background" Value="{DynamicResource MainColor1}"></Setter>
                            <Style.Triggers>
                                <Trigger Property="Button.IsMouseOver" Value="True">
                                    <Setter Property="Button.Background" Value="{DynamicResource MainBgColor}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <Grid>
                        <Rectangle Width="11" Height="11" Stroke="{DynamicResource MainColor1Foreground}" StrokeThickness="0.75">
                            <Rectangle.Style>
                                <Style TargetType="Rectangle">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}, Path=WindowState}" Value="Maximized">
                                            <Setter Property="Visibility" Value="Hidden"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Rectangle.Style>
                        </Rectangle>

                        <Canvas>
                            <Canvas.Style>
                                <Style TargetType="Canvas">
                                    <Setter Property="Visibility" Value="Hidden"></Setter>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}, Path=WindowState}" Value="Maximized">
                                            <Setter Property="Visibility" Value="Visible"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Canvas.Style>
                            <Polyline Points="2.375,2 2.375,0.375 10.625,0.375 10.625,8.625 9,8.625" StrokeThickness="0.75" Stroke="{DynamicResource MainColor1Foreground}"/>
                            <Rectangle Width="9" Height="9" Stroke="{DynamicResource MainColor1Foreground}" StrokeThickness="0.75" Margin="0,2,2,0"/>
                        </Canvas>
                    </Grid>
                </Button>

                <Button Name="BtnClose">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource WinTitleBarBtnStyle}">
                            <Setter Property="Background" Value="{DynamicResource MainColor1}"></Setter>
                            <Style.Triggers>
                                <Trigger Property="Button.IsMouseOver" Value="True">
                                    <Setter Property="Button.Background" Value="Red" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <Canvas Height="25" Width="35" >
                        <Line X1="12" Y1="8" X2="22" Y2="18" Stroke="{DynamicResource MainColor1Foreground}" StrokeThickness="0.75"/>
                        <Line X1="12" Y1="18" X2="22" Y2="8" Stroke="{DynamicResource MainColor1Foreground}" StrokeThickness="0.75"/>
                    </Canvas>
                </Button>
            </StackPanel>



            <Grid Background="#ced8e1" Grid.Row="2">
                <ListView ItemsSource="{Binding DispServerList}" 
                      Padding="10"
                      BorderThickness="0"
                      Background="Transparent"
                      ScrollViewer.HorizontalScrollBarVisibility="Hidden" Grid.ColumnSpan="2" Margin="0,0,0,0.5"
                      >
                    <ListView.Resources>
                        <Style TargetType="ListViewItem">
                            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ListViewItem">
                                        <ContentPresenter 
                                                Content="{TemplateBinding ContentControl.Content}" 
                                                ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" 
                                                ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" 
                                                HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" 
                                                VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" 
                                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListView.Resources>
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel Orientation="Horizontal" Width="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType=ListView}, Path=ActualWidth}"/>
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.Style>
                                    <Style TargetType="Grid">
                                        <Setter Property="Visibility" Value="Hidden"></Setter>
                                        <Setter Property="Height" Value="164"></Setter>
                                        <!--determine this item's visibility-->
                                        <Setter Property="Width" Value="0"></Setter>
                                        <Style.Triggers>
                                            <DataTrigger>
                                                <DataTrigger.Binding>
                                                    <MultiBinding Converter="{StaticResource ConverterStringIsContainXXX}">
                                                        <Binding Path="Server"></Binding>
                                                        <Binding Path="DataContext.DispNameFilter" ElementName="Window"></Binding>
                                                        <Binding Path="DataContext.SelectedGroup" ElementName="Window"></Binding>
                                                    </MultiBinding>
                                                </DataTrigger.Binding>
                                                <DataTrigger.Value>True</DataTrigger.Value>
                                                <Setter Property="Visibility" Value="Visible"></Setter>
                                                <Setter Property="Width" Value="165"></Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                        <!--determine this item's visibility end -->
                                    </Style>
                                </Grid.Style>

                                <controls1:ServerCard VmServerCard="{Binding}">
                                </controls1:ServerCard>
                            </Grid>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ListView>
            </Grid>


            <Grid Grid.Row="1" Grid.RowSpan="2" VerticalAlignment="Top">
                <Border BorderThickness="0 0 0 1" BorderBrush="{DynamicResource MainColor2}" Background="{DynamicResource MainColor1Foreground}" Height="20">
                    <Border.Effect>
                        <DropShadowEffect ShadowDepth="3" Direction="270"  Opacity="0.6" Color="Black"></DropShadowEffect>
                    </Border.Effect>
                </Border>

                <Border BorderThickness="0 0 0 2" BorderBrush="{DynamicResource MainColor2}" Background="{DynamicResource MainColor1}">
                    <Grid Height="20">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="80"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Button Padding="0 1 0 0"
                                Click="BtnAllServer_Click"
                                BorderThickness="0" Content="{DynamicResource tab_all}">
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Setter Property="FocusVisualStyle" Value="{x:Null}"></Setter>
                                    <Setter Property="Background" Value="{DynamicResource MainColor1}"/>
                                    <Setter Property="Foreground" Value="{DynamicResource MainColor1Foreground}"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Border Background="{TemplateBinding Background}"  BorderThickness="0">
                                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="{StaticResource MainBgColor}"></Setter>
                                        </Trigger>
                                        <DataTrigger Binding="{Binding SelectedGroup}" Value="">
                                            <Setter Property="Background" Value="{StaticResource MainColor2}"></Setter>
                                            <Setter Property="Foreground" Value="{DynamicResource MainColor2Foreground}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding SelectedGroup}" Value="{x:Null}">
                                            <Setter Property="Background" Value="{StaticResource MainColor2}"></Setter>
                                            <Setter Property="Foreground" Value="{DynamicResource MainColor2Foreground}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>

                        <ScrollViewer Grid.Column="1" HorizontalScrollBarVisibility="Auto" 
                                      Height="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType=Grid}, Path=Height}"
                                      Style="{StaticResource MinHorizontalScrollViewerStyle}">
                            <StackPanel Orientation="Horizontal">
                                <ListBox 
                                    IsSynchronizedWithCurrentItem="True"
                                    ItemsSource="{Binding ServerGroups}" 
                                    SelectedValue="{Binding SelectedGroup}"
                                    Background="{StaticResource MainColor1}"
                                    Height="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType=ScrollViewer}, Path=Height}"
                                    ScrollViewer.VerticalScrollBarVisibility="Hidden"
                                    ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                                    BorderThickness="0"
                                    Margin="0"
                                    Padding="0">
                                    <ListBox.Style>
                                        <Style TargetType="ListBox">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ListBox">
                                                        <ItemsPresenter/>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ListBox.Style>
                                    <ListBox.Resources>
                                        <Style TargetType="ListBoxItem">
                                            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ListBoxItem">
                                                        <Border BorderThickness="0" Margin="{TemplateBinding Margin}"
                                                        Padding="{TemplateBinding Control.Padding}" 
                                                        Background="{TemplateBinding Panel.Background}" 
                                                        Name="Bd" 
                                                        SnapsToDevicePixels="True">
                                                            <ContentPresenter 
                                                                Content="{TemplateBinding ContentControl.Content}" 
                                                                ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" 
                                                                ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" 
                                                                HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" 
                                                                VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" 
                                                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="Selector.IsSelected" Value="True">
                                                                <Setter Property="Opacity" TargetName="Bd" Value="1"></Setter>
                                                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource MainColor2}"></Setter>
                                                            </Trigger>
                                                            <Trigger Property="UIElement.IsMouseOver" Value="True">
                                                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource MainBgColor}"></Setter>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>

                                            <Setter Property="Foreground" Value="{StaticResource MainColor1Foreground}"></Setter>
                                            <Style.Triggers>
                                                <Trigger Property="IsSelected" Value="True">
                                                    <Setter Property="Foreground" Value="{StaticResource MainColor2Foreground}"></Setter>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ListBox.Resources>
                                    <ListBox.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel Orientation="Horizontal"></StackPanel>
                                        </ItemsPanelTemplate>
                                    </ListBox.ItemsPanel>

                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Grid>
                                                <TextBlock Margin="15 0" 
                                                           Foreground="{Binding Path=Foreground,RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" 
                                                           FontWeight="{Binding Path=FontWeight,RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}"
                                                           Text="{Binding}"></TextBlock>
                                            </Grid>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ListBox>
                            </StackPanel>
                        </ScrollViewer>
                    </Grid>
                </Border>
            </Grid>


            <!--<Grid Grid.Row="2">
                <StackPanel>
                    <controls:LogoSelector Width="180" Height="180" Name="LogoSelector"></controls:LogoSelector>
                    <Button Click="ButtonBase_OnClick">test</Button>
                    <Border Width="144" Height="144" BorderThickness="1" BorderBrush="Red">
                        <Image Name="ImgRet" ></Image>
                    </Border>
                </StackPanel>
            </Grid>-->

        </Grid>
    </Border>

</Window>
