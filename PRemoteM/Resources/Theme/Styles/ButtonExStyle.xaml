<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:PRM.Core.Resources.Controls;assembly=PRM.Core">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="BaseStyle.xaml"></ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>



    <!--ButtonEx Style Start-->
    <Style TargetType="{x:Type controls:ButtonEx}" x:Key="ButtonExStyleBase" BasedOn="{StaticResource ControlBaseXXX}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Opacity" Value="1"></Setter>
        <Setter Property="Padding" Value="5"></Setter>
        <Setter Property="BorderBrush" Value="Gray"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryMidBrush}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BackgroundOnMouseOver" Value="{DynamicResource PrimaryLightBrush}"/>
        <Setter Property="ForegroundOnMouseOver" Value="{DynamicResource PrimaryTextBrush}"/>
        <Setter Property="OpacityOnMouseOver" Value="1"/>
        <Setter Property="BackgroundOnPressed" Value="{DynamicResource PrimaryLightBrush}"/>
        <Setter Property="ForegroundOnPressed" Value="{DynamicResource PrimaryTextBrush}"/>
        <Setter Property="OpacityOnPressed" Value="0.5"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="Grid">
                        <Border 
                        x:Name="ButtonBorder"
                        Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{Binding BorderCornerRadius, RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                        SnapsToDevicePixels="true">
                        </Border>
                        <ContentPresenter 
                            x:Name="ButtonContentPresenter"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True" 
                            TextBlock.Foreground="{TemplateBinding Foreground}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                            Margin="{TemplateBinding Padding}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"></Condition>
                                <Condition Property="IsEnabled" Value="True"></Condition>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="ButtonBorder" Property="Background" Value="{Binding Background, RelativeSource={x:Static RelativeSource.TemplatedParent}}"/>
                                <Setter TargetName="ButtonContentPresenter" Property="TextBlock.Foreground" Value="{Binding Foreground, RelativeSource={x:Static RelativeSource.TemplatedParent}}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="True"></Condition>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="ButtonBorder" Property="Background" Value="{Binding Background, RelativeSource={x:Static RelativeSource.TemplatedParent}}"/>
                                <Setter TargetName="ButtonContentPresenter" Property="TextBlock.Foreground" Value="{Binding Foreground, RelativeSource={x:Static RelativeSource.TemplatedParent}}"/>
                                <Setter TargetName="Grid" Property="Opacity" Value="{Binding OpacityOnPressed, RelativeSource={x:Static RelativeSource.TemplatedParent}}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ButtonBorder" Property="Background" Value="{Binding BackgroundOnDisabled, RelativeSource={x:Static RelativeSource.TemplatedParent}}"/>
                            <Setter TargetName="ButtonContentPresenter" Property="TextBlock.Foreground" Value="{Binding ForegroundOnDisabled, RelativeSource={x:Static RelativeSource.TemplatedParent}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"></Condition>
                    <Condition Property="IsEnabled" Value="True"></Condition>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Opacity" Value="{Binding OpacityOnMouseOver, RelativeSource={x:Static RelativeSource.Self}}"/>
                    <Setter Property="Foreground" Value="{Binding ForegroundOnMouseOver, RelativeSource={x:Static RelativeSource.Self}}"/>
                </MultiTrigger.Setters>
            </MultiTrigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Opacity" Value="{Binding OpacityOnPressed, RelativeSource={x:Static RelativeSource.Self}}"/>
                <Setter Property="Foreground" Value="{Binding ForegroundOnPressed, RelativeSource={x:Static RelativeSource.Self}}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="{Binding OpacityOnDisabled, RelativeSource={x:Static RelativeSource.Self}}"/>
                <Setter Property="Foreground" Value="{Binding ForegroundOnDisabled, RelativeSource={x:Static RelativeSource.Self}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type controls:ButtonEx}" BasedOn="{StaticResource ButtonExStyleBase}"/>
    <Style TargetType="{x:Type controls:ButtonEx}" BasedOn="{StaticResource ButtonExStyleBase}" x:Key="MainColor1Button"/>
    <Style TargetType="{x:Type controls:ButtonEx}" BasedOn="{StaticResource ButtonExStyleBase}" x:Key="MainColor2Button">
        <Setter Property="Background" Value="{DynamicResource AccentMidBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource AccentTextBrush}"/>
        <Setter Property="BackgroundOnMouseOver" Value="{DynamicResource AccentLightBrush}"/>
        <Setter Property="ForegroundOnMouseOver" Value="{DynamicResource AccentTextBrush}"/>
        <Setter Property="BackgroundOnPressed" Value="{DynamicResource AccentLightBrush}"/>
        <Setter Property="ForegroundOnPressed" Value="{DynamicResource AccentTextBrush}"/>
    </Style>

    <Style TargetType="{x:Type controls:ButtonEx}" BasedOn="{StaticResource MainColor1Button}" x:Key="MainColor1ButtonRadius3">
        <Setter Property="BorderCornerRadius" Value="3"/>
    </Style>

    <Style TargetType="{x:Type controls:ButtonEx}" BasedOn="{StaticResource MainColor2Button}" x:Key="MainColor2ButtonRadius3">
        <Setter Property="BorderCornerRadius" Value="3"/>
    </Style>

    <Style TargetType="{x:Type controls:ButtonEx}" BasedOn="{StaticResource MainColor2Button}" x:Key="MainColor2ButtonRadius5">
        <Setter Property="BorderCornerRadius" Value="5"/>
    </Style>
    <!--ButtonEx Style End-->


</ResourceDictionary>