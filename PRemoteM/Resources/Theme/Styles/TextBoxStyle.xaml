<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:attachProperty="clr-namespace:PRM.Resources.Theme.AttachProperty">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="BaseStyle.xaml"></ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>

    <Thickness x:Key="DefaultInputPadding">8,4</Thickness>

    <Style TargetType="TextBox" x:Key="TextBoxBaseStyle" BasedOn="{StaticResource ControlBase}">
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="CaretBrush" Value="Black" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Background" Value="White" />
        <Setter Property="BorderBrush" Value="{DynamicResource DefaultBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="attachProperty:VisionElement.BorderCornerRadius" Value="{DynamicResource DefaultCornerRadius}"/>
    </Style>

    <Style x:Key="TextBoxPrimaryStyle" TargetType="TextBox" BasedOn="{StaticResource TextBoxBaseStyle}">
        <Setter Property="Padding" Value="{StaticResource DefaultInputPadding}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Grid Name="Grid">
                        <Border Name="BorderForBackground" 
                                SnapsToDevicePixels="True"
                            Background="{TemplateBinding Background}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            CornerRadius="{Binding Path=(attachProperty:VisionElement.BorderCornerRadius),RelativeSource={RelativeSource TemplatedParent}}"/>
                        <Border Name="Border" 
                            SnapsToDevicePixels="True"
                            Background="{TemplateBinding Background}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            CornerRadius="{Binding Path=(attachProperty:VisionElement.BorderCornerRadius),RelativeSource={RelativeSource TemplatedParent}}">
                        </Border>

                        <TextBlock Text="{TemplateBinding Tag}" Background="{TemplateBinding Background}" VerticalAlignment="Center" Margin="5 0 0 0">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Opacity" Value="0.4"/>
                                    <Setter Property="Foreground" Value="Transparent"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=Text, RelativeSource={RelativeSource TemplatedParent}}" Value="">
                                            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=TextBox}, Path=Foreground}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>

                        <ScrollViewer Padding="{TemplateBinding Padding}" Margin="-2,0,-1,0" 
                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" 
                                          Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" 
                                          x:Name="PART_ContentHost" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="Border" Value="0.4" />
                            <Setter Property="Opacity" TargetName="BorderForBackground" Value="0.1" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="False"></Condition>
                                <Condition Property="IsMouseOver" Value="True"></Condition>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="Border" Value="0.6" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryDarkBrush}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="true">
                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryMidBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TextBoxAccentStyle" TargetType="TextBox" BasedOn="{StaticResource TextBoxPrimaryStyle}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="BorderBrush" Value="{DynamicResource AccentDarkBrush}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="true">
                <Setter Property="BorderBrush" Value="{DynamicResource AccentMidBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="TextBoxPrimaryWithPlaceHolderStyle" TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBoxPrimaryStyle}">
    </Style>


    <Style x:Key="TextBoxAccentWithPlaceHolderStyle" TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBoxPrimaryWithPlaceHolderStyle}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="BorderBrush" Value="{DynamicResource AccentDarkBrush}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="true">
                <Setter Property="BorderBrush" Value="{DynamicResource AccentMidBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource TextBoxAccentStyle}" TargetType="TextBox"/>
</ResourceDictionary>