<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:attachProperty="clr-namespace:PRM.Resources.Theme.AttachProperty">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="BaseStyle.xaml"></ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>

    <Thickness x:Key="DefaultInputPadding">5,4</Thickness>

    <Style x:Key="ButtonBaseStyle" BasedOn="{StaticResource ControlBase}" TargetType="Button">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Padding" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Foreground" Value="{DynamicResource BackgroundTextBrush}"/>
        <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
        <Setter Property="attachProperty:VisionElement.ForegroundOnMouseOver" Value="{DynamicResource BackgroundTextBrush}"/>
        <Setter Property="attachProperty:VisionElement.BackgroundOnMouseOver" Value="{DynamicResource BackgroundBrush}"/>
        <Setter Property="attachProperty:VisionElement.ForegroundOnMouseDown" Value="{DynamicResource BackgroundTextBrush}"/>
        <Setter Property="attachProperty:VisionElement.BackgroundOnMouseDown" Value="{DynamicResource BackgroundBrush}"/>
        <Setter Property="attachProperty:VisionElement.BorderBrush" Value="{DynamicResource DefaultBorderBrush}"/>
        <Setter Property="attachProperty:VisionElement.BorderBrushOnMouseOver" Value="{DynamicResource DefaultBorderBrush}"/>
        <Setter Property="attachProperty:VisionElement.BorderBrushOnMouseDown" Value="{DynamicResource DefaultBorderBrush}"/>
        <Setter Property="attachProperty:VisionElement.BorderThickness" Value="1"/>
        <Setter Property="attachProperty:VisionElement.BorderCornerRadius" Value="{DynamicResource DefaultCornerRadius}"/>
        <Setter Property="attachProperty:VisionElement.OpacityOnMouseOver" Value="0.9"/>
        <Setter Property="attachProperty:VisionElement.OpacityOnMouseDown" Value="0.7"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Name="Grid">
                        <!--<Border Name="BorderForBackground" Background="{TemplateBinding Background}" 
                                CornerRadius="{Binding Path=(attachProperty:VisionElement.BorderCornerRadius),RelativeSource={RelativeSource TemplatedParent}}"/>-->
                        <Border Name="Border" 
                                SnapsToDevicePixels="True"
                                Background="{TemplateBinding Background}" 
                                BorderThickness="{Binding Path=(attachProperty:VisionElement.BorderThickness),RelativeSource={RelativeSource TemplatedParent}}" 
                                BorderBrush="{Binding Path=(attachProperty:VisionElement.BorderBrush),RelativeSource={RelativeSource TemplatedParent}}" 
                                CornerRadius="{Binding Path=(attachProperty:VisionElement.BorderCornerRadius),RelativeSource={RelativeSource TemplatedParent}}">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="5, 4">
                                <ContentPresenter Margin="{TemplateBinding Padding}" x:Name="ContentPresenter" RecognizesAccessKey="True" VerticalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </StackPanel>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Content" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ContentPresenter" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{Binding Path=(attachProperty:VisionElement.ForegroundOnMouseOver),RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter Property="TextElement.Foreground" TargetName="ContentPresenter" Value="{Binding Path=(attachProperty:VisionElement.ForegroundOnMouseOver),RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter Property="Background" TargetName="Border" Value="{Binding Path=(attachProperty:VisionElement.BackgroundOnMouseOver),RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter Property="BorderBrush" TargetName="Border" Value="{Binding Path=(attachProperty:VisionElement.BorderBrushOnMouseOver),RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter Property="Opacity" TargetName="Grid" Value="{Binding Path=(attachProperty:VisionElement.OpacityOnMouseOver),RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{Binding Path=(attachProperty:VisionElement.ForegroundOnMouseDown),RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter Property="TextElement.Foreground" TargetName="ContentPresenter" Value="{Binding Path=(attachProperty:VisionElement.ForegroundOnMouseDown),RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter Property="Background" TargetName="Border" Value="{Binding Path=(attachProperty:VisionElement.BackgroundOnMouseDown),RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter Property="BorderBrush" TargetName="Border" Value="{Binding Path=(attachProperty:VisionElement.BorderBrushOnMouseDown),RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter Property="Opacity" TargetName="Grid" Value="{Binding Path=(attachProperty:VisionElement.OpacityOnMouseDown),RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.4" />
                <Setter Property="Cursor" Value="Arrow" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="ButtonPrimaryStyle" BasedOn="{StaticResource ButtonBaseStyle}" TargetType="Button">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryMidBrush}"/>
        <Setter Property="attachProperty:VisionElement.ForegroundOnMouseOver" Value="{DynamicResource PrimaryTextBrush}"/>
        <Setter Property="attachProperty:VisionElement.BackgroundOnMouseOver" Value="{DynamicResource PrimaryMidBrush}"/>
        <Setter Property="attachProperty:VisionElement.ForegroundOnMouseDown" Value="{DynamicResource PrimaryTextBrush}"/>
        <Setter Property="attachProperty:VisionElement.BackgroundOnMouseDown" Value="{DynamicResource PrimaryMidBrush}"/>
        <Setter Property="attachProperty:VisionElement.BorderBrushOnMouseOver" Value="{DynamicResource PrimaryMidBrush}"/>
        <Setter Property="attachProperty:VisionElement.BorderBrushOnMouseDown" Value="{DynamicResource PrimaryMidBrush}"/>
    </Style>

    <Style x:Key="ButtonAccentStyle" BasedOn="{StaticResource ButtonBaseStyle}" TargetType="Button">
        <Setter Property="Foreground" Value="{DynamicResource AccentTextBrush}"/>
        <Setter Property="Background" Value="{DynamicResource AccentMidBrush}"/>
        <Setter Property="attachProperty:VisionElement.ForegroundOnMouseOver" Value="{DynamicResource AccentTextBrush}"/>
        <Setter Property="attachProperty:VisionElement.BackgroundOnMouseOver" Value="{DynamicResource AccentMidBrush}"/>
        <Setter Property="attachProperty:VisionElement.ForegroundOnMouseDown" Value="{DynamicResource AccentTextBrush}"/>
        <Setter Property="attachProperty:VisionElement.BackgroundOnMouseDown" Value="{DynamicResource AccentMidBrush}"/>
        <Setter Property="attachProperty:VisionElement.BorderBrushOnMouseOver" Value="{DynamicResource AccentMidBrush}"/>
        <Setter Property="attachProperty:VisionElement.BorderBrushOnMouseDown" Value="{DynamicResource AccentMidBrush}"/>
    </Style>

    <Style TargetType="Button" BasedOn="{StaticResource ButtonAccentStyle}" />













    <Style x:Key="ButtonBarPrimaryStyle" BasedOn="{StaticResource ButtonPrimaryStyle}" TargetType="Button">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="attachProperty:VisionElement.BorderThickness" Value="0"/>
        <Setter Property="attachProperty:VisionElement.BorderCornerRadius" Value="0"/>
        <Setter Property="Padding" Value="{DynamicResource DefaultControlPadding}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Name="Grid">
                        <Border Name="Border" 
                                SnapsToDevicePixels="True"
                                Background="{TemplateBinding Background}" 
                                BorderThickness="{Binding Path=(attachProperty:VisionElement.BorderThickness),RelativeSource={RelativeSource TemplatedParent}}" 
                                BorderBrush="{Binding Path=(attachProperty:VisionElement.BorderBrush),RelativeSource={RelativeSource TemplatedParent}}" 
                                CornerRadius="{Binding Path=(attachProperty:VisionElement.BorderCornerRadius),RelativeSource={RelativeSource TemplatedParent}}">
                        </Border>
                        <ContentPresenter 
                            Margin="{TemplateBinding Padding}" 
                            x:Name="ContentPresenter" 
                            RecognizesAccessKey="True" 
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Content" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ContentPresenter" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{Binding Path=(attachProperty:VisionElement.ForegroundOnMouseOver),RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter Property="TextElement.Foreground" TargetName="ContentPresenter" Value="{Binding Path=(attachProperty:VisionElement.ForegroundOnMouseOver),RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter Property="Background" TargetName="Border" Value="{Binding Path=(attachProperty:VisionElement.BackgroundOnMouseOver),RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter Property="BorderBrush" TargetName="Border" Value="{Binding Path=(attachProperty:VisionElement.BorderBrushOnMouseOver),RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter Property="Opacity" TargetName="Grid" Value="{Binding Path=(attachProperty:VisionElement.OpacityOnMouseOver),RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{Binding Path=(attachProperty:VisionElement.ForegroundOnMouseDown),RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter Property="TextElement.Foreground" TargetName="ContentPresenter" Value="{Binding Path=(attachProperty:VisionElement.ForegroundOnMouseDown),RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter Property="Background" TargetName="Border" Value="{Binding Path=(attachProperty:VisionElement.BackgroundOnMouseDown),RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter Property="BorderBrush" TargetName="Border" Value="{Binding Path=(attachProperty:VisionElement.BorderBrushOnMouseDown),RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter Property="Opacity" TargetName="Grid" Value="{Binding Path=(attachProperty:VisionElement.OpacityOnMouseDown),RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonBarAccentStyle" BasedOn="{StaticResource ButtonBarPrimaryStyle}" TargetType="Button">
        <Setter Property="Foreground" Value="{DynamicResource AccentTextBrush}"/>
        <Setter Property="Background" Value="{DynamicResource AccentMidBrush}"/>
        <Setter Property="attachProperty:VisionElement.ForegroundOnMouseOver" Value="{DynamicResource AccentTextBrush}"/>
        <Setter Property="attachProperty:VisionElement.BackgroundOnMouseOver" Value="{DynamicResource AccentMidBrush}"/>
        <Setter Property="attachProperty:VisionElement.ForegroundOnMouseDown" Value="{DynamicResource AccentTextBrush}"/>
        <Setter Property="attachProperty:VisionElement.BackgroundOnMouseDown" Value="{DynamicResource AccentMidBrush}"/>
        <Setter Property="attachProperty:VisionElement.BorderBrushOnMouseOver" Value="{DynamicResource AccentMidBrush}"/>
        <Setter Property="attachProperty:VisionElement.BorderBrushOnMouseDown" Value="{DynamicResource AccentMidBrush}"/>
    </Style>
</ResourceDictionary>