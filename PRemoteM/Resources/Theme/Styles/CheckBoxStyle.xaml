<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:attachProperty="clr-namespace:PRM.Resources.Theme.AttachProperty">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="BaseStyle.xaml"></ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="CheckBoxBaseStyle" TargetType="CheckBox" BasedOn="{StaticResource ControlBase}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}"></Setter>
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{DynamicResource BackgroundTextBrush}" />
        <Setter Property="Background" Value="{DynamicResource BackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource DefaultBorderBrush}" />
        <Setter Property="attachProperty:VisionElement.BorderCornerRadius" Value="{DynamicResource DefaultCornerRadius}"/>
        <Setter Property="attachProperty:VisionElement.ForegroundAccent" Value="{DynamicResource PrimaryTextBrush}"/>
        <Setter Property="attachProperty:VisionElement.BackgroundAccent" Value="{DynamicResource PrimaryMidBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid Height="18" Width="18">
                            <Border Name="BorderForBackground" 
                                SnapsToDevicePixels="True"
                                Background="{TemplateBinding Background}"
                                BorderThickness="0"
                                BorderBrush="Transparent"
                                CornerRadius="{Binding Path=(attachProperty:VisionElement.BorderCornerRadius),RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Border Name="Border" 
                                SnapsToDevicePixels="True"
                                Background="Transparent"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                CornerRadius="{Binding Path=(attachProperty:VisionElement.BorderCornerRadius),RelativeSource={RelativeSource TemplatedParent}}"/>

                            <Border Name="Content" 
                                SnapsToDevicePixels="True"
                                Background="Transparent"
                                ClipToBounds="True"
                                CornerRadius="{Binding Path=(attachProperty:VisionElement.BorderCornerRadius),RelativeSource={RelativeSource TemplatedParent}}">
                                <Grid>
                                    <Path Name="PATH_CHECK" Opacity="0"
                                      Fill="{Binding Path=(attachProperty:VisionElement.ForegroundAccent),RelativeSource={RelativeSource TemplatedParent}}" 
                                      Stretch="Fill" Margin="3" 
                                      Data="M565.3504 771.6864a27.3408 27.3408 0 0 1-38.5024 0.1024L152.8832 400.896a27.3408 27.3408 0 0 0-38.5024 0l-60.8256 60.8256a27.3408 27.3408 0 0 0 0 38.7072l473.2928 470.2208a27.3408 27.3408 0 0 0 38.5024 0l814.8992-817.8688a27.3408 27.3408 0 0 0 0-38.6048l-60.928-60.7232a27.3408 27.3408 0 0 0-38.6048 0L565.248 771.6864z" 
                                      VerticalAlignment="Center" HorizontalAlignment="Center" />

                                    <Border Name="PATH_CHECK_NULL" Visibility="Collapsed" CornerRadius="{Binding Path=(attachProperty:VisionElement.BorderCornerRadius),RelativeSource={RelativeSource TemplatedParent}}" 
                                        Margin="2" Background="{Binding Path=(attachProperty:VisionElement.BackgroundAccent),RelativeSource={RelativeSource TemplatedParent}}"></Border>
                                </Grid>
                            </Border>
                        </Grid>

                        <ContentPresenter x:Name="ContentPresenter"
                                          Visibility="Collapsed" Grid.Column="1" Focusable="False" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          Margin="{TemplateBinding Padding}" 
                                          RecognizesAccessKey="True" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="Visibility" TargetName="ContentPresenter" Value="Visible" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="False"></Condition>
                                <Condition Property="IsMouseOver" Value="True"></Condition>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="Border" Value="0.6" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True"></Condition>
                                <Condition Property="IsPressed" Value="True"></Condition>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="Border" Value="0.8" />
                            <Setter Property="Opacity" TargetName="BorderForBackground" Value="0.8" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="False"></Condition>
                                <Condition Property="IsPressed" Value="True"></Condition>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="Border" Value="1" />
                            <Setter Property="Opacity" TargetName="BorderForBackground" Value="1" />
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="Border" Value="{Binding Path=(attachProperty:VisionElement.BackgroundAccent),RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PATH_CHECK" 
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" Duration="0:0:0.2" AccelerationRatio="0.9"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PATH_CHECK" 
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0" Duration="0:0:0.1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter Property="Background" TargetName="BorderForBackground" Value="{Binding Path=(attachProperty:VisionElement.BackgroundAccent),RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter Property="BorderBrush" TargetName="Border" Value="{Binding Path=(attachProperty:VisionElement.BackgroundAccent),RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Visibility" TargetName="PATH_CHECK_NULL" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                            <Setter Property="Cursor" Value="Arrow" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="CheckBoxPrimaryStyle" TargetType="CheckBox" BasedOn="{StaticResource CheckBoxBaseStyle}">
        <Setter Property="attachProperty:VisionElement.ForegroundAccent" Value="{DynamicResource PrimaryTextBrush}"/>
        <Setter Property="attachProperty:VisionElement.BackgroundAccent" Value="{DynamicResource PrimaryMidBrush}"/>
    </Style>

    <Style x:Key="CheckBoxAccentStyle" TargetType="CheckBox" BasedOn="{StaticResource CheckBoxBaseStyle}">
        <Setter Property="attachProperty:VisionElement.ForegroundAccent" Value="{DynamicResource AccentTextBrush}"/>
        <Setter Property="attachProperty:VisionElement.BackgroundAccent" Value="{DynamicResource AccentMidBrush}"/>
    </Style>

    <Style TargetType="CheckBox" BasedOn="{StaticResource CheckBoxAccentStyle}"/>

</ResourceDictionary>