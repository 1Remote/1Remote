<UserControl x:Class="PRM.View.ServerListPage"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:controls="clr-namespace:PRM.Controls"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:view="clr-namespace:PRM.View"
             xmlns:controls1="clr-namespace:Shawn.Utils.Wpf.Controls;assembly=Shawn.Utils.Wpf"
             xmlns:service="clr-namespace:PRM.Service"
             xmlns:model="clr-namespace:PRM.Model"
             xmlns:attachProperty="clr-namespace:PRM.Resources.Theme.AttachProperty"
             mc:Ignorable="d"
             Background="White"
             d:DataContext="{d:DesignInstance view:ServerListPageViewModel}"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>

            <system:Double x:Key="OneItemHeight">40</system:Double>

            <Style TargetType="ListBoxItem">
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Grid Name="Grid" FocusVisualStyle="{x:Null}" Background="{DynamicResource BackgroundBrush}">
                                <Grid.Style>
                                    <Style TargetType="Grid">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Server.Id}" Value="0">
                                                <Setter Property="Visibility" Value="Collapsed"></Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Grid.Style>

                                <Border x:Name="GridContainer"></Border>
                                <ContentPresenter
                                    Content="{TemplateBinding ContentControl.Content}"
                                    ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                    ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="IsSelected" Value="True" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <ControlTemplate x:Key="ListBoxTemplateForServerCards" TargetType="{x:Type ListBox}">
                <Border x:Name="Bd" Background="{TemplateBinding Background}" Padding="0" SnapsToDevicePixels="True" HorizontalAlignment="Center">
                    <ScrollViewer Focusable="False">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </ScrollViewer>
                </Border>
            </ControlTemplate>
            <DataTemplate x:Key="DataTemplateForServerCards" DataType="view:ProtocolBaseViewModel">
                <Grid>
                    <Grid.Style>
                        <Style TargetType="Grid">
                            <Setter Property="Height" Value="164"></Setter>
                            <Setter Property="Width" Value="165"></Setter>
                        </Style>
                    </Grid.Style>
                    <controls:ServerCard ProtocolBaseViewModel="{Binding}">
                    </controls:ServerCard>
                </Grid>
            </DataTemplate>



            <ControlTemplate x:Key="ListBoxTemplateForServerList" TargetType="{x:Type ListBox}">
                <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="0" SnapsToDevicePixels="true">
                    <Grid>

                        <Grid Name="GridHeader" Height="{StaticResource OneItemHeight}" VerticalAlignment="Top" ZIndex="999">
                            <Grid.Style>
                                <Style TargetType="Grid">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ServerListItems.Count}" Value="0">
                                            <Setter Property="Visibility" Value="Collapsed"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>
                            <Grid>
                                <Grid.Margin>
                                    <Thickness Right="{StaticResource ScrollBarWidthMouseOver}"></Thickness>
                                </Grid.Margin>
                                <Border Background="{DynamicResource BackgroundBrush}">
                                    <Border.Margin>
                                        <Thickness Right="{StaticResource ScrollBarWidthMouseOver}"></Thickness>
                                    </Border.Margin>
                                </Border>
                            </Grid>
                            <Grid VerticalAlignment="Center">
                                <Grid.Margin>
                                    <Thickness Right="{StaticResource ScrollBarWidthMouseOver}"></Thickness>
                                </Grid.Margin>
                                <Grid.Resources>
                                    <Style TargetType="Path" x:Key="HeaderPathStyle">
                                        <Setter Property="Visibility" Value="Hidden" />
                                        <Setter Property="StrokeThickness" Value="1" />
                                        <Setter Property="Width" Value="20" />
                                        <Setter Property="HorizontalAlignment" Value="Center" />
                                        <Setter Property="Margin" Value="5,0,5,0" />
                                        <Setter Property="SnapsToDevicePixels" Value="True" />
                                    </Style>
                                </Grid.Resources>

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="Selector"></ColumnDefinition>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="Protocol" MinWidth="150"></ColumnDefinition>
                                    <ColumnDefinition Width="40" SharedSizeGroup="Span"></ColumnDefinition>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="Name"></ColumnDefinition>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="Tags"></ColumnDefinition>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="Address"></ColumnDefinition>
                                </Grid.ColumnDefinitions>

                                <CheckBox Margin="10 0 0 0" Width="20" Height="20" HorizontalAlignment="Left" 
                                          IsChecked="{Binding IsSelectedAll, Mode=TwoWay}">
                                </CheckBox>

                                <Button HorizontalContentAlignment="Left" Grid.Column="1" Style="{StaticResource ButtonBarPrimaryStyle}"
                                                         Margin="0 0 10 0"
                                                         attachProperty:VisionElement.BorderCornerRadius="{StaticResource DefaultCornerRadius}"
                                                         Background="{DynamicResource BackgroundBrush}"
                                                         Foreground="{DynamicResource BackgroundTextBrush}"
                                                         Command="{Binding CmdReOrder}" CommandParameter="0">
                                    <Grid>
                                        <Path Data="M 7,3 L 13,3 L 10,0 L 7,3" Fill="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=Foreground}">
                                            <Path.Style>
                                                <Style TargetType="Path" BasedOn="{StaticResource HeaderPathStyle}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding ServerOrderBy}" Value="{x:Static service:EnumServerOrderBy.ProtocolAsc}">
                                                            <Setter Property="Visibility" Value="Visible"></Setter>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Path.Style>
                                        </Path>
                                        <Path Data="M 7,0 L 10,3 L 13,0 L 7,0" Fill="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=Foreground}">
                                            <Path.Style>
                                                <Style TargetType="Path" BasedOn="{StaticResource HeaderPathStyle}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding ServerOrderBy}" Value="{x:Static service:EnumServerOrderBy.ProtocolDesc}">
                                                            <Setter Property="Visibility" Value="Visible"></Setter>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Path.Style>
                                        </Path>
                                        <TextBlock Margin="5" HorizontalAlignment="Left" Text="{DynamicResource Protocol}" Foreground="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=Foreground}"></TextBlock>
                                    </Grid>
                                </Button>

                                <Button HorizontalContentAlignment="Left" Grid.Column="3" Style="{StaticResource ButtonBarPrimaryStyle}"
                                                         Margin="0 0 10 0"
                                                         attachProperty:VisionElement.BorderCornerRadius="{StaticResource DefaultCornerRadius}"
                                                                    Background="{DynamicResource BackgroundBrush}"
                                                                    Foreground="{DynamicResource BackgroundTextBrush}"
                                                                    Command="{Binding CmdReOrder}" CommandParameter="2">
                                    <Grid>
                                        <Path Data="M 7,3 L 13,3 L 10,0 L 7,3" Fill="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=Foreground}">
                                            <Path.Style>
                                                <Style TargetType="Path" BasedOn="{StaticResource HeaderPathStyle}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding ServerOrderBy}" Value="{x:Static service:EnumServerOrderBy.NameAsc}">
                                                            <Setter Property="Visibility" Value="Visible"></Setter>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Path.Style>
                                        </Path>
                                        <Path Data="M 7,0 L 10,3 L 13,0 L 7,0" Fill="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=Foreground}">
                                            <Path.Style>
                                                <Style TargetType="Path" BasedOn="{StaticResource HeaderPathStyle}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding ServerOrderBy}" Value="{x:Static service:EnumServerOrderBy.NameDesc}">
                                                            <Setter Property="Visibility" Value="Visible"></Setter>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Path.Style>
                                        </Path>
                                        <TextBlock Margin="5" HorizontalAlignment="Left" Text="{DynamicResource Name}" Foreground="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=Foreground}"></TextBlock>
                                    </Grid>
                                </Button>

                                <Button HorizontalContentAlignment="Left" Grid.Column="5" Style="{StaticResource ButtonBarPrimaryStyle}"
                                                         Margin="0 0 10 0"
                                                         attachProperty:VisionElement.BorderCornerRadius="{StaticResource DefaultCornerRadius}"
                                                                    Background="{DynamicResource BackgroundBrush}"
                                                                    Foreground="{DynamicResource BackgroundTextBrush}"
                                                                    Command="{Binding CmdReOrder}" CommandParameter="6">
                                    <Grid>
                                        <Path Data="M 7,3 L 13,3 L 10,0 L 7,3" Fill="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=Foreground}">
                                            <Path.Style>
                                                <Style TargetType="Path" BasedOn="{StaticResource HeaderPathStyle}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding ServerOrderBy}" Value="{x:Static service:EnumServerOrderBy.AddressAsc}">
                                                            <Setter Property="Visibility" Value="Visible"></Setter>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Path.Style>
                                        </Path>
                                        <Path Data="M 7,0 L 10,3 L 13,0 L 7,0" Fill="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=Foreground}">
                                            <Path.Style>
                                                <Style TargetType="Path" BasedOn="{StaticResource HeaderPathStyle}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding ServerOrderBy}" Value="{x:Static service:EnumServerOrderBy.AddressDesc}">
                                                            <Setter Property="Visibility" Value="Visible"></Setter>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Path.Style>
                                        </Path>
                                        <TextBlock Margin="5" HorizontalAlignment="Left" Text="{DynamicResource Target}" Foreground="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=Foreground}"></TextBlock>
                                    </Grid>
                                </Button>
                            </Grid>
                        </Grid>

                        <ScrollViewer Name="ScrollViewer" Focusable="false" Padding="0" HorizontalScrollBarVisibility="Disabled">
                            <ScrollViewer.Margin>
                                <Thickness Top="{StaticResource OneItemHeight}"></Thickness>
                            </ScrollViewer.Margin>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            </ItemsPresenter>
                        </ScrollViewer>
                    </Grid>
                </Border>
                <ControlTemplate.Triggers>
                    <DataTrigger Binding="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=Items.Count}" Value="0">
                        <Setter TargetName="ScrollViewer" Property="Visibility" Value="Hidden"></Setter>
                    </DataTrigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <DataTemplate x:Key="DataTemplateForServerList" DataType="view:ProtocolBaseViewModel">
                <Grid Name="Grid" FocusVisualStyle="{x:Null}" Background="{DynamicResource BackgroundBrush}">
                    <Grid.InputBindings>
                        <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding CmdConnServer}"></MouseBinding>
                        <MouseBinding MouseAction="RightClick" Command="{Binding CmdEditServer}"></MouseBinding>
                    </Grid.InputBindings>
                    <Border x:Name="GridContainer"></Border>
                    <controls:ServerListItem ProtocolBaseViewModel="{Binding}" MinHeight="{StaticResource OneItemHeight}"></controls:ServerListItem>
                </Grid>
                <DataTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" TargetName="GridContainer" Value="{DynamicResource PrimaryTextBrush}"></Setter>
                        <Setter Property="Opacity" Value="0.2" TargetName="GridContainer" />
                    </Trigger>
                </DataTemplate.Triggers>
            </DataTemplate>

            <Style x:Key="ServerListStyle" TargetType="ListBox">
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />

                <Style.Triggers>
                    <DataTrigger Binding="{Binding ListPageIsCardView}" Value="True">
                        <Setter Property="Template" Value="{StaticResource ListBoxTemplateForServerCards}"></Setter>
                        <Setter Property="ItemsPanel">
                            <Setter.Value>
                                <ItemsPanelTemplate>
                                    <!--<WrapPanel Orientation="Horizontal" Width="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType=ListBox}, Path=ActualWidth}" Margin="15 10 0 20"/>-->
                                    <controls:VirtualizingWrapPanel 
                                        IsVirtualizing="True"
                                        ScrollUnit="Pixel"
                                        VirtualizationMode="Recycling"
                                        CacheLengthUnit="Item"
                                        Orientation="Horizontal" Width="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType=ListBox}, Path=ActualWidth}" Margin="15 10 0 20"/>
                                </ItemsPanelTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="ItemTemplate" Value="{StaticResource DataTemplateForServerCards}"></Setter>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding ListPageIsCardView}" Value="False">
                        <Setter Property="Template" Value="{StaticResource ListBoxTemplateForServerList}"></Setter>
                        <Setter Property="ItemTemplate" Value="{StaticResource DataTemplateForServerList}"></Setter>
                        <Setter Property="ItemsPanel">
                            <Setter.Value>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel 
                                        IsVirtualizing="True"
                                        ScrollUnit="Pixel"
                                        VirtualizationMode="Recycling"
                                        CacheLengthUnit="Item"
                                        Margin="0 0 0 30"/>
                                </ItemsPanelTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <view:ConverterTagsIndicatorIsShow x:Key="ConverterTagsIndicatorIsShow" />
            <view:ConverterStringIsEqual x:Key="ConverterStringIsEqual" />
            <view:ConverterTagName x:Key="ConverterTagName" />
        </ResourceDictionary>
    </UserControl.Resources>






    <Grid Background="{DynamicResource PrimaryMidBrush}" Grid.IsSharedSizeScope="True">
        <Grid Margin="0 21 0 0" Background="{DynamicResource BackgroundBrush}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
            </Grid.RowDefinitions>

            <!-- Tag indicator: popup when any tag which not in shown tag list is selected-->
            <Grid Grid.Row="0">
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="VerticalAlignment" Value="Top"></Setter>
                        <Setter Property="Visibility" Value="Collapsed"></Setter>
                        <Style.Triggers>
                            <DataTrigger Value="True">
                                <DataTrigger.Binding>
                                    <MultiBinding Converter="{StaticResource ConverterTagsIndicatorIsShow}">
                                        <Binding Path="TagFilters" Mode="OneWay"></Binding>
                                        <Binding Path="Context.AppData.TagList" Mode="OneWay"></Binding>
                                    </MultiBinding>
                                </DataTrigger.Binding>
                                <Setter Property="Visibility" Value="Visible"></Setter>
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames BeginTime="0:0:0" Storyboard.TargetProperty="Height" AccelerationRatio="0.9">
                                                <LinearDoubleKeyFrame KeyTime="0:0:0.400" Value="40" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames BeginTime="0:0:0" Storyboard.TargetProperty="Height">
                                                <LinearDoubleKeyFrame KeyTime="0:0:0.200" Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>

                <ItemsControl VerticalAlignment="Center" HorizontalAlignment="Center" ItemsSource="{Binding TagFilters}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate DataType="model:TagFilter">
                            <Border VerticalAlignment="Center" Background="{DynamicResource AccentMidBrush}" CornerRadius="5" Margin="3 0">
                                <Grid ToolTip="{Binding TagName, Converter={StaticResource ConverterTagName}}">
                                    <TextBlock Text="{Binding TagName, Converter={StaticResource ConverterTagName}}" Foreground="{DynamicResource AccentTextBrush}" 
                                               VerticalAlignment="Center" HorizontalAlignment="Center"
                                               Margin="5 5 15 5">
                                        <TextBlock.Resources>
                                            <Style TargetType="TextBlock">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsExcluded}" Value="True">
                                                        <Setter Property="TextDecorations">
                                                            <Setter.Value>
                                                                <TextDecorationCollection>
                                                                    <TextDecoration Location="Strikethrough">
                                                                        <TextDecoration.Pen>
                                                                            <Pen Brush="{DynamicResource PrimaryMidBrush}" Thickness="3"></Pen>
                                                                        </TextDecoration.Pen>
                                                                    </TextDecoration>
                                                                </TextDecorationCollection>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Resources>
                                    </TextBlock>
                                    <Button Width="10" Height="10" Tag="{Binding TagName}"
                                                    Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=view:ServerListPage}, Path=DataContext.CmdTagRemove}"
                                                    CommandParameter="{Binding TagName}"
                                                    Style="{StaticResource ButtonBarAccentStyle}"
                                                    HorizontalAlignment="Right"
                                                    attachProperty:VisionElement.Opacity="0.5"
                                                    attachProperty:VisionElement.OpacityAccent="0.9"
                                                    Margin="0 0 5 0">
                                        <Grid Height="10" Width="8">
                                            <Path Data="F1 M 47.910156 -44.000000 L 87.183594 -4.683594 L 83.316406 -0.816406 L 44.000000 -40.089844 L 4.683594 -0.816406 L 0.816406 -4.683594 L 40.089844 -44.000000 L 0.816406 -83.316406 L 4.683594 -87.183594 L 44.000000 -47.910156 L 83.316406 -87.183594 L 87.183594 -83.316406 Z "
                                                          Stroke="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType=Button}}"
                                                          Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType=Button}}"
                                                          StrokeThickness="2" Stretch="Uniform" />
                                        </Grid>
                                    </Button>
                                </Grid>
                            </Border>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </Grid>


            <!-- server list-->
            <Grid Grid.Row="1">

                <!-- tooltip for how to add -->
                <Border HorizontalAlignment="Right">
                    <Border.Style>
                        <Style TargetType="Border">
                            <Setter Property="Visibility" Value="Collapsed"></Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ServerListItems.Count}" Value="0">
                                    <Setter Property="Visibility" Value="Visible"></Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                    <StackPanel>
                        <Path Fill="{DynamicResource BackgroundTextBrush}" 
                              Margin="25 10 30 5" Width="50" HorizontalAlignment="Right"
                              Stretch="UniformToFill" Data="M 70.3711 1.2207 L 63.1409 2.666 L 68.054 2.78 C 61.006 12.645 49.14 12.505 47 24 C 46.938 24.449 47.885 24.549 48 24 C 50.066 12.953 62.38 12.673 68.819 3.201 L 69 8 Z" />
                        <TextBlock Margin="0 0 10 0" Foreground="{DynamicResource BackgroundTextBrush}" FontSize="22" FontWeight="Bold">Add new session</TextBlock>
                    </StackPanel>
                </Border>

                <ListBox Name="LvServerCards"
                         HorizontalContentAlignment="Stretch"
                         SelectedItem="{Binding SelectedServerViewModelListItem}"
                         ItemsSource="{Binding ServerListItems}"
                         Margin="0 2 0 0" BorderThickness="0" Background="Transparent"
                         ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                         Style="{DynamicResource ServerListStyle}">
                </ListBox>

                <!-- footer: show detail of a server -->
                <Grid Name="GridBottom" VerticalAlignment="Bottom" Height="30" Background="{DynamicResource PrimaryMidBrush}" IsHitTestVisible="False">
                    <Grid.Style>
                        <Style TargetType="Grid">
                            <Setter Property="Opacity" Value="0.9"></Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=LvServerCards, Path=SelectedItem}" Value="{x:Null}">
                                    <Setter Property="Opacity" Value="0"></Setter>
                                </DataTrigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Opacity" Value="0"></Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <StackPanel.Resources>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource TextBlockBase}">
                                <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"></Setter>
                                <Setter Property="Margin" Value="0 0 5 0"></Setter>
                            </Style>
                        </StackPanel.Resources>
                        <TextBlock Text="{Binding SelectedServerViewModelListItem.Server.DisplayName}"></TextBlock>
                        <TextBlock Text="{Binding SelectedServerViewModelListItem.Server.SubTitle}"></TextBlock>
                    </StackPanel>
                </Grid>
            </Grid>


            <!-- popup when any item is selected-->
            <Grid Grid.Row="2" Background="{DynamicResource PrimaryMidBrush}" Height="40">
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="Visibility" Value="Visible"></Setter>
                        <Setter Property="Margin" Value="0 0 0 -50"></Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsMultipleSelected}" Value="True">
                                <Setter Property="Visibility" Value="Visible"></Setter>
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ThicknessAnimationUsingKeyFrames BeginTime="0:0:0" Storyboard.TargetProperty="Margin" AccelerationRatio="0.9">
                                                <SplineThicknessKeyFrame KeyTime="0:0:0.0" Value="0,0,0,-50" />
                                                <SplineThicknessKeyFrame KeyTime="0:0:0.400" Value="0,0,0,0" />
                                            </ThicknessAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ThicknessAnimationUsingKeyFrames BeginTime="0:0:0" Storyboard.TargetProperty="Margin">
                                                <SplineThicknessKeyFrame KeyTime="0:0:0.0" Value="0,0,0,0" />
                                                <SplineThicknessKeyFrame KeyTime="0:0:0.200" Value="0,0,0,-50" />
                                            </ThicknessAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>

                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                    <Button Height="30" MinWidth="80" Margin="5 0" Content="{DynamicResource Cancel}" Command="{Binding CmdCancelSelected}"></Button>
                    <TextBlock Text="{DynamicResource server_editor_multi_selected_count}" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="{DynamicResource PrimaryTextBrush}"></TextBlock>
                    <TextBlock Text="{Binding SelectedCount}" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="{DynamicResource PrimaryTextBrush}" Margin="5 0 0 0"></TextBlock>
                </StackPanel>

                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button Height="30" MinWidth="80" Margin="5 0 0 0" Content="{DynamicResource Connect}" Command="{Binding CmdConnectSelected}"></Button>
                    <Button Height="30" MinWidth="80" Margin="5 0 0 0" Content="{DynamicResource Edit}" Command="{Binding CmdMultiEditSelected}"></Button>
                    <Button Height="30" MinWidth="80" Margin="5 0 0 0" Content="{DynamicResource Delete}" Command="{Binding CmdDeleteSelected}"></Button>
                    <Button Height="30" MinWidth="80" Margin="5 0" Content="{DynamicResource Export}" Command="{Binding CmdExportSelectedToJson}"></Button>
                </StackPanel>
            </Grid>
        </Grid>







        <!-- the page to config which tag should be display. -->
        <Grid Margin="0 21 0 0" Background="{DynamicResource BackgroundBrush}">
            <Grid.Style>
                <Style TargetType="Grid">
                    <Setter Property="Visibility" Value="Collapsed"></Setter>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding SelectedTabName}" Value="{x:Static view:ServerListPageViewModel.TabTagsListName}">
                            <Setter Property="Visibility" Value="Visible"></Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <ListBox ItemsSource="{Binding Context.AppData.TagList}" Margin="20" MaxWidth="700">
                <ListBox.Template>
                    <ControlTemplate TargetType="ListBox">
                        <ItemsPresenter></ItemsPresenter>
                    </ControlTemplate>
                </ListBox.Template>
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel></WrapPanel>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="{DynamicResource Delete}" Command="{Binding CmdTagDelete}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.SelectedItem}"/>
                        <MenuItem Header="{DynamicResource Rename}" Command="{Binding CmdTagRename}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.SelectedItem}"/>
                        <MenuItem Header="{DynamicResource Connect}" Command="{Binding CmdTagConnect}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.SelectedItem}"/>
                        <MenuItem Header="{DynamicResource 'Connect (New window)'}" Command="{Binding CmdTagConnectToNewTab}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.SelectedItem}"/>
                    </ContextMenu>
                </ItemsControl.ContextMenu>
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListBoxItem">
                                    <ContentPresenter />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.ItemContainerStyle>
                <ItemsControl.ItemTemplate>
                    <DataTemplate DataType="model:Tag">
                        <Grid Width="300" Margin="20 5" Visibility="{Binding ObjectVisibility}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                            </Grid.ColumnDefinitions>

                            <Grid>
                                <Button Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}, Path=DataContext.CmdTagAddIncluded}" CommandParameter="{Binding}" 
                                        Content="{Binding Name, Converter={StaticResource ConverterTagName}}" 
                                        HorizontalAlignment="Left"></Button>
                            </Grid>

                            <!--<Border CornerRadius="5" Padding="5 2" Background="{DynamicResource AccentMidBrush}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="3">
                                <TextBlock Text="{Binding Name}" Foreground="{DynamicResource AccentTextBrush}" VerticalAlignment="Center" HorizontalAlignment="Center"></TextBlock>
                            </Border>-->

                            <StackPanel Orientation="Horizontal" Grid.Column="1">
                                <TextBlock Text="{Binding ItemsCount}" Margin="10 0" VerticalAlignment="Center" Foreground="{DynamicResource BackgroundTextBrush}"></TextBlock>
                                <ToggleButton IsChecked="{Binding IsPinned, Mode=TwoWay}"></ToggleButton>
                            </StackPanel>
                        </Grid>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ListBox>
        </Grid>





        <Grid VerticalAlignment="Top">
            <Border BorderThickness="0 0 0 1" BorderBrush="{DynamicResource AccentMidBrush}" Background="{DynamicResource PrimaryTextBrush}" Height="20">
                <Border.Effect>
                    <DropShadowEffect ShadowDepth="3" Direction="270"  Opacity="0.6" Color="Black"></DropShadowEffect>
                </Border.Effect>
            </Border>

            <Border BorderThickness="0 0 0 2" BorderBrush="{DynamicResource AccentMidBrush}" Background="{DynamicResource PrimaryMidBrush}">
                <Grid Height="20">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Button MinWidth="80"
                                        Click="BtnAllServer_Click"
                                        Content="{DynamicResource All}">
                        <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource ButtonBarPrimaryStyle}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Grid>
                                                <Border Background="{TemplateBinding Background}"
                                                    SnapsToDevicePixels="true">
                                                </Border>
                                                <ContentPresenter
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource AccentLightBrush}"></Setter>
                                        <Setter Property="Foreground" Value="{DynamicResource AccentTextBrush}" />
                                    </Trigger>
                                    <DataTrigger Binding="{Binding SelectedTabName}" Value="">
                                        <Setter Property="Background" Value="{DynamicResource AccentMidBrush}"></Setter>
                                        <Setter Property="Foreground" Value="{DynamicResource AccentTextBrush}" />
                                        <Setter Property="Cursor" Value="Arrow" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding SelectedTabName}" Value="{x:Null}">
                                        <Setter Property="Background" Value="{DynamicResource AccentMidBrush}"></Setter>
                                        <Setter Property="Foreground" Value="{DynamicResource AccentTextBrush}" />
                                        <Setter Property="Cursor" Value="Arrow" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <Button Grid.Column="1"
                                        MinWidth="80"
                                        Click="BtnTagsListView_Click"
                                        BorderThickness="0" Content="{DynamicResource Tags}">
                        <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource ButtonBarPrimaryStyle}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Grid>
                                                <Border Background="{TemplateBinding Background}"
                                                        SnapsToDevicePixels="true">
                                                </Border>
                                                <ContentPresenter
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource AccentLightBrush}"></Setter>
                                        <Setter Property="Foreground" Value="{DynamicResource AccentTextBrush}" />
                                    </Trigger>
                                    <DataTrigger Binding="{Binding SelectedTabName}" Value="{x:Static view:ServerListPageViewModel.TabTagsListName}">
                                        <Setter Property="Background" Value="{DynamicResource AccentMidBrush}"></Setter>
                                        <Setter Property="Foreground" Value="{DynamicResource AccentTextBrush}" />
                                        <Setter Property="Cursor" Value="Arrow" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Context.AppData.TagList.Count}" Value="0">
                                        <Setter Property="Visibility" Value="Collapsed"></Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <ScrollViewer Grid.Column="2" HorizontalScrollBarVisibility="Auto" 
                                  Margin="10 0 0 0"
                                  Height="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType=Grid}, Path=Height}"
                                  controls1:ScrollViewerExtensions.IsHorizontalScrollOnWheelEnabled="true"
                                  attachProperty:VisionElement.ForegroundAccent="{DynamicResource PrimaryTextBrush}"
                                  attachProperty:VisionElement.BackgroundAccent="{DynamicResource PrimaryTextBrush}"
                                  Style="{StaticResource ScrollViewMiniStyle}">
                        <StackPanel Orientation="Horizontal">
                            <ItemsControl
                                    Name="ListBoxTags"
                                    ItemsSource="{Binding Context.AppData.TagList}"
                                    Background="{DynamicResource PrimaryMidBrush}"
                                    Height="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType=ScrollViewer}, Path=Height}"
                                    ScrollViewer.VerticalScrollBarVisibility="Hidden"
                                    ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                                    BorderThickness="0"
                                    Margin="0"
                                    Padding="0">
                                <ItemsControl.Style>
                                    <Style TargetType="ItemsControl">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="ItemsControl">
                                                    <ItemsPresenter />
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ItemsControl.Style>
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal"></StackPanel>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>

                                <ItemsControl.ItemTemplate>
                                    <DataTemplate DataType="model:Tag">
                                        <Grid Tag="{Binding DataContext, RelativeSource={RelativeSource AncestorType=view:ServerListPage}}">
                                            <Grid.ContextMenu>
                                                <ContextMenu>
                                                    <MenuItem Header="{DynamicResource Delete}" Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.Tag.CmdTagDelete}" CommandParameter="{Binding}"/>
                                                    <MenuItem Header="{DynamicResource Rename}" Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.Tag.CmdTagRename}" CommandParameter="{Binding}"/>
                                                    <MenuItem Header="{DynamicResource Connect}" Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.Tag.CmdTagConnect}" CommandParameter="{Binding}"/>
                                                    <MenuItem Header="{DynamicResource 'Connect (New window)'}" Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.Tag.CmdTagConnectToNewTab}" CommandParameter="{Binding}"/>
                                                </ContextMenu>
                                            </Grid.ContextMenu>
                                            <Button 
                                                MinWidth="80"
                                                Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=view:ServerListPage}, Path=DataContext.CmdTagAddIncluded}"
                                                CommandParameter="{Binding Name}"
                                                Content="{Binding Name, Converter={StaticResource ConverterTagName}}">
                                                <Button.Style>
                                                    <Style TargetType="Button" BasedOn="{StaticResource ButtonBarPrimaryStyle}">
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type Button}">
                                                                    <Grid>
                                                                        <Border Background="{TemplateBinding Background}" SnapsToDevicePixels="true"></Border>
                                                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                    </Grid>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Style.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter Property="Background" Value="{DynamicResource AccentLightBrush}"></Setter>
                                                                <Setter Property="Foreground" Value="{DynamicResource AccentTextBrush}" />
                                                            </Trigger>
                                                            <DataTrigger Value="True">
                                                                <DataTrigger.Binding>
                                                                    <MultiBinding Converter="{StaticResource ConverterStringIsEqual}" >
                                                                        <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType=view:ServerListPage}" Path="DataContext.SelectedTabName" Mode="OneWay"></Binding>
                                                                        <Binding Path="Name" Mode="OneWay"></Binding>
                                                                    </MultiBinding>
                                                                </DataTrigger.Binding>
                                                                <Setter Property="Background" Value="{DynamicResource AccentMidBrush}"></Setter>
                                                                <Setter Property="Foreground" Value="{DynamicResource AccentTextBrush}" />
                                                                <Setter Property="Cursor" Value="Arrow" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding IsPinned}" Value="False">
                                                                <Setter Property="Visibility" Value="Collapsed"></Setter>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Button.Style>
                                            </Button>
                                        </Grid>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </StackPanel>
                    </ScrollViewer>

                    <CheckBox Grid.Column="3" Name="CbPopForInExport" Width="30">
                        <CheckBox.Template>
                            <ControlTemplate>
                                <Border Name="BG" Background="{DynamicResource PrimaryMidBrush}">
                                    <Grid Margin="1" VerticalAlignment="Center">
                                        <Path Data="M 41.888 18.304 L 41.888 23.584 L 23.584 23.584 L 23.584 41.888 L 18.304 41.888 L 18.304 23.584 L 0 23.584 L 0 18.304 L 18.304 18.304 L 18.304 0 L 23.584 0 L 23.584 18.304 Z"
                                              Stretch="Uniform" Name="Path"
                                              Margin="2" Fill="{DynamicResource PrimaryTextBrush}"></Path>
                                    </Grid>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="CheckBox.IsMouseOver" Value="True">
                                        <Setter TargetName="BG" Property="Background" Value="{DynamicResource PrimaryLightBrush}"></Setter>
                                        <Setter TargetName="Path" Property="Margin" Value="1"></Setter>
                                        <Setter TargetName="Path" Property="Fill" Value="{DynamicResource PrimaryTextBrush}"></Setter>
                                    </Trigger>
                                    <Trigger Property="CheckBox.IsChecked" Value="True">
                                        <Setter TargetName="BG" Property="Background" Value="{DynamicResource PrimaryDarkBrush}"></Setter>
                                        <Setter TargetName="Path" Property="Fill" Value="{DynamicResource PrimaryTextBrush}"></Setter>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </CheckBox.Template>
                    </CheckBox>

                    <Popup Grid.Column="2"  Name="PopupMenuInExport"
                           IsOpen="{Binding ElementName=CbPopForInExport, Path=IsChecked}"
                           StaysOpen="False"
                           AllowsTransparency="True"
                           PlacementTarget="{Binding ElementName=CbPopForInExport}">
                        <Border Padding="0 0 4 4">
                            <Border.Effect>
                                <DropShadowEffect Opacity="0.5" ShadowDepth="3"></DropShadowEffect>
                            </Border.Effect>
                            <Grid MinWidth="150" Background="{DynamicResource PrimaryDarkBrush}">
                                <StackPanel>
                                    <Button Padding="5" Style="{StaticResource ButtonBarPrimaryStyle}" Background="{DynamicResource PrimaryDarkBrush}" Content="{DynamicResource Add}" Click="ButtonAdd_OnClick"></Button>
                                    <Button Padding="5" Style="{StaticResource ButtonBarPrimaryStyle}" Background="{DynamicResource PrimaryDarkBrush}" Content="{DynamicResource Import}" Click="ButtonImport_OnClick"></Button>
                                    <Button Padding="5" Style="{StaticResource ButtonBarPrimaryStyle}" Background="{DynamicResource PrimaryDarkBrush}" Content="{DynamicResource import_from_csv}" Click="ButtonImportMRemoteNgCsv_OnClick"></Button>
                                </StackPanel>
                            </Grid>
                        </Border>
                    </Popup>
                </Grid>
            </Border>
        </Grid>
    </Grid>
</UserControl>