<UserControl x:Class="PRM.View.SystemConfigPage"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:view="clr-namespace:PRM.View"
             xmlns:utils="clr-namespace:Shawn.Utils;assembly=PRM.Core"
             xmlns:attachProperty="clr-namespace:PRM.Resources.Theme.AttachProperty"
             xmlns:configuration="clr-namespace:PRM.ViewModel.Configuration"
             xmlns:protocolConfig="clr-namespace:PRM.View.ProtocolConfig"
             xmlns:converter="clr-namespace:PRM.Resources.Converter"
             xmlns:shawnutils="clr-namespace:Shawn.Utils;assembly=Shawn.Utils"
             xmlns:colorPickerWpf="clr-namespace:ColorPickerWPF;assembly=Shawn.Utils.Wpf"
             xmlns:controls="clr-namespace:Shawn.Utils.Wpf.Controls;assembly=Shawn.Utils.Wpf"
             xmlns:service="clr-namespace:PRM.Service"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance configuration:ConfigurationViewModel}"
             Background="White"
             d:DesignHeight="2450" d:DesignWidth="1000">
    <UserControl.Resources>
        <ResourceDictionary>
            <view:StringIsEmpty2BoolConverter x:Key="StringIsEmpty2BoolConverter"></view:StringIsEmpty2BoolConverter>

            <Style x:Key="GridOneRow" TargetType="Grid">
                <Setter Property="Height" Value="Auto"></Setter>
                <Setter Property="MinWidth" Value="300"></Setter>
                <Setter Property="MinHeight" Value="30"></Setter>
                <Setter Property="Margin">
                    <Setter.Value>
                        <Thickness Bottom="15"></Thickness>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="TextBlockTitleColumn" TargetType="TextBlock">
                <Setter Property="Foreground" Value="{DynamicResource BackgroundTextBrush}"></Setter>
                <Setter Property="VerticalAlignment" Value="Center"></Setter>
                <Setter Property="HorizontalAlignment" Value="Right"></Setter>
                <Setter Property="TextAlignment" Value="Right"></Setter>
                <Setter Property="TextWrapping" Value="WrapWithOverflow"></Setter>
                <Setter Property="Margin" Value="20 0 10 0"></Setter>
            </Style>

            <converter:DoubleAdd x:Key="DoubleAdd_15" AddValue="-15"></converter:DoubleAdd>
            <Style x:Key="TabControlStyle" TargetType="{x:Type TabControl}">
                <Setter Property="Padding" Value="2" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Background" Value="{DynamicResource PrimaryLightBrush}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabControl}">
                            <Grid x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="ColumnDefinition0" Width="200" />
                                    <ColumnDefinition x:Name="ColumnDefinition1" Width="*" />
                                </Grid.ColumnDefinitions>

                                <Border SnapsToDevicePixels="True">
                                    <TabPanel x:Name="headerPanel"
                                          Background="{DynamicResource PrimaryMidBrush}" IsItemsHost="true"
                                          Margin="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1" />
                                </Border>
                                <Border x:Name="contentPanel" SnapsToDevicePixels="True"
                                        Grid.Column="1" Background="{TemplateBinding Background}"
                                        KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                                    <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Border>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Width" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}, Path=ActualWidth}"></Setter>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}, Path=WindowState}" Value="Maximized">
                        <Setter Property="Width" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}, Path=ActualWidth, Converter={StaticResource DoubleAdd_15}}"></Setter>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="TabItem">
                <Setter Property="Foreground" Value="{DynamicResource BackgroundTextBrush}"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TabItem">
                            <Border Name="Border" Padding="0 2" SnapsToDevicePixels="True" BorderBrush="{DynamicResource AccentMidBrush}">
                                <TextBlock x:Name="TabItemContent"
                                           HorizontalAlignment="Center"
                                           Margin="10"
                                           Text="{TemplateBinding Header}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource BackgroundBrush}" />
                                    <Setter TargetName="TabItemContent" Property="Foreground" Value="{DynamicResource BackgroundTextBrush}" />
                                    <Setter TargetName="Border" Property="BorderThickness" Value="0 0 0 1"></Setter>
                                </Trigger>
                                <Trigger Property="IsSelected" Value="False">
                                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource PrimaryMidBrush}" />
                                    <Setter TargetName="TabItemContent" Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="False"></Condition>
                                        <Condition Property="IsMouseOver" Value="True"></Condition>
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.Setters>
                                        <Setter TargetName="Border" Property="Background" Value="{DynamicResource AccentMidBrush}" />
                                        <Setter TargetName="TabItemContent" Property="Foreground" Value="{DynamicResource AccentTextBrush}" />
                                    </MultiTrigger.Setters>
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="False">
                        <Setter Property="Foreground" Value="{DynamicResource BackgroundTextBrush}">
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid Background="{DynamicResource BackgroundBrush}" Grid.IsSharedSizeScope="True">

        <TabControl TabStripPlacement="Left" Style="{StaticResource TabControlStyle}" Background="{DynamicResource BackgroundBrush}">

            <TabItem Name="TabItemGeneral" Header="{DynamicResource system_options_general_title}">
                <StackPanel Margin="0 20 20 0" >

                    <TextBlock Text="{DynamicResource system_options_general_title}" Margin="15" FontSize="20" Height="30" HorizontalAlignment="Left"></TextBlock>

                    <Grid Style="{StaticResource GridOneRow}" Margin="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Column1"></ColumnDefinition>
                            <ColumnDefinition MinWidth="280" MaxWidth="500" SharedSizeGroup="GeneralColumn2"></ColumnDefinition>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Column3"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <TextBlock Style="{StaticResource TextBlockTitleColumn}" Text="{DynamicResource Language}"></TextBlock>

                        <Grid Grid.Column="1">
                            <ComboBox MinWidth="200" HorizontalAlignment="Left"
                                      ItemsSource="{Binding Languages}"
                                      SelectedValue="{Binding Language}"
                                      SelectedValuePath="Key"
                                      DisplayMemberPath="Value" />
                        </Grid>
                    </Grid>
                    <Grid Style="{StaticResource GridOneRow}" Margin="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Column1"></ColumnDefinition>
                            <ColumnDefinition MinWidth="280" SharedSizeGroup="GeneralColumn2"></ColumnDefinition>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Column3"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="1" Margin="0 0 0 0" TextAlignment="Left" TextWrapping="WrapWithOverflow">
                            <Hyperlink controls:HyperlinkHelper.IsOpenExternal="True"
                                       MouseRightButtonDown="ContentElement_OnMouseRightButtonDown"
                                       NavigateUri="https://github.com/VShawn/PRemoteM/wiki/Help-wanted:-Translation" FontSize="12">
                                <Hyperlink.Style>
                                    <Style TargetType="{x:Type Hyperlink}">
                                        <Setter Property="Foreground" Value="{DynamicResource AccentMidBrush}"></Setter>
                                        <Setter Property="TextBlock.TextDecorations" Value="{x:Null}"></Setter>
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Foreground" Value="{DynamicResource AccentLightBrush}"></Setter>
                                                <Setter Property="TextBlock.TextDecorations">
                                                    <Setter.Value>
                                                        <TextDecorationCollection>
                                                            <TextDecoration Location="Underline" />
                                                        </TextDecorationCollection>
                                                    </Setter.Value>
                                                </Setter>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Hyperlink.Style>
                                Can't find your language?
                            </Hyperlink>
                        </TextBlock>
                    </Grid>



                    <Grid Style="{StaticResource GridOneRow}" Margin="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Column1"></ColumnDefinition>
                            <ColumnDefinition MinWidth="280" SharedSizeGroup="GeneralColumn2"></ColumnDefinition>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Column3"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <TextBlock Style="{StaticResource TextBlockTitleColumn}" Text="{DynamicResource Startup}"></TextBlock>
                        <CheckBox Grid.Column="1" IsChecked="{Binding AppStartAutomatically, Mode=TwoWay}" Content="{DynamicResource system_options_general_start_when_win_login}" VerticalAlignment="Center"></CheckBox>
                    </Grid>
                    <Grid Style="{StaticResource GridOneRow}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Column1"></ColumnDefinition>
                            <ColumnDefinition MinWidth="280" SharedSizeGroup="GeneralColumn2"></ColumnDefinition>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Column3"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <CheckBox Grid.Column="1" IsChecked="{Binding AppStartMinimized, Mode=TwoWay}" Content="{DynamicResource system_options_general_start_minimized}" VerticalAlignment="Center"></CheckBox>
                    </Grid>

                    <Grid Style="{StaticResource GridOneRow}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Column1"></ColumnDefinition>
                            <ColumnDefinition MinWidth="280" SharedSizeGroup="GeneralColumn2"></ColumnDefinition>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Column3"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <TextBlock Style="{StaticResource TextBlockTitleColumn}" Text="{DynamicResource Connection}"></TextBlock>
                        <CheckBox Grid.Column="1" IsChecked="{Binding ConfirmBeforeClosingSession, Mode=TwoWay}" Content="{DynamicResource 'Confirm before closing'}" VerticalAlignment="Center"></CheckBox>
                    </Grid>

                    <Grid Style="{StaticResource GridOneRow}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Column1"></ColumnDefinition>
                            <ColumnDefinition MinWidth="280" SharedSizeGroup="GeneralColumn2"></ColumnDefinition>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Column3"></ColumnDefinition>
                        </Grid.ColumnDefinitions>

                        <TextBlock Style="{StaticResource TextBlockTitleColumn}" Text="Log"></TextBlock>
                        <TextBox Grid.Column="1" Text="{x:Static shawnutils:SimpleLogHelper.LogFileName}"
                                 ToolTip="{x:Static shawnutils:SimpleLogHelper.LogFileName}"
                                 VerticalContentAlignment="Center" IsReadOnly="True"></TextBox>
                    </Grid>
                </StackPanel>
            </TabItem>

            <TabItem Name="TabItemQuick" Header="{DynamicResource Launcher}">
                <StackPanel Margin="0 20 20 0" >


                    <TextBlock Text="{DynamicResource Launcher}" Margin="15" FontSize="20" Height="30" HorizontalAlignment="Left"></TextBlock>




                    <Grid Style="{StaticResource GridOneRow}" Margin="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Column1"></ColumnDefinition>
                            <ColumnDefinition MinWidth="280" SharedSizeGroup="LauncherColumn2"></ColumnDefinition>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Column3"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <CheckBox Grid.Column="1" IsChecked="{Binding LauncherEnabled, Mode=TwoWay}" VerticalAlignment="Center" Content="{DynamicResource system_options_quick_launcher_enable}"></CheckBox>
                    </Grid>

                    <Grid Style="{StaticResource GridOneRow}">
                        <Grid.Resources>
                            <view:Key2KeyStringConverter x:Key="Key2KeyStringConverter"></view:Key2KeyStringConverter>
                        </Grid.Resources>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Column1"></ColumnDefinition>
                            <ColumnDefinition MinWidth="280" SharedSizeGroup="LauncherColumn2"></ColumnDefinition>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Column3"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <TextBlock Style="{StaticResource TextBlockTitleColumn}" Text="{DynamicResource system_options_quick_launcher_hotkey}"></TextBlock>
                        <StackPanel Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Center">
                            <ComboBox Width="100" SelectedValuePath="Tag"
                                              SelectedValue="{Binding LauncherHotKeyModifiers}">
                                <ComboBoxItem Tag="{x:Static service:HotkeyModifierKeys.Control}">Ctrl</ComboBoxItem>
                                <ComboBoxItem Tag="{x:Static service:HotkeyModifierKeys.Alt}">Alt</ComboBoxItem>
                                <ComboBoxItem Tag="{x:Static service:HotkeyModifierKeys.Windows}">Win</ComboBoxItem>
                                <ComboBoxItem Tag="{x:Static service:HotkeyModifierKeys.Shift}">Shift</ComboBoxItem>
                                <ComboBoxItem Tag="{x:Static service:HotkeyModifierKeys.ShiftAlt}">Shift + Alt</ComboBoxItem>
                                <ComboBoxItem Tag="{x:Static service:HotkeyModifierKeys.ShiftWindows}">Shift + Win</ComboBoxItem>
                                <ComboBoxItem Tag="{x:Static service:HotkeyModifierKeys.ShiftControl}">Shift + Ctrl</ComboBoxItem>
                                <ComboBoxItem Tag="{x:Static service:HotkeyModifierKeys.ControlAlt}">Ctrl + Alt</ComboBoxItem>
                            </ComboBox>
                            <TextBlock Text="+" VerticalAlignment="Center" Margin="15 0"></TextBlock>
                            <TextBox Width="100"
                                             IsReadOnly="True"
                                             IsReadOnlyCaretVisible="False"
                                             IsUndoEnabled="False"
                                             PreviewKeyDown="TextBoxKey_OnPreviewKeyDown"
                                             Text="{Binding LauncherHotKeyKey, Mode=OneWay,Converter={StaticResource Key2KeyStringConverter}}"></TextBox>
                        </StackPanel>
                    </Grid>

                    <Grid Margin="15 0" Height="30">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{DynamicResource system_options_quick_match_providers}" FontSize="20" Height="30" HorizontalAlignment="Left"></TextBlock>
                        </StackPanel>
                    </Grid>

                    <Grid Style="{StaticResource GridOneRow}">
                        <Grid.Resources>
                            <view:Key2KeyStringConverter x:Key="Key2KeyStringConverter"></view:Key2KeyStringConverter>
                        </Grid.Resources>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Column1"></ColumnDefinition>
                            <ColumnDefinition MinWidth="280" SharedSizeGroup="LauncherColumn2"></ColumnDefinition>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Column3"></ColumnDefinition>
                        </Grid.ColumnDefinitions>

                        <StackPanel Grid.Column="1" Orientation="Horizontal" >
                            <Grid MinWidth="650">
                                <Grid.Resources>
                                    <DataTemplate x:Key="DataTemplateForMatcher" DataType="service:MatchProviderInfo">
                                        <Grid Margin=" 0 0 5 15">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                            </Grid.RowDefinitions>

                                            <CheckBox Grid.Row="0" Cursor="Hand" Margin="0 0 1 0"
                                                      IsChecked="{Binding Enabled}"
                                                      IsEnabled="{Binding IsEditable}"
                                                      Content="{Binding Title1}"
                                                      ToolTip="{Binding Title1}"
                                                      ></CheckBox>
                                            <TextBlock Grid.Row="2"
                                                       Text="{Binding Title2}"
                                                       ToolTip="{Binding Title2}"
                                                       FontSize="10" Opacity="0.6"></TextBlock>
                                        </Grid>
                                    </DataTemplate>
                                </Grid.Resources>
                                <ListView Background="Transparent" BorderThickness="1"
                                          ItemsSource="{Binding AvailableMatcherProviders}" 
                                          ItemTemplate="{StaticResource DataTemplateForMatcher}">
                                    <ListView.Style>
                                        <Style TargetType="ListView">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ListView}">
                                                        <ScrollViewer x:Name="ScrollViewer" BorderThickness="0">
                                                            <ItemsPresenter/>
                                                        </ScrollViewer>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ListView.Style>
                                    <ListView.Resources>
                                        <Style TargetType="{x:Type ListViewItem}">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="{x:Null}" />
                                                </Trigger>
                                                <Trigger Property="IsSelected" Value="true">
                                                    <Setter Property="Background" Value="{x:Null}" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ListView.Resources>
                                </ListView>
                            </Grid>
                        </StackPanel>
                    </Grid>
                </StackPanel>
            </TabItem>

            <TabItem Name="TabItemDataBase" Header="{DynamicResource system_options_data_security_title}">

                <StackPanel Margin="0 20 20 0" >

                    <TextBlock Text="{DynamicResource system_options_data_security_title}" Margin="15" FontSize="20" Height="30" HorizontalAlignment="Left"></TextBlock>

                    <Grid Style="{StaticResource GridOneRow}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Column1"></ColumnDefinition>
                            <ColumnDefinition MinWidth="280" SharedSizeGroup="DataColumn2"></ColumnDefinition>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Column3"></ColumnDefinition>
                        </Grid.ColumnDefinitions>

                        <TextBlock Style="{StaticResource TextBlockTitleColumn}" Text="{DynamicResource system_options_data_security_database}"></TextBlock>
                        <TextBox Grid.Column="1" Text="{Binding DbPath, Mode=OneWay}" FontSize="9" VerticalContentAlignment="Center" IsReadOnly="True" Tag="{Binding DbPath, Mode=OneWay}"></TextBox>

                        <StackPanel Grid.Column="2" Orientation="Horizontal">
                            <Button Style="{StaticResource ButtonPrimaryStyle}" Margin="5 0 0 0" Content="{DynamicResource Select}" Command="{Binding CmdSelectDbPath}"></Button>
                            <Button Style="{StaticResource ButtonPrimaryStyle}" Margin="5 0 0 0" Content="{DynamicResource system_options_data_security_database_migrate}" Command="{Binding CmdDbMigrate}"></Button>
                        </StackPanel>
                    </Grid>


                    <Grid Style="{StaticResource GridOneRow}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Column1"></ColumnDefinition>
                            <ColumnDefinition MinWidth="280" SharedSizeGroup="DataColumn2"></ColumnDefinition>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Column3"></ColumnDefinition>
                        </Grid.ColumnDefinitions>

                        <TextBlock Style="{StaticResource TextBlockTitleColumn}" Text="{DynamicResource system_options_data_security_rsa_title}"></TextBlock>

                        <StackPanel Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Center">
                            <Button Margin="0" Command="{Binding CmdGenRsaKey}"
                                            Content="{DynamicResource system_options_data_security_rsa_encrypt}">
                                <Button.Style>
                                    <Style TargetType="Button" BasedOn="{StaticResource ButtonAccentStyle}">
                                        <Setter Property="IsEnabled" Value="False"></Setter>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding DbRsaPublicKey, Converter={StaticResource StringIsEmpty2BoolConverter}}" Value="true">
                                                <Setter Property="IsEnabled" Value="True"></Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <Button Margin="10 0 0 0" Command="{Binding CmdClearRsaKey}"
                                            Content="{DynamicResource system_options_data_security_rsa_decrypt}">
                                <Button.Style>
                                    <Style TargetType="Button" BasedOn="{StaticResource ButtonAccentStyle}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding DbRsaPublicKey, Converter={StaticResource StringIsEmpty2BoolConverter}}" Value="true">
                                                <Setter Property="IsEnabled" Value="False"></Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </StackPanel>
                    </Grid>

                    <Grid Style="{StaticResource GridOneRow}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Column1"></ColumnDefinition>
                            <ColumnDefinition MinWidth="280" SharedSizeGroup="DataColumn2"></ColumnDefinition>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Column3"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <TextBlock Style="{StaticResource TextBlockTitleColumn}" Name="TbPublicKey" Text="{DynamicResource system_options_data_security_rsa_public_key}"></TextBlock>
                        <TextBox Grid.Column="1" Text="{Binding DbRsaPublicKey, Mode=OneWay}" 
                                     VerticalContentAlignment="Center" 
                                     TextWrapping="Wrap" Height="200" MaxWidth="500"
                                     Focusable="False"
                                     IsReadOnly="True"></TextBox>
                    </Grid>



                    <Grid Style="{StaticResource GridOneRow}" Margin="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Column1"></ColumnDefinition>
                            <ColumnDefinition MinWidth="280" SharedSizeGroup="DataColumn2"></ColumnDefinition>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Column3"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <TextBlock Style="{StaticResource TextBlockTitleColumn}" Text="{DynamicResource system_options_data_security_rsa_private_key_path}"></TextBlock>
                        <TextBox Grid.Column="1" Text="{Binding DbRsaPrivateKeyPath, Mode=OneWay}" VerticalContentAlignment="Center" IsReadOnly="True"></TextBox>
                        <Button Grid.Column="2" HorizontalAlignment="Left" Content="{DynamicResource Select}" Command="{Binding CmdSelectRsaPrivateKey}" Margin="5 0 0 0">
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource ButtonPrimaryStyle}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding DbRsaPublicKey, Converter={StaticResource StringIsEmpty2BoolConverter}}" Value="true">
                                            <Setter Property="IsEnabled" Value="False"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </Grid>
                    <Grid Style="{StaticResource GridOneRow}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Column1"></ColumnDefinition>
                            <ColumnDefinition MinWidth="280" SharedSizeGroup="DataColumn2"></ColumnDefinition>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Column3"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="1" HorizontalAlignment="Left" Opacity="0.3" Text="{DynamicResource system_options_data_security_info_encrypt_private_key_warning}" TextWrapping="WrapWithOverflow"></TextBlock>
                    </Grid>
                </StackPanel>
            </TabItem>

            <TabItem Name="TabItemTheme" Header="{DynamicResource Theme}">
                <StackPanel Margin="0 20 20 0">

                    <TextBlock Text="{DynamicResource Theme}" Margin="15" FontSize="20" Height="30" HorizontalAlignment="Left"></TextBlock>

                    <Grid Style="{StaticResource GridOneRow}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Column1"></ColumnDefinition>
                            <ColumnDefinition MinWidth="280" SharedSizeGroup="ThemeColumn2"></ColumnDefinition>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Column3"></ColumnDefinition>
                        </Grid.ColumnDefinitions>

                        <TextBlock Style="{StaticResource TextBlockTitleColumn}" Text="{DynamicResource Theme}"></TextBlock>

                        <ComboBox Grid.Column="1"
                                  ItemsSource="{Binding ThemeList}"
                                      SelectedItem="{Binding ThemeName}">
                        </ComboBox>

                        <Button Grid.Column="2" HorizontalAlignment="Left" Margin="5 0 0 0" Style="{StaticResource ButtonPrimaryStyle}" Content="{DynamicResource Reset}" Command="{Binding CmdResetTheme}"></Button>
                    </Grid>

                    <Grid Style="{StaticResource GridOneRow}" Margin="0 20 0 0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Column1"></ColumnDefinition>
                            <ColumnDefinition MinWidth="280" SharedSizeGroup="ThemeColumn2"></ColumnDefinition>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Column3"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <TextBlock Style="{StaticResource TextBlockTitleColumn}" Text="{DynamicResource Custom}"></TextBlock>
                    </Grid>

                    <Grid Width="450" HorizontalAlignment="Left" Margin="0 0 0 0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="40"></RowDefinition>
                            <RowDefinition Height="40"></RowDefinition>
                            <RowDefinition Height="40"></RowDefinition>
                            <RowDefinition Height="40"></RowDefinition>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Column1"></ColumnDefinition>
                            <ColumnDefinition Width="50"></ColumnDefinition>
                            <ColumnDefinition></ColumnDefinition>
                            <ColumnDefinition></ColumnDefinition>
                            <ColumnDefinition></ColumnDefinition>
                            <ColumnDefinition></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Grid.Resources>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource TextBlockBase}">
                                <Setter Property="TextAlignment" Value="Center"></Setter>
                                <Setter Property="VerticalAlignment" Value="Center"></Setter>
                                <Setter Property="HorizontalAlignment" Value="Left"></Setter>
                            </Style>
                            <Style TargetType="{x:Type colorPickerWpf:ColorPickRowPopup}">
                                <Setter Property="VerticalAlignment" Value="Center"></Setter>
                                <Setter Property="HorizontalAlignment" Value="Left"></Setter>
                                <Setter Property="HexVisible" Value="Collapsed"></Setter>
                            </Style>
                        </Grid.Resources>

                        <TextBlock Grid.Row="0" Grid.Column="2" Text="{DynamicResource Normal}"></TextBlock>
                        <TextBlock Grid.Row="0" Grid.Column="3" Text="{DynamicResource Lighter}"></TextBlock>
                        <TextBlock Grid.Row="0" Grid.Column="4" Text="{DynamicResource Darker}"></TextBlock>
                        <TextBlock Grid.Row="0" Grid.Column="5" Text="{DynamicResource Font}"></TextBlock>

                        <TextBlock Style="{StaticResource TextBlockTitleColumn}" Grid.Row="1" Grid.Column="0" Text="{DynamicResource Color1}"></TextBlock>
                        <colorPickerWpf:ColorPickRowPopup Grid.Row="1" Grid.Column="2" HexColor="{Binding PrimaryMidColor}" />
                        <colorPickerWpf:ColorPickRowPopup Grid.Row="1" Grid.Column="3" HexColor="{Binding PrimaryLightColor}" />
                        <colorPickerWpf:ColorPickRowPopup Grid.Row="1" Grid.Column="4" HexColor="{Binding PrimaryDarkColor}" />
                        <colorPickerWpf:ColorPickRowPopup Grid.Row="1" Grid.Column="5" HexColor="{Binding PrimaryTextColor}" />

                        <TextBlock Style="{StaticResource TextBlockTitleColumn}" Grid.Row="2" Grid.Column="0" Text="{DynamicResource Color2}"></TextBlock>
                        <colorPickerWpf:ColorPickRowPopup Grid.Row="2" Grid.Column="2" HexColor="{Binding AccentMidColor}" />
                        <colorPickerWpf:ColorPickRowPopup Grid.Row="2" Grid.Column="3" HexColor="{Binding AccentLightColor}" />
                        <colorPickerWpf:ColorPickRowPopup Grid.Row="2" Grid.Column="4" HexColor="{Binding AccentDarkColor}" />
                        <colorPickerWpf:ColorPickRowPopup Grid.Row="2" Grid.Column="5" HexColor="{Binding AccentTextColor}" />

                        <TextBlock Style="{StaticResource TextBlockTitleColumn}" Grid.Row="3" Grid.Column="0" Text="{DynamicResource Background}"></TextBlock>
                        <colorPickerWpf:ColorPickRowPopup Grid.Row="3" Grid.Column="2" HexColor="{Binding BackgroundColor}" />
                        <colorPickerWpf:ColorPickRowPopup Grid.Row="3" Grid.Column="5" HexColor="{Binding BackgroundTextColor}" />
                    </Grid>
                </StackPanel>
            </TabItem>

            <TabItem Header="{DynamicResource Protocol}">
                <protocolConfig:ProtocolConfiger Width="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=TabItem}, Path=Width}" />
            </TabItem>

        </TabControl>

        <Button VerticalAlignment="Bottom"
                Width="200" Height="40"
                HorizontalAlignment="Left"
                Foreground="{DynamicResource PrimaryTextBrush}"
                Background="{DynamicResource PrimaryDarkBrush}"
                Style="{StaticResource ButtonBarAccentStyle}"
                attachProperty:VisionElement.BackgroundAccent="{DynamicResource AccentMidBrush}"
                Command="{Binding CmdSaveAndGoBack}"
                Content="{DynamicResource Back}">
        </Button>
    </Grid>
</UserControl>