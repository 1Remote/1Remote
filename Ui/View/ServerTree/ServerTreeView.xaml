<UserControl x:Class="_1RM.View.ServerTree.ServerTreeView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:_1RM.View.ServerTree"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance local:ServerTreeViewModel}"
             d:DesignHeight="450" d:DesignWidth="800"
             Focusable="True" 
             PreviewKeyDown="ServerTreeView_PreviewKeyDown">

    <UserControl.Resources>
        <ResourceDictionary>
            <Style x:Key="SelectedCheckBoxStyle" TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
                <Setter Property="Visibility" Value="Hidden"></Setter>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding ElementName=GridNode,Path=IsMouseOver}" Value="True">
                        <Setter Property="Visibility" Value="Visible"></Setter>
                    </DataTrigger>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter Property="Visibility" Value="Visible"></Setter>
                    </Trigger>
                    <Trigger Property="IsChecked" Value="{x:Null}">
                        <Setter Property="Visibility" Value="Visible"></Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid Background="{DynamicResource PrimaryMidBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Top header with add button -->
        <!--
        <Grid Grid.Row="0" VerticalAlignment="Top">
            <Border BorderThickness="0 0 0 1" BorderBrush="{DynamicResource AccentMidBrush}" Background="{DynamicResource PrimaryTextBrush}" Height="20">
                <Border.Effect>
                    <DropShadowEffect ShadowDepth="3" Direction="270"  Opacity="0.6" Color="Black"></DropShadowEffect>
                </Border.Effect>
            </Border>

            <Border BorderThickness="0 0 0 2" BorderBrush="{DynamicResource AccentMidBrush}" Background="{DynamicResource PrimaryMidBrush}">
                <Grid MinHeight="20">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                        <Button Width="20" Height="20" HorizontalAlignment="Right" Margin="0 0 5 0"
                                Command="{Binding CmdAdd}"
                                ToolTip="{DynamicResource Add}">
                            <Grid>
                                <Path Data="{StaticResource GeometryCross}" 
                                      Stretch="Uniform"
                                      Fill="{DynamicResource PrimaryTextBrush}"/>
                            </Grid>
                        </Button>
                    </StackPanel>
                </Grid>
            </Border>
        </Grid>-->


        <!-- Main tree view area -->
        <Grid Grid.Row="0" Background="{DynamicResource BackgroundBrush}">
            <TreeView x:Name="MainTreeView" Background="Transparent" BorderThickness="0" 
                      ItemsSource="{Binding RootNodes}"
                      MouseMove="MainTreeView_OnMouseMove"
                      KeyboardNavigation.TabNavigation="Contained"
                      KeyboardNavigation.DirectionalNavigation="Contained"
                      Focusable="True"
                      VirtualizingPanel.IsVirtualizing="True"
                      VirtualizingPanel.VirtualizationMode="Recycling">
                <TreeView.Resources>
                    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Fill" Color="{DynamicResource PrimaryTextColor}"/>
                    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Fill" Color="{DynamicResource AccentLightColor}"/>
                    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Stroke" Color="{DynamicResource AccentLightColor}"/>
                </TreeView.Resources>
                <TreeView.ItemContainerStyle>
                    <Style TargetType="{x:Type TreeViewItem}">
                        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                        <Setter Property="Foreground" Value="{DynamicResource BackgroundTextBrush}"/>
                        <Setter Property="Focusable" Value="False" />
                        <Setter Property="Padding" Value="2,1"/>
                        <Setter Property="Margin" Value="0"/>
                        <Setter Property="AllowDrop" Value="True"/>
                        <!--<Setter Property="KeyboardNavigation.TabNavigation" Value="Continue"/>-->
                        <EventSetter Event="PreviewMouseMove" Handler="TreeViewItem_OnPreviewMouseMove"/>
                        <EventSetter Event="DragOver" Handler="TreeViewItem_OnDragOver"/>
                        <EventSetter Event="Drop" Handler="TreeViewItem_OnDrop"/>
                        <Style.Triggers>
                            <!-- Add bottom margin for folder items to create spacing -->
                            <DataTrigger Binding="{Binding IsFolder}" Value="True">
                                <Setter Property="Margin" Value="0,0,0,12"/>
                            </DataTrigger>
                            <!-- Add extra spacing for root folders -->
                            <DataTrigger Binding="{Binding IsRootFolder}" Value="True">
                                <Setter Property="Margin" Value="0,0,0,16"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TreeView.ItemContainerStyle>

                <TreeView.ContextMenu>
                    <ContextMenu>
                        <!-- For folder nodes -->
                        <MenuItem Header="TXT:New Server" Command="{Binding CmdAddServerToNode}">
                            <MenuItem.Icon>
                                <Path Data="{StaticResource GeometryCross}" 
                                      Width="12" Height="12" 
                                      Fill="{DynamicResource PrimaryTextBrush}" 
                                      Stretch="Uniform"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="TXT:New Folder" 
                                  Command="{Binding CmdCreateFolder}">
                            <MenuItem.Icon>
                                <Path Data="M10 4H4c-1.11 0-2 .89-2 2v12c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V8c0-1.11-.89-2-2-2h-8l-2-2z" 
                                      Width="12" Height="12" 
                                      Fill="{DynamicResource PrimaryTextBrush}" 
                                      Stretch="Uniform"/>
                            </MenuItem.Icon>
                        </MenuItem>
                    </ContextMenu>
                </TreeView.ContextMenu>
                <TreeView.ItemTemplate>
                    <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                        <Grid Margin="0"
                              Name="GridNode" 
                              MouseDown="MainTreeViewItem_OnMouseDown"
                              Tag="{Binding DataContext, RelativeSource={RelativeSource AncestorType=local:ServerTreeView} }"
                        >
                            <Grid.Style>
                                <Style TargetType="Grid">
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Style.Triggers>
                                        <!-- highlight when mouseover -->
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background">
                                                <Setter.Value>
                                                    <SolidColorBrush Color="{DynamicResource BackgroundTextColor}" Opacity="0.3"/>
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>
                            <Grid.ContextMenu>
                                <ContextMenu>
                                    <!-- For folder nodes -->
                                    <MenuItem Header="TXT:New Server" 
                                              Visibility="{Binding IsFolder, Converter={StaticResource ConverterBool2Visible}}"
                                              Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.Tag.CmdAddServerToNode}" 
                                              CommandParameter="{Binding}">
                                        <MenuItem.Icon>
                                            <Path Data="{StaticResource GeometryCross}" 
                                                  Width="12" Height="12" 
                                                  Fill="{DynamicResource PrimaryTextBrush}" 
                                                  Stretch="Uniform"/>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem Header="TXT:New Folder" 
                                              Visibility="{Binding IsFolder, Converter={StaticResource ConverterBool2Visible}}"
                                              Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.Tag.CmdCreateFolder}"
                                              CommandParameter="{Binding}">
                                        <MenuItem.Icon>
                                            <Path Data="M10 4H4c-1.11 0-2 .89-2 2v12c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V8c0-1.11-.89-2-2-2h-8l-2-2z" 
                                                  Width="12" Height="12" 
                                                  Fill="{DynamicResource PrimaryTextBrush}" 
                                                  Stretch="Uniform"/>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem Header="TXT: Rename" 
                                              Visibility="{Binding IsFolder, Converter={StaticResource ConverterBool2Visible}}"
                                              IsEnabled="{Binding IsRootFolder, Converter={StaticResource ConverterBoolInverse}}"
                                              Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.Tag.CmdEditNode}"
                                              CommandParameter="{Binding}">
                                        <!--<MenuItem.Icon>
                                            <Path Data="M12.5 8c-2.65 0-5.05.99-6.9 2.6L2 7v9h9l-3.62-3.62c1.39-1.16 3.16-1.88 5.12-1.88 3.54 0 6.55 2.31 7.6 5.5l2.37-.78C21.08 11.03 17.15 8 12.5 8z" 
                                                  Width="12" Height="12" 
                                                  Fill="{DynamicResource PrimaryTextBrush}" 
                                                  Stretch="Uniform"/>
                                        </MenuItem.Icon>-->
                                    </MenuItem>
                                    <MenuItem Header="TXT:Bulk edit Servers" 
                                              Visibility="{Binding IsFolder, Converter={StaticResource ConverterBool2Visible}}"
                                              Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.Tag.CmdMultiEditFolderServers}"
                                              CommandParameter="{Binding}">
                                        <MenuItem.Icon>
                                            <Path Data="M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z" 
                                                  Width="12" Height="12" 
                                                  Fill="{DynamicResource PrimaryTextBrush}" 
                                                  Stretch="Uniform"/>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <!--<Separator Visibility="{Binding IsFolder, Converter={StaticResource ConverterBool2Visible}}"/>-->

                                    <!-- For server nodes -->
                                    <MenuItem Header="TXT:Connect" 
                                              Visibility="{Binding IsFolder, Converter={StaticResource ConverterBool2VisibleInv}}"
                                              Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.Tag.CmdConnectSelected}">
                                        <MenuItem.Icon>
                                            <Path Data="M12 2l3.09 6.26L22 9l-5.55 5.15L18 22l-6-3.27L6 22l1.55-7.85L2 9l6.91-.74L12 2z" 
                                                  Width="12" Height="12" 
                                                  Fill="{DynamicResource PrimaryTextBrush}" 
                                                  Stretch="Uniform"/>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem Header="TXT:Edit" 
                                              Visibility="{Binding IsFolder, Converter={StaticResource ConverterBool2VisibleInv}}"
                                              Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.Tag.CmdEditNode}"
                                              CommandParameter="{Binding}">
                                        <MenuItem.Icon>
                                            <Path Data="M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z" 
                                                  Width="12" Height="12" 
                                                  Fill="{DynamicResource PrimaryTextBrush}" 
                                                  Stretch="Uniform"/>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem Header="TXT:Duplicate TODO" 
                                              Visibility="{Binding IsFolder, Converter={StaticResource ConverterBool2VisibleInv}}"
                                              CommandParameter="{Binding}">
                                        <MenuItem.Icon>
                                            <Path Data="{StaticResource GeometryCross}" 
                                                  Width="12" Height="12" 
                                                  Fill="{DynamicResource PrimaryTextBrush}" 
                                                  Stretch="Uniform"/>
                                        </MenuItem.Icon>
                                    </MenuItem>

                                    <!--<Separator Visibility="{Binding IsFolder, Converter={StaticResource ConverterBool2VisibleInv}}"/>-->

                                    <!-- Common items -->


                                    <Separator/>
                                    <MenuItem Header="Delete" 
                                              IsEnabled="{Binding IsRootFolder, Converter={StaticResource ConverterBoolInverse}}"
                                              Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.Tag.CmdDeleteNode}"
                                              CommandParameter="{Binding}">
                                        <MenuItem.Icon>
                                            <Path Data="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z" 
                                                  Width="12" Height="12" 
                                                  Fill="{DynamicResource PrimaryTextBrush}" 
                                                  Stretch="Uniform"/>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                </ContextMenu>
                            </Grid.ContextMenu>

                            <Grid Margin="0 3 20 3" MinWidth="200" MinHeight="20"
                                  Background="Transparent"
                                  MouseLeftButtonDown="TreeViewItemGrid_OnMouseLeftButtonDown"
                                  PreviewMouseLeftButtonUp="TreeViewItemGrid_OnMouseLeftButtonUp"
                                  >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <!--<Border BorderThickness="1 0 0 0" BorderBrush=""></Border>-->
                                
                                <!-- For folder nodes -->
                                <Border Grid.Column="0" Grid.ColumnSpan="2"
                                        Visibility="{Binding IsFolder, Converter={StaticResource ConverterBool2Visible}}"
                                        VerticalAlignment="Center"
                                        >
                                    <StackPanel Orientation="Horizontal">
                                        <CheckBox Margin="3 0 0 0" 
                                                  Width="20" Height="20" 
                                                  HorizontalAlignment="Left" 
                                                  Click="ItemsCheckBox_OnClick"
                                                  Style="{StaticResource SelectedCheckBoxStyle}"
                                                  IsChecked="{Binding IsCheckboxSelected, UpdateSourceTrigger=PropertyChanged}">
                                        </CheckBox>
                                        <Grid Width="16" Height="16" Margin="0,0,4,0">
                                            <Path Visibility="{Binding IsRootFolder, Converter={StaticResource ConverterBool2VisibleInv}}"
                                                  Fill="{DynamicResource AccentMidBrush}" 
                                                  Stretch="Uniform"
                                                  Data="{StaticResource GeometryFolder}"/>
                                            <Path Visibility="{Binding IsRootFolder, Converter={StaticResource ConverterBool2Visible}}"
                                                  Fill="{DynamicResource AccentMidBrush}"
                                                  Stretch="Uniform"
                                                  Data="{DynamicResource GeometryDatabase}"/>
                                        </Grid>
                                        <TextBlock Text="{Binding Name}" VerticalAlignment="Center" 
                                                   Foreground="{DynamicResource BackgroundTextBrush}" 
                                                   FontWeight="Bold"/>
                                    </StackPanel>
                                </Border>

                                <!-- For server nodes -->
                                <Grid Grid.Column="0" Grid.ColumnSpan="2"
                                      Background="Transparent" 
                                      Visibility="{Binding IsFolder, Converter={StaticResource ConverterBool2VisibleInv}}"
                                      VerticalAlignment="Center">
                                    <Grid.InputBindings>
                                        <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding Server.CmdConnServer}"></MouseBinding>
                                    </Grid.InputBindings>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>


                                    <CheckBox Grid.Column="0" Margin="3 0 0 0" 
                                              Width="20" Height="20" 
                                              HorizontalAlignment="Left" 
                                              Click="ItemsCheckBox_OnClick"
                                              Style="{StaticResource SelectedCheckBoxStyle}"
                                              IsChecked="{Binding IsCheckboxSelected, UpdateSourceTrigger=PropertyChanged}">
                                    </CheckBox>

                                    <Grid Grid.Column="1" Background="Transparent">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>

                                        <Image Grid.Column="0" 
                                               Width="16" Height="16" Margin="0,0,4,0"
                                               Source="{Binding Server.Server.IconImg}" 
                                               RenderOptions.BitmapScalingMode="HighQuality"
                                               VerticalAlignment="Center"/>

                                        <!-- Server Name -->
                                        <TextBlock Grid.Column="1" 
                                                   Text="{Binding Server.DisplayName}" 
                                                   VerticalAlignment="Center"
                                                   TextTrimming="CharacterEllipsis"
                                                   ToolTip="{Binding Server.DisplayName}"/>
                                        <TextBlock Grid.Column="2" Margin="5 0 0 0"
                                                   Text="{Binding Server.SubTitle}" 
                                                   FontSize="{DynamicResource GlobalFontSizeSmall}"
                                                   Opacity="0.5"
                                                   VerticalAlignment="Center"
                                                   TextTrimming="CharacterEllipsis"
                                                   ToolTip="{Binding Server.DisplayName}"/>
                                    </Grid>
                                </Grid>
                            </Grid>
                        </Grid>
                    </HierarchicalDataTemplate>
                </TreeView.ItemTemplate>
            </TreeView>

            <!-- footer: show detail of a server -->
            <Grid Name="GridBottom" VerticalAlignment="Bottom" Height="30" Background="{DynamicResource PrimaryMidBrush}" IsHitTestVisible="False">
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="Opacity" Value="0.9"></Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding SelectedServerViewModel}" Value="{x:Null}">
                                <Setter Property="Opacity" Value="0"></Setter>
                            </DataTrigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" Value="0"></Setter>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <StackPanel.Resources>
                        <Style TargetType="TextBlock" BasedOn="{StaticResource TextBlockBase}">
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"></Setter>
                            <Setter Property="Margin" Value="0 0 5 0"></Setter>
                        </Style>
                    </StackPanel.Resources>
                    <TextBlock Text="{Binding SelectedServerViewModel.Server.DisplayName}" Style="{StaticResource TextBlockBase}" Margin="5 0"></TextBlock>
                    <TextBlock Text="{Binding SelectedServerViewModel.Server.SubTitle}" Style="{StaticResource TextBlockBase}"></TextBlock>
                </StackPanel>
            </Grid>
        </Grid>



        <!-- Show tooltip for how to add when tree is empty -->
        <Border Grid.Row="0" HorizontalAlignment="Right" Visibility="{Binding RootNodes.Count, Converter={StaticResource ConverterEqual2Visible}, ConverterParameter=0}">
            <StackPanel>
                <Path Fill="{DynamicResource BackgroundTextBrush}" 
                      Margin="25 20 25 5" Width="50" HorizontalAlignment="Right"
                      Stretch="UniformToFill" Data="M 70.3711 1.2207 L 63.1409 2.666 L 68.054 2.78 C 61.006 12.645 49.14 12.505 47 24 C 46.938 24.449 47.885 24.549 48 24 C 50.066 12.953 62.38 12.673 68.819 3.201 L 69 8 Z" />
                <TextBlock Margin="0 0 10 0" Foreground="{DynamicResource BackgroundTextBrush}" FontSize="22" FontWeight="Bold" HorizontalAlignment="Right">Add new session</TextBlock>
            </StackPanel>
        </Border>
        <Grid Grid.Row="0" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0 0 5 0">
            <CheckBox Name="CbPopForInExport" Width="25" Height="25">
                <CheckBox.Template>
                    <ControlTemplate>
                        <Border Name="BG" Background="Transparent">
                            <Grid Margin="1" VerticalAlignment="Center">
                                <Path Data="M 41.888 18.304 L 41.888 23.584 L 23.584 23.584 L 23.584 41.888 L 18.304 41.888 L 18.304 23.584 L 0 23.584 L 0 18.304 L 18.304 18.304 L 18.304 0 L 23.584 0 L 23.584 18.304 Z"
                                      Stretch="Uniform" Name="Path"
                                      Margin="5" Fill="{DynamicResource PrimaryTextBrush}"></Path>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="CheckBox.IsMouseOver" Value="True">
                                <Setter TargetName="BG" Property="Background" Value="{DynamicResource PrimaryLightBrush}"></Setter>
                                <Setter TargetName="Path" Property="Margin" Value="2"></Setter>
                                <Setter TargetName="Path" Property="Fill" Value="{DynamicResource PrimaryTextBrush}"></Setter>
                            </Trigger>
                            <Trigger Property="CheckBox.IsChecked" Value="True">
                                <Setter TargetName="BG" Property="Background" Value="{DynamicResource PrimaryDarkBrush}"></Setter>
                                <Setter TargetName="Path" Property="Fill" Value="{DynamicResource PrimaryTextBrush}"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </CheckBox.Template>
            </CheckBox>

            <Popup IsOpen="{Binding ElementName=CbPopForInExport, Path=IsChecked}"
                   StaysOpen="False"
                   AllowsTransparency="True"
                   PlacementTarget="{Binding ElementName=CbPopForInExport}">
                <Border CornerRadius="5" Background="{DynamicResource PrimaryDarkBrush}">
                    <StackPanel Orientation="Vertical">
                        <MenuItem Header="{DynamicResource Add}" Command="{Binding CmdAdd}">
                            <MenuItem.Icon>
                                <Path Data="{StaticResource GeometryCross}"
                                      Stretch="Uniform"
                                      Margin="2" Fill="{DynamicResource PrimaryTextBrush}"></Path>
                            </MenuItem.Icon>
                        </MenuItem>
                        <Separator Style="{StaticResource SeparatorBaseStyle}"/>
                        <MenuItem Header="{DynamicResource import_from_json}" Command="{Binding CmdImportFromJson}">
                            <MenuItem.Icon>
                                <Path UseLayoutRounding="True" Data="{StaticResource GeometryCopy}" Fill="{DynamicResource PrimaryTextBrush}" Stretch="Uniform"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="{DynamicResource import_from_mremoteng_csv}" Command="{Binding CmdImportFromCsv}"></MenuItem>
                        <MenuItem Header="{DynamicResource import_from_rdp_file}" Command="{Binding CmdImportFromRdp}"></MenuItem>
                        <MenuItem Header="{DynamicResource import_from_sqlite_db}" Command="{Binding CmdImportFromDatabase}"></MenuItem>
                    </StackPanel>
                </Border>
            </Popup>
        </Grid>

        <!-- Popup when any item is selected -->
        <Grid Grid.Row="1" Background="{DynamicResource PrimaryMidBrush}" Height="40">
            <Grid.Style>
                <Style TargetType="Grid">
                    <Setter Property="Visibility" Value="Visible"></Setter>
                    <Setter Property="Margin" Value="0 0 0 -50"></Setter>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsAnySelected}" Value="True">
                            <Setter Property="Visibility" Value="Visible"></Setter>
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimationUsingKeyFrames BeginTime="0:0:0" Storyboard.TargetProperty="Margin" AccelerationRatio="0.9">
                                            <SplineThicknessKeyFrame KeyTime="0:0:0.0" Value="0,0,0,-50" />
                                            <SplineThicknessKeyFrame KeyTime="0:0:0.400" Value="0,0,0,0" />
                                        </ThicknessAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimationUsingKeyFrames BeginTime="0:0:0" Storyboard.TargetProperty="Margin">
                                            <SplineThicknessKeyFrame KeyTime="0:0:0.0" Value="0,0,0,0" />
                                            <SplineThicknessKeyFrame KeyTime="0:0:0.200" Value="0,0,0,-50" />
                                        </ThicknessAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>

            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                <Button Height="30" MinWidth="80" Margin="5 0" Content="{DynamicResource Cancel}" Command="{Binding CmdCancelSelected}"></Button>
                <TextBlock Style="{StaticResource TextBlockBase}" Text="{DynamicResource server_editor_multi_selected_count}" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="{DynamicResource PrimaryTextBrush}"></TextBlock>
                <TextBlock Style="{StaticResource TextBlockBase}" Text="{Binding SelectedCount}" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="{DynamicResource PrimaryTextBrush}" Margin="5 0 0 0"></TextBlock>
            </StackPanel>

            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                <Button Height="30" MinWidth="80" Margin="5 0 0 0" Content="{DynamicResource Connect}" Command="{Binding CmdConnectSelected}"></Button>
                <Button Height="30" MinWidth="80" Margin="5 0 0 0" Content="{DynamicResource Edit}" Command="{Binding CmdMultiEditSelected}"></Button>
                <Button Height="30" MinWidth="80" Margin="5 0 0 0" Content="{DynamicResource 'Create desktop shortcut'}" Command="{Binding CmdCreateDesktopShortcut}"></Button>
                <Button Height="30" MinWidth="80" Margin="5 0 0 0" Content="{DynamicResource Delete}" Command="{Binding CmdDeleteSelected}"></Button>
                <Button Height="30" MinWidth="80" Margin="5 0" Content="{DynamicResource Export}" Command="{Binding CmdExportSelectedToJson}"></Button>
            </StackPanel>
        </Grid>
    </Grid>
</UserControl>
