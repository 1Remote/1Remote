<UserControl x:Class="_1RM.View.ServerList.ServerListPageView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:view="clr-namespace:_1RM.View"
             xmlns:controls="clr-namespace:_1RM.Controls"
             xmlns:controls1="clr-namespace:Shawn.Utils.Wpf.Controls;assembly=Shawn.Utils.Wpf"
             xmlns:service="clr-namespace:_1RM.Service"
             xmlns:model="clr-namespace:_1RM.Model"
             xmlns:attachProperty="clr-namespace:Shawn.Utils.WpfResources.Theme.AttachProperty;assembly=Shawn.Utils.WpfResources"
             xmlns:s="https://github.com/canton7/Stylet"
             xmlns:controls2="clr-namespace:WpfToolkit.Controls;assembly=VirtualizingWrapPanel"
             xmlns:serverList="clr-namespace:_1RM.View.ServerList"
             mc:Ignorable="d"
             Background="White"
             d:DataContext="{d:DesignInstance serverList:ServerListPageViewModel}"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>
            <CollectionViewSource x:Key="ServerListItemSource" 
                                  Source="{Binding VmServerList}"
                                  Filter="ServerListItemSource_OnFilter">
                <!--<CollectionViewSource.GroupDescriptions>
                    <PropertyGroupDescription PropertyName="DataSourceName"></PropertyGroupDescription>
                </CollectionViewSource.GroupDescriptions>-->
            </CollectionViewSource>


            <Style TargetType="{x:Type Expander}">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0 "/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Expander}">
                            <Border BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    Background="{TemplateBinding Background}" 
                                    CornerRadius="0"
                                    SnapsToDevicePixels="True">
                                <StackPanel MinHeight="25">
                                    <ToggleButton x:Name="HeaderSite"
                                                  Cursor="Hand"
                                                  ContentTemplate="{TemplateBinding HeaderTemplate}"
                                                  Content="{TemplateBinding Header}" Foreground="{TemplateBinding Foreground}"
                                                  FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}"
                                                  FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}"
                                                  FontFamily="{TemplateBinding FontFamily}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                  MinWidth="0" 
                                                  MinHeight="0" 
                                                  Padding="{TemplateBinding Padding}" 
                                                  VerticalContentAlignment="Center">
                                        <ToggleButton.Style>
                                            <Style TargetType="{x:Type ToggleButton}">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                            <Border Padding="{TemplateBinding Padding}" Background="Transparent">
                                                                <StackPanel Orientation="Horizontal" Background="Transparent">
                                                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"  />
                                                                    <Path x:Name="arrow" 
                                                                          Data="M170.263273 747.101091C90.949818 667.554909 46.545455 574.836364 46.545455 519.586909v-13.218909c0-111.616 180.642909-376.087273 465.454545-376.087273 82.990545 0 156.346182 22.109091 219.368727 55.761455l-52.317091 52.317091A390.190545 390.190545 0 0 0 512 200.098909c-240.221091 0-395.636364 227.560727-395.636364 306.269091v13.218909c0 38.493091 37.329455 112.453818 103.330909 178.036364l-49.431272 49.477818zM977.454545 505.809455v13.777454c-0.977455 115.060364-177.803636 376.040727-465.454545 376.040727-98.769455 0-184.552727-32.069818-255.022545-78.382545L106.123636 968.145455a34.816 34.816 0 0 1-49.338181 0 34.909091 34.909091 0 0 1 0-49.384728L917.876364 57.716364a34.909091 34.909091 0 1 1 49.384727 49.384727l-143.080727 143.080727c97.559273 84.014545 152.669091 192.046545 153.274181 255.627637z m-365.195636-43.752728l-151.226182 151.179637c15.36 7.959273 32.488727 12.8 50.920728 12.8 62.370909 0 113.105455-50.734545 113.105454-113.105455a109.195636 109.195636 0 0 0-12.8-50.874182z m295.377455 44.032c-0.465455-48.733091-49.431273-137.122909-132.933819-206.475636l-111.616 111.662545c19.828364 29.090909 31.883636 63.860364 31.883637 101.655273a183.109818 183.109818 0 0 1-182.923637 182.923636c-37.841455 0-72.610909-12.055273-101.701818-31.930181l-102.493091 102.493091c57.576727 35.141818 126.231273 59.345455 204.194909 59.345454 236.404364 0 394.845091-218.158545 395.636364-306.501818v-13.172364zM512 399.872c1.722182 0 3.304727 0.418909 5.026909 0.512l58.321455-58.321455A180.270545 180.270545 0 0 0 512 330.053818a183.109818 183.109818 0 0 0-182.923636 182.923637c0 22.341818 4.608 43.566545 11.962181 63.348363l58.321455-58.321454c0-1.722182-0.465455-3.304727-0.465455-5.026909 0-62.370909 50.734545-113.105455 113.105455-113.105455z" 
                                                                          HorizontalAlignment="Left"  
                                                                          SnapsToDevicePixels="False" 
                                                                          Fill="{DynamicResource BackgroundTextBrush}"
                                                                          Stroke="{DynamicResource BackgroundTextBrush}" 
                                                                          StrokeThickness="0" 
                                                                          VerticalAlignment="Center" 
                                                                          Stretch="Uniform"
                                                                          Width="16" Height="16"
                                                                          Margin="10 0 0 0" />
                                                                </StackPanel>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsChecked" Value="True">
                                                                    <Setter Property="Visibility" TargetName="arrow" Value="Collapsed"></Setter>
                                                                </Trigger>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter Property="Visibility" TargetName="arrow" Value="Visible"></Setter>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>
                                    <ContentPresenter x:Name="ExpandSite" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" DockPanel.Dock="Bottom" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </StackPanel>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsExpanded" Value="True">
                                    <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>



            <system:Double x:Key="ServerItemHeight">40</system:Double>



            <Style TargetType="ListBoxItem">
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Grid Name="Grid" FocusVisualStyle="{x:Null}" Background="{DynamicResource BackgroundBrush}">
                                <Grid.Style>
                                    <Style TargetType="Grid">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Server.Id}" Value="0">
                                                <Setter Property="Visibility" Value="Collapsed"></Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Grid.Style>

                                <Border x:Name="GridContainer"></Border>
                                <ContentPresenter Content="{TemplateBinding ContentControl.Content}"
                                                  ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                                  ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                                  HorizontalAlignment="Stretch"
                                                  VerticalAlignment="Stretch"
                                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="IsSelected" Value="True" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <EventSetter Event="MouseMove" Handler="listboxItem_PreviewMouseMoveEvent"/>
                <EventSetter Event="Drop" Handler="listboxItem_OnDrop"/>
                <Setter Property="AllowDrop" Value="true"/>
            </Style>

            <DataTemplate x:Key="DataTemplateForServerCards" DataType="view:ProtocolBaseViewModel">
                <Grid>
                    <Grid.Style>
                        <Style TargetType="Grid">
                            <Setter Property="Height" Value="164"></Setter>
                            <Setter Property="Width" Value="165"></Setter>
                        </Style>
                    </Grid.Style>
                    <controls:ServerCardItem ProtocolBaseViewModel="{Binding}">
                    </controls:ServerCardItem>
                </Grid>
            </DataTemplate>


            <DataTemplate x:Key="DataTemplateForServerList" DataType="view:ProtocolBaseViewModel">
                <Grid Name="Grid" FocusVisualStyle="{x:Null}" Background="{DynamicResource BackgroundBrush}">
                    <Grid.InputBindings>
                        <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding CmdConnServer}"></MouseBinding>
                        <MouseBinding MouseAction="RightClick" Command="{Binding CmdEditServer}"></MouseBinding>
                    </Grid.InputBindings>
                    <Border x:Name="GridContainer"></Border>
                    <controls:ServerListItem ProtocolBaseViewModel="{Binding}" MinHeight="{StaticResource ServerItemHeight}"></controls:ServerListItem>
                </Grid>
                <DataTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" TargetName="GridContainer" Value="{DynamicResource PrimaryTextBrush}"></Setter>
                        <Setter Property="Opacity" Value="0.2" TargetName="GridContainer" />
                    </Trigger>
                </DataTemplate.Triggers>
            </DataTemplate>

            <Style x:Key="ServerListStyle" TargetType="ListBox">
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />

                <Setter Property="ItemTemplate" Value="{StaticResource DataTemplateForServerList}"></Setter>
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel IsVirtualizing="True"
                                                    ScrollUnit="Pixel"
                                                    VirtualizationMode="Recycling"
                                                    CacheLengthUnit="Item"
                                                    Margin="0 0 0 30"/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>

                <Setter Property="Margin">
                    <Setter.Value>
                        <Thickness Top="{StaticResource ServerItemHeight}"></Thickness>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <DataTrigger Binding="{Binding ListPageIsCardView}" Value="True">
                        <Setter Property="ItemsPanel">
                            <Setter.Value>
                                <ItemsPanelTemplate>
                                    <controls2:VirtualizingWrapPanel IsVirtualizing="True"
                                                                     ScrollUnit="Item"
                                                                     SpacingMode="None"
                                                                     VirtualizationMode="Recycling"
                                                                     CanHorizontallyScroll="False"
                                                                     MouseWheelDelta="1"
                                                                     MouseWheelDeltaItem="1"
                                                                     CacheLengthUnit="Item"
                                                                     Orientation="Vertical" Width="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType=ListBox}, Path=ActualWidth}" Margin="15 10 0 20"/>
                                </ItemsPanelTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="ItemTemplate" Value="{StaticResource DataTemplateForServerCards}"></Setter>
                        <Setter Property="Margin" Value="0"></Setter>
                    </DataTrigger>
                </Style.Triggers>
            </Style>


            <serverList:ConverterTagName x:Key="ConverterTagName" />
            <serverList:ConverterGroupIsSelected x:Key="ConverterGroupIsSelected" />
        </ResourceDictionary>
    </UserControl.Resources>






    <Grid Background="{DynamicResource PrimaryMidBrush}" Grid.IsSharedSizeScope="True">
        <Grid Margin="0 21 0 0" Background="{DynamicResource BackgroundBrush}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="*" MinHeight="300"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
            </Grid.RowDefinitions>

            <!-- Tag indicator: popup when any tag which not in shown tag list is selected-->
            <Grid Grid.Row="0" Height="40">
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="VerticalAlignment" Value="Top"></Setter>
                        <Setter Property="Visibility" Value="Collapsed"></Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsTagFiltersShown}" Value="True">
                                <Setter Property="Visibility" Value="Visible"></Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>

                <ItemsControl VerticalAlignment="Center" HorizontalAlignment="Center" ItemsSource="{Binding TagFilters}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate DataType="model:TagFilter">
                            <Border VerticalAlignment="Center" Background="{DynamicResource AccentMidBrush}" CornerRadius="5" Margin="3 0">
                                <Grid ToolTip="{Binding TagName, Converter={StaticResource ConverterTagName}}">
                                    <TextBlock Text="{Binding TagName, Converter={StaticResource ConverterTagName}}" Foreground="{DynamicResource AccentTextBrush}" 
                                               VerticalAlignment="Center" HorizontalAlignment="Center"
                                               Margin="5 5 15 5">
                                        <TextBlock.Resources>
                                            <Style TargetType="TextBlock">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsExcluded}" Value="True">
                                                        <Setter Property="TextDecorations">
                                                            <Setter.Value>
                                                                <TextDecorationCollection>
                                                                    <TextDecoration Location="Strikethrough">
                                                                        <TextDecoration.Pen>
                                                                            <Pen Brush="{DynamicResource PrimaryMidBrush}" Thickness="3"></Pen>
                                                                        </TextDecoration.Pen>
                                                                    </TextDecoration>
                                                                </TextDecorationCollection>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Resources>
                                    </TextBlock>
                                    <Button Width="10" 
                                            Height="10" 
                                            Tag="{Binding TagName}"
                                            Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=serverList:ServerListPageView}, Path=DataContext.CmdTagRemove}"
                                            CommandParameter="{Binding TagName}"
                                            Style="{StaticResource ButtonBarAccentStyle}"
                                            HorizontalAlignment="Right"
                                            attachProperty:VisionElement.Opacity="0.5"
                                            attachProperty:VisionElement.OpacityAccent="0.9"
                                            Margin="0 0 5 0">
                                        <Grid Height="10" Width="8">
                                            <Path Data="F1 M 47.910156 -44.000000 L 87.183594 -4.683594 L 83.316406 -0.816406 L 44.000000 -40.089844 L 4.683594 -0.816406 L 0.816406 -4.683594 L 40.089844 -44.000000 L 0.816406 -83.316406 L 4.683594 -87.183594 L 44.000000 -47.910156 L 83.316406 -87.183594 L 87.183594 -83.316406 Z "
                                                          Stroke="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType=Button}}"
                                                          Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType=Button}}"
                                                          StrokeThickness="2" Stretch="Uniform" />
                                        </Grid>
                                    </Button>
                                </Grid>
                            </Border>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </Grid>


            <!-- server list-->
            <Grid Grid.Row="1">

                <Grid Name="GridHeader" Height="{StaticResource ServerItemHeight}" VerticalAlignment="Top" ZIndex="999">
                    <Grid.Style>
                        <Style TargetType="Grid">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding VmServerList.Count}" Value="0">
                                    <Setter Property="Visibility" Value="Collapsed"></Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ListPageIsCardView}" Value="True">
                                    <Setter Property="Visibility" Value="Collapsed"></Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                    <Grid>
                        <Grid.Margin>
                            <Thickness Right="{StaticResource ScrollBarWidthMouseOver}"></Thickness>
                        </Grid.Margin>
                        <Border Background="{DynamicResource BackgroundBrush}">
                            <Border.Margin>
                                <Thickness Right="{StaticResource ScrollBarWidthMouseOver}"></Thickness>
                            </Border.Margin>
                        </Border>
                    </Grid>
                    <Grid VerticalAlignment="Center">
                        <Grid.Margin>
                            <Thickness Right="{StaticResource ScrollBarWidthMouseOver}"></Thickness>
                        </Grid.Margin>
                        <Grid.Resources>
                            <Style TargetType="Path" x:Key="HeaderPathStyle">
                                <Setter Property="Visibility" Value="Hidden" />
                                <Setter Property="StrokeThickness" Value="1" />
                                <Setter Property="Width" Value="20" />
                                <Setter Property="HorizontalAlignment" Value="Center" />
                                <Setter Property="Margin" Value="5,0,5,0" />
                                <Setter Property="SnapsToDevicePixels" Value="True" />
                            </Style>
                        </Grid.Resources>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Selector"></ColumnDefinition>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Protocol" MinWidth="100"></ColumnDefinition>
                            <ColumnDefinition Width="40" SharedSizeGroup="Span"></ColumnDefinition>
                            <ColumnDefinition Width="300" SharedSizeGroup="Name"></ColumnDefinition>
                            <ColumnDefinition Width="200" SharedSizeGroup="Tags"></ColumnDefinition>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="BriefNote"></ColumnDefinition>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Address"></ColumnDefinition>
                        </Grid.ColumnDefinitions>

                        <CheckBox Margin="11 0" Width="20" Height="20" HorizontalAlignment="Left" 
                                          IsChecked="{Binding IsSelectedAll, Mode=TwoWay}"
                                          x:Name="CheckBoxSelectedAll" 
                                          Click="ItemsCheckBox_OnClick"
                                          >
                        </CheckBox>

                        <!--protocol name-->
                        <Button Grid.Column="1" HorizontalContentAlignment="Left" Style="{StaticResource ButtonBarPrimaryStyle}"
                                                         Margin="0 0 10 0"
                                                         attachProperty:VisionElement.BorderCornerRadius="{StaticResource DefaultCornerRadius}"
                                                         Background="{DynamicResource BackgroundBrush}"
                                                         Foreground="{DynamicResource BackgroundTextBrush}"
                                                         Command="{Binding CmdReOrder}" CommandParameter="{x:Static service:EnumServerOrderBy.ProtocolAsc}">
                            <Grid>
                                <Path Data="M 7,3 L 13,3 L 10,0 L 7,3" Fill="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=Foreground}">
                                    <Path.Style>
                                        <Style TargetType="Path" BasedOn="{StaticResource HeaderPathStyle}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ServerOrderBy}" Value="{x:Static service:EnumServerOrderBy.ProtocolAsc}">
                                                    <Setter Property="Visibility" Value="Visible"></Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Path.Style>
                                </Path>
                                <Path Data="M 7,0 L 10,3 L 13,0 L 7,0" Fill="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=Foreground}">
                                    <Path.Style>
                                        <Style TargetType="Path" BasedOn="{StaticResource HeaderPathStyle}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ServerOrderBy}" Value="{x:Static service:EnumServerOrderBy.ProtocolDesc}">
                                                    <Setter Property="Visibility" Value="Visible"></Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Path.Style>
                                </Path>
                                <TextBlock Margin="5" HorizontalAlignment="Left" Text="{DynamicResource Protocol}" Foreground="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=Foreground}"></TextBlock>
                            </Grid>
                        </Button>

                        <!--display name-->
                        <Button Grid.Column="3" HorizontalContentAlignment="Left" Style="{StaticResource ButtonBarPrimaryStyle}"
                                Margin="0 0 10 0"
                                attachProperty:VisionElement.BorderCornerRadius="{StaticResource DefaultCornerRadius}"
                                Background="{DynamicResource BackgroundBrush}"
                                Foreground="{DynamicResource BackgroundTextBrush}"
                                Command="{Binding CmdReOrder}" CommandParameter="{x:Static service:EnumServerOrderBy.NameAsc}">
                            <Grid>
                                <Path Data="M 7,3 L 13,3 L 10,0 L 7,3" Fill="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=Foreground}">
                                    <Path.Style>
                                        <Style TargetType="Path" BasedOn="{StaticResource HeaderPathStyle}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ServerOrderBy}" Value="{x:Static service:EnumServerOrderBy.NameAsc}">
                                                    <Setter Property="Visibility" Value="Visible"></Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Path.Style>
                                </Path>
                                <Path Data="M 7,0 L 10,3 L 13,0 L 7,0" Fill="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=Foreground}">
                                    <Path.Style>
                                        <Style TargetType="Path" BasedOn="{StaticResource HeaderPathStyle}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ServerOrderBy}" Value="{x:Static service:EnumServerOrderBy.NameDesc}">
                                                    <Setter Property="Visibility" Value="Visible"></Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Path.Style>
                                </Path>
                                <TextBlock Margin="5" HorizontalAlignment="Left" Text="{DynamicResource Name}" Foreground="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=Foreground}"></TextBlock>
                            </Grid>
                        </Button>

                        <!--brief note -->
                        <Grid Grid.Column="5" VerticalAlignment="Center" HorizontalAlignment="Stretch" Margin="0 0 10 0">
                            <TextBlock Text="{DynamicResource Note}" 
                                               Margin="25 0 0 0" 
                                               Visibility="{Binding BriefNoteVisibility}" 
                                               Foreground="{DynamicResource BackgroundTextBrush}"
                                               VerticalAlignment="Center"></TextBlock>
                            <Grid HorizontalAlignment="Left" Margin="1 0">
                                <Button Width="20" Height="20"
                                        Style="{StaticResource ButtonBarPrimaryStyle}"
                                        Background="Transparent"
                                        attachProperty:VisionElement.BackgroundAccent="Transparent"
                                        attachProperty:VisionElement.BackgroundOnMouseDown="Transparent"
                                        HorizontalAlignment="Right"
                                        Visibility="{Binding BriefNoteVisibility}"
                                        Foreground="{DynamicResource BackgroundTextBrush}"
                                        attachProperty:VisionElement.ForegroundAccent="{DynamicResource BackgroundTextBrush}"
                                        attachProperty:VisionElement.ForegroundOnMouseDown="{DynamicResource BackgroundTextBrush}"
                                        attachProperty:VisionElement.Opacity="0.5"
                                        attachProperty:VisionElement.OpacityAccent="0.9"
                                        Command="{Binding CmdHideNoteField}" >
                                    <Grid Width="18">
                                        <Path Data="M989.866667 234.666667h-490.666667c-17.066667 0-34.133333-21.333333-34.133333-42.666667 0-25.6 12.8-42.666667 34.133333-42.666667h490.666667c17.066667 0 34.133333 17.066667 34.133333 42.666667 0 21.333333-12.8 42.666667-34.133333 42.666667z m-473.6 128h465.066666c25.6 0 46.933333 21.333333 46.933334 42.666666 0 25.6-21.333333 42.666667-46.933334 42.666667H516.266667c-25.6 0-46.933333-17.066667-46.933334-42.666667s21.333333-42.666667 46.933334-42.666666z m0 298.666666c-25.6 0-46.933333-21.333333-46.933334-42.666666 0-25.6 21.333333-42.666667 46.933334-42.666667h465.066666c25.6 0 46.933333 17.066667 46.933334 42.666667s-21.333333 42.666667-46.933334 42.666666H516.266667z m4.266666 128h452.266667c29.866667 0 51.2 17.066667 51.2 42.666667s-21.333333 42.666667-51.2 42.666667h-452.266667c-29.866667 0-51.2-17.066667-51.2-42.666667s21.333333-42.666667 51.2-42.666667z m-192 25.6c-17.066667 17.066667-46.933333 17.066667-64 0l-251.733333-273.066666c-17.066667-17.066667-17.066667-51.2 0-68.266667l251.733333-273.066667c17.066667-17.066667 46.933333-17.066667 64 0s17.066667 51.2 0 68.266667l-221.866666 238.933333 221.866666 238.933334c17.066667 21.333333 17.066667 51.2 0 68.266666z"
                                                  Stroke="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType=Button}}"
                                                  Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType=Button}}"
                                                  StrokeThickness="0" Stretch="Uniform" />
                                    </Grid>
                                </Button>
                                <Button Width="20" Height="20"
                                        ToolTip="{DynamicResource Note}"
                                        Background="Transparent"
                                        attachProperty:VisionElement.BackgroundAccent="Transparent"
                                        attachProperty:VisionElement.BackgroundOnMouseDown="Transparent"
                                        HorizontalAlignment="Right"
                                        Foreground="{DynamicResource BackgroundTextBrush}"
                                        attachProperty:VisionElement.ForegroundAccent="{DynamicResource BackgroundTextBrush}"
                                        attachProperty:VisionElement.ForegroundOnMouseDown="{DynamicResource BackgroundTextBrush}"
                                        attachProperty:VisionElement.Opacity="0.5"
                                        attachProperty:VisionElement.OpacityAccent="0.9"
                                        Command="{Binding CmdShowNoteField}" >
                                    <Button.Style>
                                        <Style TargetType="Button" BasedOn="{StaticResource ButtonBarPrimaryStyle}">
                                            <Setter Property="Visibility" Value="Visible"></Setter>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding BriefNoteVisibility}" Value="Visible">
                                                    <Setter Property="Visibility" Value="Collapsed"></Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                    <Grid Width="18">
                                        <Path Data="M8.533333 192c0-25.6 17.066667-42.666667 34.133334-42.666667h490.666666c21.333333 0 34.133333 17.066667 34.133334 42.666667 0 21.333333-17.066667 42.666667-34.133334 42.666667h-490.666666c-21.333333 0-34.133333-21.333333-34.133334-42.666667z m550.4 213.333333c0 25.6-21.333333 42.666667-46.933333 42.666667h-465.066667c-25.6 0-46.933333-17.066667-46.933333-42.666667 0-21.333333 21.333333-42.666667 46.933333-42.666666h465.066667c25.6 0 46.933333 17.066667 46.933333 42.666666z m-507.733333 256c-25.6 0-46.933333-17.066667-46.933333-42.666666s21.333333-42.666667 46.933333-42.666667h465.066667c25.6 0 46.933333 17.066667 46.933333 42.666667 0 21.333333-21.333333 42.666667-46.933333 42.666666h-465.066667z m507.733333 170.666667c0 25.6-21.333333 42.666667-51.2 42.666667h-452.266666c-29.866667 0-51.2-17.066667-51.2-42.666667s21.333333-42.666667 51.2-42.666667h452.266666c29.866667 0 51.2 17.066667 51.2 42.666667z m140.8-85.333333l221.866667-238.933334-221.866667-238.933333c-17.066667-17.066667-17.066667-51.2 0-68.266667 17.066667-17.066667 46.933333-17.066667 64 0l251.733334 273.066667c17.066667 17.066667 17.066667 51.2 0 68.266667l-251.733334 273.066666c-17.066667 17.066667-46.933333 17.066667-64 0-17.066667-17.066667-17.066667-46.933333 0-68.266666z"
                                                  Stroke="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType=Button}}"
                                                  Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType=Button}}"
                                                  StrokeThickness="0" Stretch="Uniform" />
                                    </Grid>
                                </Button>
                            </Grid>
                        </Grid>

                        <!--address-->
                        <Button Grid.Column="6" HorizontalContentAlignment="Left" Style="{StaticResource ButtonBarPrimaryStyle}"
                                Margin="0 0 10 0"
                                attachProperty:VisionElement.BorderCornerRadius="{StaticResource DefaultCornerRadius}"
                                Background="{DynamicResource BackgroundBrush}"
                                Foreground="{DynamicResource BackgroundTextBrush}"
                                Command="{Binding CmdReOrder}" CommandParameter="{x:Static service:EnumServerOrderBy.AddressAsc}">
                            <Grid>
                                <Path Data="M 7,3 L 13,3 L 10,0 L 7,3" Fill="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=Foreground}">
                                    <Path.Style>
                                        <Style TargetType="Path" BasedOn="{StaticResource HeaderPathStyle}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ServerOrderBy}" Value="{x:Static service:EnumServerOrderBy.AddressAsc}">
                                                    <Setter Property="Visibility" Value="Visible"></Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Path.Style>
                                </Path>
                                <Path Data="M 7,0 L 10,3 L 13,0 L 7,0" Fill="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=Foreground}">
                                    <Path.Style>
                                        <Style TargetType="Path" BasedOn="{StaticResource HeaderPathStyle}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ServerOrderBy}" Value="{x:Static service:EnumServerOrderBy.AddressDesc}">
                                                    <Setter Property="Visibility" Value="Visible"></Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Path.Style>
                                </Path>
                                <TextBlock Margin="5" HorizontalAlignment="Left" Text="{DynamicResource Target}" Foreground="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=Foreground}"></TextBlock>
                            </Grid>
                        </Button>
                    </Grid>
                </Grid>

                <ListBox Name="LvServerCards"
                         HorizontalContentAlignment="Stretch"
                         SelectedItem="{Binding SelectedServerViewModelListItem}"
                         ItemsSource="{Binding Source={StaticResource ServerListItemSource}}"
                         BorderThickness="0" Background="Transparent"
                         ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                         VirtualizingPanel.CacheLengthUnit="Item"
                         VirtualizingPanel.CacheLength="5"
                         VirtualizingPanel.ScrollUnit="Item"
                         VirtualizingPanel.IsVirtualizing="True"
                         Style="{DynamicResource ServerListStyle}">

                    <ListBox.GroupStyle>
                        <GroupStyle>
                            <GroupStyle.ContainerStyle>
                                <Style TargetType="{x:Type GroupItem}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type GroupItem}">
                                                <Expander IsExpanded="True" 
                                                          Background="{DynamicResource BackgroundBrush}" 
                                                          Foreground="{DynamicResource BackgroundTextBrush}" 
                                                          BorderThickness="0">
                                                    <Expander.Header>
                                                        <StackPanel Orientation="Horizontal">

                                                            <CheckBox Margin="6 0 10 0" Width="20" Height="20" HorizontalAlignment="Left"
                                                                      x:Name="HeaderCheckBox" 
                                                                      Tag="{Binding Name}"
                                                                      Click="ItemsCheckBox_OnClick"
                                                                      >
                                                            </CheckBox>

                                                            <TextBlock FontWeight="Bold" 
                                                                       FontSize="16"
                                                                       Text="{Binding Path=Name}" 
                                                                       Margin="5,0,0,0"/>
                                                        </StackPanel>
                                                    </Expander.Header>
                                                    <Expander.Content>
                                                        <ItemsPresenter />
                                                    </Expander.Content>
                                                </Expander>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </GroupStyle.ContainerStyle>
                        </GroupStyle>
                    </ListBox.GroupStyle>
                </ListBox>


                <!-- footer: show detail of a server -->
                <Grid Name="GridBottom" VerticalAlignment="Bottom" Height="30" Background="{DynamicResource PrimaryMidBrush}" IsHitTestVisible="False">
                    <Grid.Style>
                        <Style TargetType="Grid">
                            <Setter Property="Opacity" Value="0.9"></Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=LvServerCards, Path=SelectedItem}" Value="{x:Null}">
                                    <Setter Property="Opacity" Value="0"></Setter>
                                </DataTrigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Opacity" Value="0"></Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <StackPanel.Resources>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource TextBlockBase}">
                                <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"></Setter>
                                <Setter Property="Margin" Value="0 0 5 0"></Setter>
                            </Style>
                        </StackPanel.Resources>
                        <TextBlock Text="{Binding SelectedServerViewModelListItem.Server.DisplayName}"></TextBlock>
                        <TextBlock Text="{Binding SelectedServerViewModelListItem.Server.SubTitle}"></TextBlock>
                    </StackPanel>
                </Grid>
            </Grid>


            <!-- tooltip for how to add -->
            <Border Grid.Row="1" HorizontalAlignment="Right">
                <Border.Style>
                    <Style TargetType="Border">
                        <Setter Property="Visibility" Value="Collapsed"></Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding VmServerList.Count}" Value="0">
                                <Setter Property="Visibility" Value="Visible"></Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <StackPanel>
                    <Path Fill="{DynamicResource BackgroundTextBrush}" 
                          Margin="25 10 30 5" Width="50" HorizontalAlignment="Right"
                          Stretch="UniformToFill" Data="M 70.3711 1.2207 L 63.1409 2.666 L 68.054 2.78 C 61.006 12.645 49.14 12.505 47 24 C 46.938 24.449 47.885 24.549 48 24 C 50.066 12.953 62.38 12.673 68.819 3.201 L 69 8 Z" />
                    <TextBlock Margin="0 0 10 0" Foreground="{DynamicResource BackgroundTextBrush}" FontSize="22" FontWeight="Bold">Add new session</TextBlock>
                </StackPanel>
            </Border>


            <!-- popup when any item is selected-->
            <Grid Grid.Row="2" Background="{DynamicResource PrimaryMidBrush}" Height="40">
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="Visibility" Value="Visible"></Setter>
                        <Setter Property="Margin" Value="0 0 0 -50"></Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsAnySelected}" Value="True">
                                <Setter Property="Visibility" Value="Visible"></Setter>
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ThicknessAnimationUsingKeyFrames BeginTime="0:0:0" Storyboard.TargetProperty="Margin" AccelerationRatio="0.9">
                                                <SplineThicknessKeyFrame KeyTime="0:0:0.0" Value="0,0,0,-50" />
                                                <SplineThicknessKeyFrame KeyTime="0:0:0.400" Value="0,0,0,0" />
                                            </ThicknessAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ThicknessAnimationUsingKeyFrames BeginTime="0:0:0" Storyboard.TargetProperty="Margin">
                                                <SplineThicknessKeyFrame KeyTime="0:0:0.0" Value="0,0,0,0" />
                                                <SplineThicknessKeyFrame KeyTime="0:0:0.200" Value="0,0,0,-50" />
                                            </ThicknessAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>

                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                    <Button Height="30" MinWidth="80" Margin="5 0" Content="{DynamicResource Cancel}" Command="{Binding CmdCancelSelected}"></Button>
                    <TextBlock Text="{DynamicResource server_editor_multi_selected_count}" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="{DynamicResource PrimaryTextBrush}"></TextBlock>
                    <TextBlock Text="{Binding SelectedCount}" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="{DynamicResource PrimaryTextBrush}" Margin="5 0 0 0"></TextBlock>
                </StackPanel>

                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button Height="30" MinWidth="80" Margin="5 0 0 0" Content="{DynamicResource Connect}" Command="{Binding CmdConnectSelected}"></Button>
                    <Button Height="30" MinWidth="80" Margin="5 0 0 0" Content="{DynamicResource Edit}" Command="{Binding CmdMultiEditSelected}"></Button>
                    <Button Height="30" MinWidth="80" Margin="5 0 0 0" Content="{DynamicResource Delete}" Command="{Binding CmdDeleteSelected}"></Button>
                    <Button Height="30" MinWidth="80" Margin="5 0" Content="{DynamicResource Export}" Command="{Binding CmdExportSelectedToJson}"></Button>
                </StackPanel>
            </Grid>
        </Grid>







        <!-- tag list: the page to config which tag should be display. -->
        <ContentControl s:View.Model="{Binding TagListViewModel}">
            <ContentControl.Style>
                <Style TargetType="ContentControl">
                    <Setter Property="Visibility" Value="Visible"></Setter>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding TagListViewModel}" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Collapsed"></Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ContentControl.Style>
        </ContentControl>






        <!-- tags list -->
        <Grid VerticalAlignment="Top">
            <Border BorderThickness="0 0 0 1" BorderBrush="{DynamicResource AccentMidBrush}" Background="{DynamicResource PrimaryTextBrush}" Height="20">
                <Border.Effect>
                    <DropShadowEffect ShadowDepth="3" Direction="270"  Opacity="0.6" Color="Black"></DropShadowEffect>
                </Border.Effect>
            </Border>

            <Border BorderThickness="0 0 0 2" BorderBrush="{DynamicResource AccentMidBrush}" Background="{DynamicResource PrimaryMidBrush}">
                <Grid Height="20">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Button MinWidth="80"
                                        Command="{Binding CmdShowTabByName}" CommandParameter=""
                                        Content="{DynamicResource All}">
                        <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource ButtonBarPrimaryStyle}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Grid>
                                                <Border Background="{TemplateBinding Background}"
                                                    SnapsToDevicePixels="true">
                                                </Border>
                                                <ContentPresenter
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource AccentLightBrush}"></Setter>
                                        <Setter Property="Foreground" Value="{DynamicResource AccentTextBrush}" />
                                    </Trigger>
                                    <DataTrigger Binding="{Binding SelectedTabName}" Value="">
                                        <Setter Property="Background" Value="{DynamicResource AccentMidBrush}"></Setter>
                                        <Setter Property="Foreground" Value="{DynamicResource AccentTextBrush}" />
                                        <Setter Property="Cursor" Value="Arrow" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding SelectedTabName}" Value="{x:Null}">
                                        <Setter Property="Background" Value="{DynamicResource AccentMidBrush}"></Setter>
                                        <Setter Property="Foreground" Value="{DynamicResource AccentTextBrush}" />
                                        <Setter Property="Cursor" Value="Arrow" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <Button Grid.Column="1"
                            MinWidth="80"
                            Command="{Binding CmdShowTabByName}"
                            CommandParameter="{x:Static serverList:ServerListPageViewModel.TAB_TAGS_LIST_NAME}"
                            BorderThickness="0" Content="{DynamicResource Tags}">
                        <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource ButtonBarPrimaryStyle}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Grid>
                                                <Border Background="{TemplateBinding Background}"
                                                        SnapsToDevicePixels="true">
                                                </Border>
                                                <ContentPresenter
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Background" Value="{DynamicResource AccentMidBrush}" />
                                <Setter Property="Foreground" Value="{DynamicResource AccentTextBrush}" />
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource AccentLightBrush}"></Setter>
                                        <Setter Property="Foreground" Value="{DynamicResource AccentTextBrush}" />
                                    </Trigger>
                                    <DataTrigger Binding="{Binding TagListViewModel}" Value="{x:Null}">
                                        <Setter Property="Background" Value="{DynamicResource PrimaryMidBrush}" />
                                        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
                                        <Setter Property="Cursor" Value="Arrow" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding AppData.TagList.Count}" Value="0">
                                        <Setter Property="Visibility" Value="Collapsed"></Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <ScrollViewer Grid.Column="2" HorizontalScrollBarVisibility="Auto" 
                                  Margin="10 0 0 0"
                                  Height="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType=Grid}, Path=Height}"
                                  controls1:ScrollViewerExtensions.IsHorizontalScrollOnWheelEnabled="true"
                                  attachProperty:VisionElement.ForegroundAccent="{DynamicResource PrimaryTextBrush}"
                                  attachProperty:VisionElement.BackgroundAccent="{DynamicResource PrimaryTextBrush}"
                                  Style="{StaticResource ScrollViewMiniStyle}">
                        <StackPanel Orientation="Horizontal">
                            <ItemsControl
                                    Name="ListBoxTags"
                                    ItemsSource="{Binding AppData.TagList}"
                                    Background="{DynamicResource PrimaryMidBrush}"
                                    Height="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType=ScrollViewer}, Path=Height}"
                                    ScrollViewer.VerticalScrollBarVisibility="Hidden"
                                    ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                                    BorderThickness="0"
                                    Margin="0"
                                    Padding="0">
                                <ItemsControl.Style>
                                    <Style TargetType="ItemsControl">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="ItemsControl">
                                                    <ItemsPresenter />
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ItemsControl.Style>
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal"></StackPanel>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>

                                <ItemsControl.ItemTemplate>
                                    <DataTemplate DataType="model:Tag">
                                        <Grid Tag="{Binding DataContext.TagsPanelViewModel, RelativeSource={RelativeSource AncestorType=serverList:ServerListPageView}}">
                                            <Grid.ContextMenu>
                                                <ContextMenu>
                                                    <MenuItem Header="{DynamicResource Delete}" Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.Tag.CmdTagDelete}" CommandParameter="{Binding}"/>
                                                    <MenuItem Header="{DynamicResource Rename}" Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.Tag.CmdTagRename}" CommandParameter="{Binding}"/>
                                                    <MenuItem Header="{DynamicResource Connect}" Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.Tag.CmdTagConnect}" CommandParameter="{Binding}"/>
                                                    <MenuItem Header="{DynamicResource 'Connect (New window)'}" Command="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.Tag.CmdTagConnectToNewTab}" CommandParameter="{Binding}"/>
                                                </ContextMenu>
                                            </Grid.ContextMenu>
                                            <Button MinWidth="80"
                                                    Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=serverList:ServerListPageView}, Path=DataContext.CmdTagAddIncluded}"
                                                    CommandParameter="{Binding Name}"
                                                    Content="{Binding Name, Converter={StaticResource ConverterTagName}}">
                                                <Button.Style>
                                                    <Style TargetType="Button" BasedOn="{StaticResource ButtonBarPrimaryStyle}">
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type Button}">
                                                                    <Grid>
                                                                        <Border Background="{TemplateBinding Background}" SnapsToDevicePixels="true"></Border>
                                                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                    </Grid>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Style.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter Property="Background" Value="{DynamicResource AccentLightBrush}"></Setter>
                                                                <Setter Property="Foreground" Value="{DynamicResource AccentTextBrush}" />
                                                            </Trigger>
                                                            <DataTrigger Value="True">
                                                                <DataTrigger.Binding>
                                                                    <MultiBinding Converter="{StaticResource ConverterIsEqual}" >
                                                                        <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType=serverList:ServerListPageView}" Path="DataContext.SelectedTabName" Mode="OneWay"></Binding>
                                                                        <Binding Path="Name" Mode="OneWay"></Binding>
                                                                    </MultiBinding>
                                                                </DataTrigger.Binding>
                                                                <Setter Property="Background" Value="{DynamicResource AccentMidBrush}"></Setter>
                                                                <Setter Property="Foreground" Value="{DynamicResource AccentTextBrush}" />
                                                                <Setter Property="Cursor" Value="Arrow" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding IsPinned}" Value="False">
                                                                <Setter Property="Visibility" Value="Collapsed"></Setter>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Button.Style>
                                            </Button>
                                        </Grid>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </StackPanel>
                    </ScrollViewer>

                    <CheckBox Grid.Column="3"
                              Name="CbPopForInExport" 
                              Width="30">
                        <CheckBox.Template>
                            <ControlTemplate>
                                <Border Name="BG" Background="{DynamicResource PrimaryMidBrush}">
                                    <Grid Margin="1" VerticalAlignment="Center">
                                        <Path Data="M 41.888 18.304 L 41.888 23.584 L 23.584 23.584 L 23.584 41.888 L 18.304 41.888 L 18.304 23.584 L 0 23.584 L 0 18.304 L 18.304 18.304 L 18.304 0 L 23.584 0 L 23.584 18.304 Z"
                                              Stretch="Uniform" Name="Path"
                                              Margin="2" Fill="{DynamicResource PrimaryTextBrush}"></Path>
                                    </Grid>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="CheckBox.IsMouseOver" Value="True">
                                        <Setter TargetName="BG" Property="Background" Value="{DynamicResource PrimaryLightBrush}"></Setter>
                                        <Setter TargetName="Path" Property="Margin" Value="1"></Setter>
                                        <Setter TargetName="Path" Property="Fill" Value="{DynamicResource PrimaryTextBrush}"></Setter>
                                    </Trigger>
                                    <Trigger Property="CheckBox.IsChecked" Value="True">
                                        <Setter TargetName="BG" Property="Background" Value="{DynamicResource PrimaryDarkBrush}"></Setter>
                                        <Setter TargetName="Path" Property="Fill" Value="{DynamicResource PrimaryTextBrush}"></Setter>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </CheckBox.Template>
                    </CheckBox>

                    <Popup Grid.Column="2"  Name="PopupMenuInExport"
                           IsOpen="{Binding ElementName=CbPopForInExport, Path=IsChecked}"
                           StaysOpen="False"
                           AllowsTransparency="True"
                           PlacementTarget="{Binding ElementName=CbPopForInExport}">

                        <Border CornerRadius="5" Background="{DynamicResource PrimaryDarkBrush}">
                            <StackPanel Orientation="Vertical">
                                <MenuItem Header="{DynamicResource Add}" Command="{Binding CmdAdd}">
                                    <MenuItem.Icon>
                                        <Path Data="{StaticResource GeometryCross}"
                                              Stretch="Uniform" Name="Path"
                                              Margin="2" Fill="{DynamicResource PrimaryTextBrush}"></Path>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <Separator Style="{StaticResource SeparatorBaseStyle}"/>
                                <MenuItem Header="{DynamicResource import_from_json}" Command="{Binding CmdImportFromJson}">
                                    <MenuItem.Icon>
                                        <Path UseLayoutRounding="True" Data="{StaticResource GeometryCopy}" Fill="{DynamicResource PrimaryTextBrush}" Stretch="Uniform"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="{DynamicResource import_from_mremoteng_csv}" Command="{Binding CmdImportFromCsv}"></MenuItem>
                                <MenuItem Header="{DynamicResource import_from_rdp_file}" Command="{Binding CmdImportFromRdp}"></MenuItem>
                            </StackPanel>
                        </Border>
                    </Popup>
                </Grid>
            </Border>
        </Grid>
    </Grid>
</UserControl>