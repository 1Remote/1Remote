<styles:WindowBase x:Class="_1RM.View.Guidance.GuidanceWindow"
                   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                   xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                   xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                   xmlns:guidance="clr-namespace:_1RM.View.Guidance"
                   xmlns:controls="clr-namespace:Shawn.Utils.Wpf.Controls;assembly=Shawn.Utils.Wpf"
                   xmlns:styles="clr-namespace:Shawn.Utils.WpfResources.Theme.Styles;assembly=Shawn.Utils.WpfResources"
                   xmlns:_1rm="clr-namespace:_1RM"
                   WindowStartupLocation="CenterScreen"
                   ResizeMode="NoResize"
                   WindowStyle="None"
                   AllowsTransparency="True"
                   Background="Transparent"
                   Topmost="True"
                   mc:Ignorable="d"
                   d:DataContext="{d:DesignInstance guidance:GuidanceWindow}"
                   Title="{x:Static _1rm:Assert.APP_DISPLAY_NAME}" Height="600" Width="800">
    <styles:WindowBase.Style>
        <Style TargetType="styles:WindowBase">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="styles:WindowBase">
                        <Border Padding="40" Background="Transparent">
                            <Border CornerRadius="16" Background="{DynamicResource PrimaryMidBrush}">
                                <Border.Effect>
                                    <DropShadowEffect BlurRadius="30" />
                                </Border.Effect>
                                <ContentPresenter ClipToBounds="True" />
                            </Border>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </styles:WindowBase.Style>

    <Grid Margin="16" Name="WinGrid" Background="{DynamicResource PrimaryMidBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>


        <Grid>
            <guidance:Intro x:Name="Grid1"></guidance:Intro>

            <guidance:Settings x:Name="Grid2" DataContext="{Binding}" VerticalAlignment="Center"></guidance:Settings>
        </Grid>

        <Grid Grid.Row="1" VerticalAlignment="Bottom" Height="30" Width="400">

            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                <Border CornerRadius="5" BorderBrush="Gray" BorderThickness="1"  Width="10" Height="10" Margin="5">
                    <Border.Style>
                        <Style TargetType="Border">
                            <Setter Property="Background" Value="{DynamicResource PrimaryMidBrush}"></Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Step}" Value="0">
                                    <Setter Property="Background" Value="{DynamicResource AccentMidBrush}"></Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                </Border>
                <Border CornerRadius="5" BorderBrush="Gray" BorderThickness="1"  Width="10" Height="10" Margin="5">
                    <Border.Style>
                        <Style TargetType="Border">
                            <Setter Property="Background" Value="{DynamicResource PrimaryMidBrush}"></Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Step}" Value="1">
                                    <Setter Property="Background" Value="{DynamicResource AccentMidBrush}"></Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                </Border>
            </StackPanel>

            <Button Padding="0 1 0 0" Width="80" Height="20"
                               BorderThickness="1"
                               Click="ButtonPrevious_OnClick"
                               Content="{DynamicResource Previous}">
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource ButtonPrimaryStyle}">
                        <Setter Property="HorizontalAlignment" Value="Left"></Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Step}" Value="0">
                                <Setter Property="Visibility" Value="Collapsed"></Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>

            <Button Padding="0 1 0 0" Width="80" Height="20"
                               HorizontalAlignment="Right"
                               BorderThickness="1"
                               Click="ButtonNext_OnClick"
                               Content="{DynamicResource Next}">
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource ButtonPrimaryStyle}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Step}" Value="1">
                                <Setter Property="Visibility" Value="Collapsed"></Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>

            <Button Padding="0 1 0 0" Width="80" Height="20"
                               HorizontalAlignment="Right"
                               BorderThickness="1"
                               Click="ButtonExit_OnClick"
                               Content="{DynamicResource Done}">
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource ButtonPrimaryStyle}">
                        <Setter Property="Visibility" Value="Collapsed"></Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Step}" Value="1">
                                <Setter Property="Visibility" Value="Visible"></Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </Grid>

        <StackPanel Grid.Row="0" HorizontalAlignment="Right" VerticalAlignment="Top">
            <StackPanel HorizontalAlignment="Right" VerticalAlignment="Top" Orientation="Horizontal">
                <TextBlock Margin="2" Foreground="{DynamicResource PrimaryTextBrush}" VerticalAlignment="Center">Language:</TextBlock>
                <ComboBox ItemsSource="{Binding SettingsPageViewModel.Languages}"
                          SelectedValuePath="Key"
                          DisplayMemberPath="Value" 
                          SelectedValue="{Binding SettingsPageViewModel.Language}"
                          HorizontalAlignment="Right"
                          Foreground="{DynamicResource PrimaryTextBrush}"
                          Background="{DynamicResource PrimaryMidBrush}"
                          VerticalAlignment="Top"
                          Height="20" Width="150" />
            </StackPanel>
            <TextBlock>
                <Hyperlink controls:HyperlinkHelper.IsOpenExternal="True" NavigateUri="https://github.com/1Remote/1Remote/wiki/Help-wanted-Translation" FontSize="10">
                    <Hyperlink.Style>
                        <Style TargetType="{x:Type Hyperlink}">
                            <Setter Property="Foreground" Value="{DynamicResource AccentMidBrush}"></Setter>
                            <Setter Property="TextBlock.TextDecorations" Value="{x:Null}"></Setter>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="{DynamicResource AccentLightBrush}"></Setter>
                                    <Setter Property="TextBlock.TextDecorations">
                                        <Setter.Value>
                                            <TextDecorationCollection>
                                                <TextDecoration Location="Underline" />
                                            </TextDecorationCollection>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Hyperlink.Style>
                    Can't find your language?
                </Hyperlink>
            </TextBlock>
        </StackPanel>
    </Grid>
</styles:WindowBase>