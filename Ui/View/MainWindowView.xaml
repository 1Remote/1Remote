<styles:WindowChromeBase x:Class="PRM.View.MainWindowView"
                  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                  xmlns:attachProperty="clr-namespace:Shawn.Utils.WpfResources.Theme.AttachProperty;assembly=Shawn.Utils.WpfResources"
                  xmlns:s="https://github.com/canton7/Stylet"
                  xmlns:view="clr-namespace:PRM.View"
                  xmlns:styles="clr-namespace:Shawn.Utils.WpfResources.Theme.Styles;assembly=Shawn.Utils.WpfResources"
                  mc:Ignorable="d"
                  BorderThickness="0"
                  BorderBrush="Transparent"
                  Background="White"
                  KeyDown="MainWindow_OnKeyDown"
                  d:DataContext="{d:DesignInstance view:MainWindowViewModel}"
                  Style="{StaticResource WindowChromeBaseBaseStyle}"
                  Title="PRemoteM" Height="560" Width="900" MinWidth="900" MinHeight="560">
    <styles:WindowChromeBase.Resources>
        <ResourceDictionary>
            <RoutedUICommand x:Key="CommandFocusFilter" Text="Focus on filter" />
        </ResourceDictionary>
    </styles:WindowChromeBase.Resources>
    <styles:WindowChromeBase.CommandBindings>
        <CommandBinding Command="{StaticResource CommandFocusFilter}" Executed="CommandFocusFilter_OnExecuted"></CommandBinding>
    </styles:WindowChromeBase.CommandBindings>
    <styles:WindowChromeBase.InputBindings>
        <!-- map ctrl + f to focus on filter-->
        <KeyBinding Gesture="Ctrl+F" Command="{StaticResource CommandFocusFilter}"></KeyBinding>
    </styles:WindowChromeBase.InputBindings>

    <Grid Background="{DynamicResource BackgroundBrush}">
        <Grid>
            <Grid.Style>
                <Style TargetType="Grid">
                    <Setter Property="Effect">
                        <Setter.Value>
                            <BlurEffect Radius="2" KernelType="Box"></BlurEffect>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=TopLevelViewModel, Mode=OneWay}" Value="{x:Null}">
                            <Setter Property="Effect" Value="{x:Null}"></Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <Grid.RowDefinitions>
                <RowDefinition Height="40"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
            </Grid.RowDefinitions>

            <Grid Background="{DynamicResource PrimaryMidBrush}" Name="WinTitleBar">
                <StackPanel Orientation="Horizontal">
                    <Grid Background="Transparent" Width="24" Height="24" Margin="5">
                        <Image Source="/Resources/Image/Logo/logo64.png"></Image>
                    </Grid>
                    <TextBlock VerticalAlignment="Center" Foreground="{DynamicResource PrimaryTextBrush}" Text="{Binding Title, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" />
                </StackPanel>
            </Grid>

            <!-- System Button Area -->
            <StackPanel Grid.Row="0"
                    Orientation="Horizontal" HorizontalAlignment="Right" Background="{DynamicResource PrimaryMidBrush}">
                <Grid Height="35" VerticalAlignment="Top" Margin="0 0 4 0">
                    <Grid.Style>
                        <Style TargetType="{x:Type Grid}">
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding EditorViewModel}" Value="{x:Null}"></Condition>
                                        <Condition Binding="{Binding ShowAbout}" Value="False"></Condition>
                                        <Condition Binding="{Binding ShowSetting}" Value="False"></Condition>
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetProperty="Opacity" AccelerationRatio="0.9" To="1" Duration="0:0:0.5"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiDataTrigger.EnterActions>
                                    <MultiDataTrigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetProperty="Opacity" AccelerationRatio="0.9" To="0" Duration="0:0:0.5"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiDataTrigger.ExitActions>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                    <ContentControl s:View.Model="{Binding SearchControlViewModel}"></ContentControl>
                </Grid>

                <Grid Width="35" Height="35" Margin="0" VerticalAlignment="Top">
                    <CheckBox Name="CbPopForMenu" Width="35" Height="35" VerticalAlignment="Top" Margin="0">
                        <CheckBox.Template>
                            <ControlTemplate>
                                <Border Name="BG" Background="{DynamicResource PrimaryMidBrush}">
                                    <Grid VerticalAlignment="Center">
                                        <Grid Width="15" Height="15">
                                            <Path Data="F1 M 88.000000 -60.500000 L 0.000000 -60.500000 L 0.000000 -66.000000 L 88.000000 -66.000000 L 88.000000 -60.500000 Z M 88.000000 -16.500000 L 0.000000 -16.500000 L 0.000000                                         -22.000000 L 88.000000 -22.000000 L 88.000000 -16.500000 Z M 88.000000 -38.500000 L 0.000000 -38.500000 L 0.000000 -44.000000 L 88.000000 -44.000000 L 88.000000 -38.500000 Z "
                                              Fill="{DynamicResource PrimaryTextBrush}" Opacity="0.8" StrokeThickness="0.5" Stretch="Fill" />
                                        </Grid>
                                    </Grid>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="CheckBox.IsMouseOver" Value="True">
                                        <Setter TargetName="BG" Property="Background" Value="{DynamicResource PrimaryLightBrush}"></Setter>
                                    </Trigger>
                                    <Trigger Property="CheckBox.IsChecked" Value="True">
                                        <Setter TargetName="BG" Property="Background" Value="{DynamicResource PrimaryDarkBrush}"></Setter>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </CheckBox.Template>
                    </CheckBox>

                    <Grid Width="15" Height="15">
                        <Path Data="F1 M 10 3.4375 C 10.605469 3.4375 11.186523 3.515625 11.743164 3.671875 C 12.299805 3.828125 12.822266 4.049479 13.310547 4.335938 C 13.798828 4.622396 14.241536 4.964193 14.638672 5.361328 C 15.035807 5.758464 15.377604 6.201172 15.664063 6.689453 C 15.950521 7.177734 16.171875 7.700195 16.328125 8.256836 C 16.484375 8.813477 16.5625 9.394531 16.5625 10 C 16.5625 10.605469 16.484375 11.186523 16.328125 11.743164 C 16.171875 12.299805 15.950521 12.822266 15.664063 13.310547 C 15.377604 13.798828 15.035807 14.241537 14.638672 14.638672 C 14.241536 15.035808 13.798828 15.377604 13.310547 15.664063 C 12.822266 15.950521 12.299805 16.171875 11.743164 16.328125 C 11.186523 16.484375 10.605469 16.5625 10 16.5625 C 9.394531 16.5625 8.813477 16.484375 8.256836 16.328125 C 7.700195 16.171875 7.177734 15.950521 6.689453 15.664063 C 6.201172 15.377604 5.758463 15.035808 5.361328 14.638672 C 4.964192 14.241537 4.622396 13.798828 4.335938 13.310547 C 4.049479 12.822266 3.828125 12.299805 3.671875 11.743164 C 3.515625 11.186523 3.4375 10.605469 3.4375 10 C 3.4375 9.394531 3.515625 8.813477 3.671875 8.256836 C 3.828125 7.700195 4.049479 7.177734 4.335938 6.689453 C 4.622396 6.201172 4.964192 5.758464 5.361328 5.361328 C 5.758463 4.964193 6.201172 4.622396 6.689453 4.335938 C 7.177734 4.049479 7.700195 3.828125 8.256836 3.671875 C 8.813477 3.515625 9.394531 3.4375 10 3.4375 Z "
                                      Fill="Red"
                                      Stretch="Uniform"
                                      Width="6"
                                      Margin="0 -3 -3 0"
                                      VerticalAlignment="Top" HorizontalAlignment="Right">
                            <Path.Style>
                                <Style TargetType="Path">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding AboutViewModel.NewVersion}" Value="">
                                            <Setter Property="Visibility" Value="Collapsed"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Path.Style>
                        </Path>
                    </Grid>
                </Grid>

                <Popup Name="PopupMenu"
                   AllowsTransparency="True"
                   IsOpen="{Binding ElementName=CbPopForMenu, Path=IsChecked}"
                   StaysOpen="False"
                   PlacementTarget="{Binding ElementName=CbPopForMenu}">
                    <Border Padding="0 0 4 4">
                        <Border.Effect>
                            <DropShadowEffect Opacity="0.5" ShadowDepth="3"></DropShadowEffect>
                        </Border.Effect>
                        <Grid MinWidth="150" Background="{DynamicResource PrimaryDarkBrush}">
                            <StackPanel>
                                <StackPanel.Resources>
                                    <Style BasedOn="{StaticResource ButtonBarPrimaryStyle}" TargetType="Button">
                                        <Setter Property="Background" Value="{DynamicResource PrimaryDarkBrush}"/>
                                    </Style>
                                </StackPanel.Resources>
                                <Button Command="{Binding CmdGoSysOptionsPage}" 
                                    HorizontalContentAlignment="Left" 
                                    Padding="25 8 0 8"
                                    Content="{DynamicResource Options}"></Button>
                                <Button Command="{Binding CmdToggleCardList}" 
                                    HorizontalContentAlignment="Left" 
                                    Padding="25 8 0 8"
                                    Content="{DynamicResource 'Toggle Cards/List'}"></Button>
                                <Button Command="{Binding CmdGoAboutPage}"
                                    HorizontalContentAlignment="Left" 
                                    Padding="0 8 0 8">
                                    <Grid>
                                        <Grid HorizontalAlignment="Left" Margin="13 0">
                                            <Path Data="F1 M 10 3.4375 C 10.605469 3.4375 11.186523 3.515625 11.743164 3.671875 C 12.299805 3.828125 12.822266 4.049479 13.310547 4.335938 C 13.798828 4.622396 14.241536 4.964193 14.638672 5.361328 C 15.035807 5.758464 15.377604 6.201172 15.664063 6.689453 C 15.950521 7.177734 16.171875 7.700195 16.328125 8.256836 C 16.484375 8.813477 16.5625 9.394531 16.5625 10 C 16.5625 10.605469 16.484375 11.186523 16.328125 11.743164 C 16.171875 12.299805 15.950521 12.822266 15.664063 13.310547 C 15.377604 13.798828 15.035807 14.241537 14.638672 14.638672 C 14.241536 15.035808 13.798828 15.377604 13.310547 15.664063 C 12.822266 15.950521 12.299805 16.171875 11.743164 16.328125 C 11.186523 16.484375 10.605469 16.5625 10 16.5625 C 9.394531 16.5625 8.813477 16.484375 8.256836 16.328125 C 7.700195 16.171875 7.177734 15.950521 6.689453 15.664063 C 6.201172 15.377604 5.758463 15.035808 5.361328 14.638672 C 4.964192 14.241537 4.622396 13.798828 4.335938 13.310547 C 4.049479 12.822266 3.828125 12.299805 3.671875 11.743164 C 3.515625 11.186523 3.4375 10.605469 3.4375 10 C 3.4375 9.394531 3.515625 8.813477 3.671875 8.256836 C 3.828125 7.700195 4.049479 7.177734 4.335938 6.689453 C 4.622396 6.201172 4.964192 5.758464 5.361328 5.361328 C 5.758463 4.964193 6.201172 4.622396 6.689453 4.335938 C 7.177734 4.049479 7.700195 3.828125 8.256836 3.671875 C 8.813477 3.515625 9.394531 3.4375 10 3.4375 Z "
                                          Fill="Red" Stretch="Uniform"
                                          Width="6"
                                          VerticalAlignment="Center" HorizontalAlignment="Center">
                                                <Path.Style>
                                                    <Style TargetType="Path">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding AboutViewModel.NewVersion}" Value="">
                                                                <Setter Property="Visibility" Value="Collapsed"></Setter>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Path.Style>
                                            </Path>
                                        </Grid>
                                        <StackPanel Orientation="Horizontal" Margin="25 0 0 0">
                                            <TextBlock Text="{DynamicResource About}" VerticalAlignment="Center"
                                                   Foreground="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=Foreground}">
                                            </TextBlock>
                                            <Image Source="/Resources/Image/Logo/logo64.png" Width="20" Margin="10 0 0 0"></Image>
                                        </StackPanel>
                                    </Grid>
                                </Button>
                                <Button Command="{s:Action Exit}"
                                    HorizontalContentAlignment="Left" 
                                    Padding="25 8 0 8"
                                    Content="{DynamicResource Exit}"></Button>
                            </StackPanel>
                        </Grid>
                    </Border>
                </Popup>

                <Button Name="BtnMinimize" Style="{StaticResource ButtonBarPrimaryStyle}"
                               Width="35" Height="35" VerticalAlignment="Top" BorderThickness="0">
                    <Rectangle Width="15" Height="1" Stroke="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=Foreground}" StrokeThickness="0.5" />
                </Button>

                <Button Name="BtnMaximize" Style="{StaticResource ButtonBarPrimaryStyle}" Width="35" Height="35" VerticalAlignment="Top">
                    <Grid>
                        <Path Height="15" Width="15"
                          StrokeThickness="0.5" 
                          Stroke="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=Foreground}"
                          Fill="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=Foreground}"
                          Data="F1 M 5.500000 -82.500000 L 82.500000 -82.500000 L 82.500000 -5.500000 L 5.500000 -5.500000 Z M 77.000000 -11.000000 L 77.000000 -77.000000 L 11.000000 -77.000000 L 11.000000 -11.000000 Z "
                          Stretch="Uniform">
                            <Path.Style>
                                <Style TargetType="Path">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}, Path=WindowState}" Value="Maximized">
                                            <Setter Property="Visibility" Value="Hidden"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Path.Style>
                        </Path>

                        <Path Height="15" Width="15"
                          StrokeThickness="1" 
                          Stroke="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=Foreground}"
                          Data="M2,2 L2,0 L8,0 L8,6 L6,6 M0,2 L6,2 L6,8 L0,8 Z"
                          Stretch="Uniform">
                            <Path.Style>
                                <Style TargetType="Path">
                                    <Setter Property="Visibility" Value="Hidden"></Setter>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}, Path=WindowState}" Value="Maximized">
                                            <Setter Property="Visibility" Value="Visible"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Path.Style>
                        </Path>
                    </Grid>
                </Button>

                <Button Name="BtnClose" Width="35" Height="35" VerticalAlignment="Top"
                    Style="{StaticResource ButtonBarPrimaryStyle}"
                    attachProperty:VisionElement.ForegroundAccent="White"
                    attachProperty:VisionElement.BackgroundAccent="Red"
                    attachProperty:VisionElement.ForegroundOnMouseDown="White"
                    attachProperty:VisionElement.BackgroundOnMouseDown="Red">
                    <Path Height="15" Width="15"
                      StrokeThickness="0.5" 
                      Stroke="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=Foreground}"
                      Fill="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Button}, Path=Foreground}"
                      Data="F1 M 47.910156 -44.000000 L 87.183594 -4.683594 L 83.316406 -0.816406 L 44.000000 -40.089844 L 4.683594 -0.816406 L 0.816406 -4.683594 L 40.089844 -44.000000 L 0.816406 -83.316406 L 4.683594 -87.183594 L 44.000000 -47.910156 L 83.316406 -87.183594 L 87.183594 -83.316406 Z "
                      Stretch="Uniform">
                    </Path>
                </Button>
            </StackPanel>


            <!-- Paging Area -->
            <Grid Grid.Row="1">
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="Effect">
                            <Setter.Value>
                                <BlurEffect Radius="2" KernelType="Box"></BlurEffect>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=TopLevelViewModel, Mode=OneWay}" Value="{x:Null}">
                                <Setter Property="Effect" Value="{x:Null}"></Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <ContentControl s:View.Model="{Binding ServerListViewModel}"></ContentControl>
                <ContentControl s:View.Model="{Binding SettingViewModel}">
                    <ContentControl.Style>
                        <Style TargetType="ContentControl">
                            <Setter Property="Visibility" Value="Collapsed"></Setter>
                            <Setter Property="Opacity" Value="0"></Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ShowSetting}" Value="True">
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                    <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <DoubleAnimation Storyboard.TargetProperty="Opacity" AccelerationRatio="0.9" From="0" To="1" Duration="0:0:0.3"/>
                                                <ThicknessAnimation Storyboard.TargetProperty="Margin" SpeedRatio="0.8" From="1000 0 0 0" To="0" Duration="0:0:0.3"></ThicknessAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard >
                                                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                    <DiscreteObjectKeyFrame KeyTime="00:00:0.5" Value="{x:Static Visibility.Collapsed}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <DoubleAnimation Storyboard.TargetProperty="Opacity" AccelerationRatio="0.9" To="0" Duration="0:0:0.3"/>
                                                <ThicknessAnimation Storyboard.TargetProperty="Margin" SpeedRatio="0.9" From="0 0 0 0" To="1000 0 0 0" Duration="0:0:0.3"></ThicknessAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ContentControl.Style>
                </ContentControl>
                <ContentControl s:View.Model="{Binding AboutViewModel}">
                    <ContentControl.Style>
                        <Style TargetType="ContentControl">
                            <Setter Property="Visibility" Value="Collapsed"></Setter>
                            <Setter Property="Opacity" Value="0"></Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ShowAbout}" Value="True">
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                    <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <DoubleAnimation Storyboard.TargetProperty="Opacity" AccelerationRatio="0.9" From="0" To="1" Duration="0:0:0.3"/>
                                                <ThicknessAnimation Storyboard.TargetProperty="Margin" SpeedRatio="0.8" From="1000 0 0 0" To="0" Duration="0:0:0.3"></ThicknessAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard >
                                                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                    <DiscreteObjectKeyFrame KeyTime="00:00:0.5" Value="{x:Static Visibility.Collapsed}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <DoubleAnimation Storyboard.TargetProperty="Opacity" AccelerationRatio="0.9" To="0" Duration="0:0:0.3"/>
                                                <ThicknessAnimation Storyboard.TargetProperty="Margin" SpeedRatio="0.9" From="0 0 0 0" To="1000 0 0 0" Duration="0:0:0.3"></ThicknessAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ContentControl.Style>
                </ContentControl>
                <ContentControl s:View.Model="{Binding EditorViewModel}">
                    <ContentControl.Style>
                        <Style TargetType="ContentControl">
                            <Setter Property="Visibility" Value="Collapsed"></Setter>
                            <Setter Property="Opacity" Value="0"></Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding EditorViewModel}" Value="{x:Null}">
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard >
                                                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                    <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                    <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <DoubleAnimation Storyboard.TargetProperty="Opacity" AccelerationRatio="0.9" To="1" Duration="0:0:0.3"/>
                                                <ThicknessAnimation Storyboard.TargetProperty="Margin" SpeedRatio="0.8" From="1000 0 0 0" To="0" Duration="0:0:0.3"></ThicknessAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ContentControl.Style>
                </ContentControl>
            </Grid>
        </Grid>


        <ContentControl 
            PreviewMouseDown="ProcessingRing_OnPreviewMouseDown"
            MouseUp="WinTitleBar_OnMouseUp"
            PreviewMouseMove="WinTitleBar_OnPreviewMouseMove"
            s:View.Model="{Binding TopLevelViewModel}"></ContentControl>

    </Grid>
</styles:WindowChromeBase>